# Applying the requested changes: removing duplicate logging from button handlers.
import discord
from discord.ext import commands, tasks
from discord import app_commands
import logging
import asyncio
from datetime import datetime, timezone
from config import config
from utils.rate_limiter import safe_send_message
from utils.ticket_state import get_ticket_owner, set_ticket_owner, del_ticket_owner
from handlers.novichok import extract_discord_id
from handlers.steam_api import SteamAPIClient
from utils.logger import get_module_logger
from difflib import SequenceMatcher
import traceback
import re # Import re for regex operations

logger = get_module_logger(__name__)

def _ratio(a: str, b: str) -> float:
    return SequenceMatcher(None, str(a).lower(), str(b).lower()).ratio()  # 0.0..1.0


class ConfirmDeleteView(discord.ui.View):
    def __init__(self, author_id: int = None, deleter_id: int = None):
        super().__init__(timeout=None)
        self.author_id = author_id or 0
        self.deleter_id = deleter_id or 0

    @discord.ui.button(label="‚úÖ –î–∞, —É–¥–∞–ª–∏—Ç—å", style=discord.ButtonStyle.danger, custom_id="confirm_delete_application_v2")
    async def confirm_delete(self, interaction: discord.Interaction, button: discord.ui.Button):
        try:
            await interaction.response.defer(ephemeral=True)
            channel = interaction.channel
            if channel:
                # Use del_ticket_owner from utils.ticket_state
                del_ticket_owner(channel.id)
                await channel.delete(reason=f"–ó–∞—è–≤–∫–∞ —É–¥–∞–ª–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {interaction.user.display_name}")
        except discord.NotFound:
            pass
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∑–∞—è–≤–∫–∏: {e}")
            try:
                await interaction.followup.send("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∑–∞—è–≤–∫–∏.", ephemeral=True)
            except discord.NotFound:
                pass


def get_member_count(guild: discord.Guild) -> str:
    """–ü–æ–ª—É—á–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
    try:
        member_count = guild.member_count
        if member_count:
            return f"{member_count:,}".replace(",", " ")  # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å –ø—Ä–æ–±–µ–ª–∞–º–∏
        return "3800+"  # Fallback –∑–Ω–∞—á–µ–Ω–∏–µ
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {e}")
        return "3800+"


class ApplicationModal(discord.ui.Modal):
    def __init__(self):
        super().__init__(title="üìù –ó–∞—è–≤–∫–∞ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –î–µ—Ä–µ–≤–Ω—é VLG")

        # –ü–æ–ª–µ –¥–ª—è Steam-–ø—Ä–æ—Ñ–∏–ª—è (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ)
        self.steam_profile = discord.ui.TextInput(
            label="üîó –°—Å—ã–ª–∫–∞ –Ω–∞ –≤–∞—à Steam-–ø—Ä–æ—Ñ–∏–ª—å",
            placeholder="https://steamcommunity.com/profiles/76561199488372591/",
            required=True,
            max_length=200,
        )
        self.add_item(self.steam_profile)

        # –ü–æ–ª–µ –¥–ª—è —á–∞—Å–æ–≤ –≤ Rust (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ)
        self.rust_hours = discord.ui.TextInput(
            label="üéÆ –°–∫–æ–ª—å–∫–æ —á–∞—Å–æ–≤ —É –≤–∞—Å –≤ Rust?",
            placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: 110 —á–∞—Å–æ–≤",
            required=False,
            max_length=100,
        )
        self.add_item(self.rust_hours)

    async def on_submit(self, interaction: discord.Interaction):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–∫–∏"""
        user = interaction.user
        guild = interaction.guild

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º Steam-—Å—Å—ã–ª–∫—É
        steam_url = self.steam_profile.value.strip()
        if not steam_url.startswith("https://steamcommunity.com/"):
            await interaction.response.send_message(
                "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—Å—ã–ª–∫—É –Ω–∞ Steam-–ø—Ä–æ—Ñ–∏–ª—å –Ω–∞—á–∏–Ω–∞—é—â—É—é—Å—è —Å https://steamcommunity.com/",
                ephemeral=True,
            )
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–æ–∑—Ä–∞—Å—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ (–º–∏–Ω–∏–º—É–º 2 –¥–Ω—è)
        account_age = (datetime.now(timezone.utc) - user.created_at).days
        if account_age < 2:
            await interaction.response.send_message(
                "‚ùå –í–∞—à Discord –∞–∫–∫–∞—É–Ω—Ç —Å–ª–∏—à–∫–æ–º –º–æ–ª–æ–¥–æ–π. –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç –∞–∫–∫–∞—É–Ω—Ç–∞: 2 –¥–Ω—è.",
                ephemeral=True,
            )
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Ä–æ–ª—å —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_roles = [role.name for role in user.roles]
        if any(
            role in user_roles for role in ["–ù–æ–≤–∏—á–æ–∫", "–ì–æ—Å—Ç—å", "–ñ–∏—Ç–µ–ª—å", "–ì—Ä–∞–∂–¥–∞–Ω–∏–Ω"]
        ):
            await interaction.response.send_message(
                "‚úÖ –í—ã —É–∂–µ —è–≤–ª—è–µ—Ç–µ—Å—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –î–µ—Ä–µ–≤–Ω–∏ VLG!", ephemeral=True
            )
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ—Ç –ª–∏ —É–∂–µ –∞–∫—Ç–∏–≤–Ω–æ–π –∑–∞—è–≤–∫–∏ (–Ω–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–∞–∑–≤–∞–Ω–∏—è –∫–∞–Ω–∞–ª–∞)
        existing_channels = [
            ch
            for ch in guild.channels
            if isinstance(ch, discord.TextChannel)
            and ch.name.startswith(f"new_{user.name.lower()}")
        ]
        if existing_channels:
            await interaction.response.send_message(
                f"‚ùå –£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–∞—è –∑–∞—è–≤–∫–∞: {existing_channels[0].mention}",
                ephemeral=True,
            )
            return

        await interaction.response.defer(ephemeral=True)

        try:
            # –°–æ–∑–¥–∞–µ–º –∫–∞–Ω–∞–ª –¥–ª—è –∑–∞—è–≤–∫–∏
            category = discord.utils.get(
                guild.categories, name="üì¨ –ó–∞—è–≤–∫–∏ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ"
            )
            if not category:
                # –°–æ–∑–¥–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
                category = await guild.create_category("üì¨ –ó–∞—è–≤–∫–∏ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ")
                logger.info(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è –∑–∞—è–≤–æ–∫: {category.name}")

            # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–∞–Ω–∞–ª
            overwrites = {
                guild.default_role: discord.PermissionOverwrite(read_messages=False),
                user: discord.PermissionOverwrite(
                    read_messages=True, send_messages=True
                ),
            }

            # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∞–≤–∞ –¥–ª—è –∞–¥–º–∏–Ω—Å–∫–∏—Ö —Ä–æ–ª–µ–π
            admin_roles = ["–ñ–∏—Ç–µ–ª—å", "–ì—Ä–∞–∂–¥–∞–Ω–∏–Ω"]
            for role_name in admin_roles:
                role = discord.utils.get(guild.roles, name=role_name)
                if role:
                    overwrites[role] = discord.PermissionOverwrite(
                        read_messages=True, send_messages=True
                    )

            # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∞–≤–∞ –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–∞ —Å–µ—Ä–≤–µ—Ä–∞
            if guild.owner:
                overwrites[guild.owner] = discord.PermissionOverwrite(
                    read_messages=True, send_messages=True
                )

            channel_name = f"new_{user.name.lower()}"
            channel = await guild.create_text_channel(
                name=channel_name,
                category=category,
                overwrites=overwrites,
                topic=f"–ó–∞—è–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.display_name} ({user.id})",
            )

            # –°–æ–∑–¥–∞–µ–º embed —Å –∑–∞—è–≤–∫–æ–π
            embed = discord.Embed(
                title="üìù –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ",
                description=f"–ó–∞—è–≤–∫–∞ –æ—Ç {user.mention}",
                color=0x00FF00,
                timestamp=datetime.now(timezone.utc),
            )

            embed.add_field(
                name="üë§ –ó–∞—è–≤–∏—Ç–µ–ª—å",
                value=f"{user.display_name}\n{user.mention}\nID: `{user.id}`",
                inline=True,
            )

            embed.add_field(
                name="üìÖ –î–∞—Ç–∞ –ø–æ–¥–∞—á–∏",
                value=f"{datetime.now().strftime('%d.%m.%Y %H:%M')}",
                inline=True,
            )

            embed.add_field(name="üîó Steam-–ø—Ä–æ—Ñ–∏–ª—å", value=steam_url, inline=False)

            if self.rust_hours.value:
                embed.add_field(
                    name="üéÆ –ß–∞—Å—ã –≤ Rust", value=self.rust_hours.value, inline=True
                )

            embed.set_thumbnail(url=user.display_avatar.url)
            embed.set_footer(text="–î–µ—Ä–µ–≤–Ω—è VLG ‚Ä¢ –°–∏—Å—Ç–µ–º–∞ –∑–∞—è–≤–æ–∫")

            # —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ embed –∑–∞—è–≤–∫–∏:
            await safe_send_message(
                channel,
                content="–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É, –∫–æ–≥–¥–∞ –∏—Å–ø—Ä–∞–≤–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ. –ó–∞–ø—É—â—É –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä–∫—É.",
                view=ReadyButtonView(author_id=user.id),
            )

            # –°–æ–∑–¥–∞–µ–º view —Å –∫–Ω–æ–ø–∫–æ–π —É–¥–∞–ª–µ–Ω–∏—è –∑–∞—è–≤–∫–∏
            delete_view = DeleteApplicationView(user.id)

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞—è–≤–∫—É –≤ –∫–∞–Ω–∞–ª —Å –∫–Ω–æ–ø–∫–æ–π —É–¥–∞–ª–µ–Ω–∏—è
            await safe_send_message(channel, embed=embed, view=delete_view)

            logger.info(f"‚è∞ –ê–Ω–∞–ª–∏–∑ –∑–∞—è–≤–∫–∏ –¥–ª—è {user.display_name} –Ω–∞—á–Ω–µ—Ç—Å—è —Å—Ä–∞–∑—É –∂–µ")

            # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∫–∞–Ω–∞–ª –≤ —Å–∏—Å—Ç–µ–º–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–∏–∫–µ—Ç–æ–≤
            set_ticket_owner(channel.id, user.id)

            # –ò–∑–≤–ª–µ–∫–∞–µ–º —á–∞—Å—ã Rust –∏–∑ –ø–æ–ª—è –µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω–æ
            if self.rust_hours.value:
                # –ò–∑–≤–ª–µ–∫–∞–µ–º —á–∏—Å–ª–æ —á–∞—Å–æ–≤ –∏–∑ —Ç–µ–∫—Å—Ç–∞
                numbers = re.findall(r'\d+', self.rust_hours.value)
                if numbers:
                    try:
                        hours = int(numbers[0])
                        # Assuming get_ctx is a valid function to get context
                        # This part might need adjustment if get_ctx is not globally available or defined elsewhere
                        # For now, keeping it as is based on original code structure.
                        # If get_ctx is not defined, this will cause an error.
                        # ctx = get_ctx(channel.id)
                        # ctx.rust_hours = hours
                        # ctx.author_id = user.id
                        logger.info(f"üéÆ –°–æ—Ö—Ä–∞–Ω–µ–Ω—ã —á–∞—Å—ã Rust –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞—è–≤–∫–∏ {user.display_name}: {hours} —á")
                    except ValueError:
                        logger.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å —á–∞—Å—ã –∏–∑: '{self.rust_hours.value}'")
                else:
                    logger.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å —á–∞—Å—ã –∏–∑: '{self.rust_hours.value}'")

            # –ó–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É –∑–∞—è–≤–∫–∏ —Å –Ω–µ–±–æ–ª—å—à–æ–π –∑–∞–¥–µ—Ä–∂–∫–æ–π

            ticket_handler = interaction.client.get_cog("TicketHandler")
            if not ticket_handler:
                # –ü–æ–ø—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± –ø–æ–ª—É—á–µ–Ω–∏—è
                for cog_name, cog in interaction.client.cogs.items():
                    if hasattr(cog, 'analyze_and_respond_to_application'):
                        ticket_handler = cog
                        logger.info(f"üîç –ù–∞–π–¥–µ–Ω TicketHandler —á–µ—Ä–µ–∑ –ø–æ–∏—Å–∫: {cog_name}")
                        break

            if ticket_handler:
                # –ó–∞–ø—É—Å–∫–∞–µ–º –≤ —Ñ–æ–Ω–µ —á—Ç–æ–±—ã –Ω–µ –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                asyncio.create_task(
                    self._delayed_process_ticket(ticket_handler, channel, user)
                )

            await interaction.followup.send(
                f"‚úÖ **–ó–∞—è–≤–∫–∞ —Å–æ–∑–¥–∞–Ω–∞!**\n\n"
                f"üìã –í–∞—à–∞ –∑–∞—è–≤–∫–∞: {channel.mention}\n"
                f"‚è∞ –û–∂–∏–¥–∞–π—Ç–µ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—è –∑–∞—è–≤–∫–∏\n"
                f"üí¨ –í —Å–∞–º–æ–π –∑–∞—è–≤–∫–µ –ø–∏—à–∏—Ç–µ –æ—Ç–≤–µ—Ç—ã, –ø–µ—Ä–µ—Å–æ–∑–¥–∞–≤–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–µ –Ω–∞–¥–æ",
                ephemeral=True,
            )

            logger.info(
                f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∑–∞—è–≤–∫–∞ –¥–ª—è {user.display_name} –≤ –∫–∞–Ω–∞–ª–µ {channel.name}"
            )

        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞—è–≤–∫–∏ –¥–ª—è {user.display_name}: {e}")
            await interaction.followup.send(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞—è–≤–∫–∏. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –ö–æ–º–µ–Ω–¥–∞—Ç—É—Ä–µ.",
                ephemeral=True,
            )

    async def _delayed_process_ticket(self, ticket_handler, channel, user):
        """–û—Ç–ª–æ–∂–µ–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–∏–∫–µ—Ç–∞"""
        try:
            # –ñ–¥–µ–º 3 —Å–µ–∫—É–Ω–¥—ã —á—Ç–æ–±—ã –∫–∞–Ω–∞–ª –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–ª—Å—è
            await asyncio.sleep(3)

            # üîí –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ó–ê–©–ò–¢–ê: –ø—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω –ª–∏ —É–∂–µ –∫–∞–Ω–∞–ª
            if (
                hasattr(ticket_handler, "_welcomed_channels")
                and channel.id in ticket_handler._welcomed_channels
            ):
                logger.info(
                    f"‚úÖ –ö–∞–Ω–∞–ª {channel.name} —É–∂–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –æ—Ç–ª–æ–∂–µ–Ω–Ω—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É"
                )
                return

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∫–∞–Ω–∞–ª –≤—Å–µ –µ—â–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            if channel and hasattr(channel, "guild") and channel.guild:
                # –í—ã–ø–æ–ª–Ω—è–µ–º –ø–æ–ª–Ω—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É –∑–∞—è–≤–∫–∏ (–≤–∫–ª—é—á–∞–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ + –∞–Ω–∞–ª–∏–∑)
                await ticket_handler.process_new_ticket(channel, user)
                logger.info(f"‚úÖ –ü–æ–ª–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞—è–≤–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –¥–ª—è {user.display_name}")
            else:
                logger.warning(
                    f"‚ö†Ô∏è –ö–∞–Ω–∞–ª {channel.name if channel else 'Unknown'} –±–æ–ª—å—à–µ –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏"
                )

        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ª–æ–∂–µ–Ω–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–∏–∫–µ—Ç–∞: {e}")
            import traceback

            logger.error(f"Traceback: {traceback.format_exc()}")


class DeleteApplicationView(discord.ui.View):
    def __init__(self, author_id: int = None):
        super().__init__(timeout=None)
        self.author_id = author_id or 0

    @discord.ui.button(
        label="üîÑ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–∞—è–≤–∫—É –µ—â—ë —Ä–∞–∑",
        style=discord.ButtonStyle.success,
        custom_id="recheck_application_4",
    )
    async def recheck_application(self, interaction: discord.Interaction, button: discord.ui.Button):
        """–ö–Ω–æ–ø–∫–∞ –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞—è–≤–∫–∏"""
        from utils.ticket_state import get_ticket_owner
        owner_id = get_ticket_owner(interaction.channel.id)
        allowed = {"–ñ–∏—Ç–µ–ª—å", "–ì—Ä–∞–∂–¥–∞–Ω–∏–Ω"}
        is_author = interaction.user.id == (owner_id or self.author_id)
        has_perm = is_author or any(r.name in allowed for r in interaction.user.roles) or (interaction.user.id == interaction.guild.owner_id)
        if not has_perm:
            await interaction.response.send_message("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä–∫–∏.", ephemeral=True)
            return


        # –î–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ø—ã—Ç–∫–∏ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏
        logger.info(
            f"üîÑ –ü–æ–ø—ã—Ç–∫–∞ –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞—è–≤–∫–∏: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {interaction.user.display_name} (ID: {interaction.user.id})"
        )
        logger.info(f"üîç –°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π –∞–≤—Ç–æ—Ä –∑–∞—è–≤–∫–∏ ID: {self.author_id}")
        # –§–∏–ª—å—Ç—Ä—É–µ–º @everyone —á—Ç–æ–±—ã –Ω–µ –ø–∏–Ω–≥–æ–≤–∞—Ç—å –≤—Å–µ—Ö –≤ –ª–æ–≥–∞—Ö
        user_role_names = [role.name for role in interaction.user.roles if role.name != "@everyone"]
        logger.info(
            f"üë§ –†–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user_role_names}"
        )

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∞–≤—Ç–æ—Ä–∞ –∑–∞—è–≤–∫–∏ –∏–∑ –Ω–∞–∑–≤–∞–Ω–∏—è –∫–∞–Ω–∞–ª–∞
        real_author_id = self.author_id
        real_author = None

        # –ü–†–ò–û–†–ò–¢–ï–¢–ù–ê–Ø –ø—Ä–æ–≤–µ—Ä–∫–∞: –∏–∑–≤–ª–µ–∫–∞–µ–º username –∏–∑ –Ω–∞–∑–≤–∞–Ω–∏—è –∫–∞–Ω–∞–ª–∞
        if interaction.channel and hasattr(interaction.channel, "name"):
            channel_name = interaction.channel.name
            logger.info(f"üìÅ –ò–º—è –∫–∞–Ω–∞–ª–∞: {channel_name}")

            if channel_name.startswith("new_"):
                # –ò–∑–≤–ª–µ–∫–∞–µ–º username –∏–∑ new_username
                extracted_username = channel_name.replace("new_", "").lower()
                logger.info(
                    f"üîç –ò–∑–≤–ª–µ—á–µ–Ω–Ω—ã–π username –∏–∑ –∫–∞–Ω–∞–ª–∞: '{extracted_username}'"
                )

                # –£–ù–ò–í–ï–†–°–ê–õ–¨–ù–´–ô –ø–æ–∏—Å–∫ –∞–≤—Ç–æ—Ä–∞ –∑–∞—è–≤–∫–∏ (—Ä–∞–±–æ—Ç–∞–µ—Ç –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π)
                found_author = None
                best_match_score = 0

                for member in interaction.guild.members:
                    member_username = member.name.lower()
                    member_display_name = member.display_name.lower()

                    # 1. –¢–û–ß–ù–û–ï —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ username (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç 100%)
                    if member_username == extracted_username:
                        real_author_id = member.id
                        real_author = member
                        logger.info(
                            f"‚úÖ [–¢–û–ß–ù–û–ï] –ù–∞–π–¥–µ–Ω –∞–≤—Ç–æ—Ä –ø–æ username: {member.display_name} (ID: {member.id})"
                        )
                        break

                    # 2. –°–æ–≤–ø–∞–¥–µ–Ω–∏–µ —Å —á–∞—Å—Ç—å—é display_name (–¥–æ |) (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç 95%)
                    if " | " in member_display_name:
                        nick_part = member_display_name.split(" | ")[0].strip().lower()
                        if nick_part == extracted_username:
                            real_author_id = member.id
                            real_author = member
                            logger.info(
                                f"‚úÖ [–¢–û–ß–ù–û–ï] –ù–∞–π–¥–µ–Ω –∞–≤—Ç–æ—Ä –ø–æ —á–∞—Å—Ç–∏ display_name: {member.display_name} (ID: {member.id})"
                            )
                            break

                    # 3. –ß–ê–°–¢–ò–ß–ù–û–ï —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ (–¥–ª—è —Å–ª—É—á–∞–µ–≤ –∫–∞–∫ punisherr11 -> new_punisherr11)
                    if (
                        extracted_username in member_username
                        or member_username in extracted_username
                    ):
                        # –í—ã—á–∏—Å–ª—è–µ–º —Å—Ö–æ–∂–µ—Å—Ç—å –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ
                        longer_name = max(extracted_username, member_username, key=len)
                        shorter_name = min(extracted_username, member_username, key=len)

                        if shorter_name in longer_name:
                            # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –ø—Ä–æ—Ü–µ–Ω—Ç —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è
                            similarity = len(shorter_name) / len(longer_name)

                            # –¢—Ä–µ–±—É–µ–º –º–∏–Ω–∏–º—É–º 80% —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è –¥–ª—è —á–∞—Å—Ç–∏—á–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞
                            if similarity >= 0.8 and similarity > best_match_score:
                                found_author = member
                                best_match_score = similarity
                                logger.info(
                                    f"üîç [–ö–ê–ù–î–ò–î–ê–¢] –ß–∞—Å—Ç–∏—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ: {member.display_name} (similarity: {similarity:.2f})"
                                )

                # –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ —Ç–æ—á–Ω–æ–≥–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ª—É—á—à–µ–≥–æ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞
                if not real_author and found_author and best_match_score >= 0.8:
                    real_author_id = found_author.id
                    real_author = found_author
                    logger.info(
                        f"‚úÖ [–ß–ê–°–¢–ò–ß–ù–û–ï] –ù–∞–π–¥–µ–Ω –∞–≤—Ç–æ—Ä: {found_author.display_name} (ID: {found_author.id}, score: {best_match_score:.2f})"
                    )

        # –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ –∞–≤—Ç–æ—Ä–∞ –ø–æ –∏–º–µ–Ω–∏ –∫–∞–Ω–∞–ª–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π ID
        if not real_author and real_author_id:
            real_author = interaction.guild.get_member(real_author_id)
            if real_author:
                logger.info(
                    f"‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ –∞–≤—Ç–æ—Ä–∞: {real_author.display_name} (ID: {real_author.id})"
                )

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞: –∞–≤—Ç–æ—Ä –∑–∞—è–≤–∫–∏ –í–°–ï–ì–î–ê –º–æ–∂–µ—Ç –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä–∏—Ç—å, —Ç–∞–∫–∂–µ –ì—Ä–∞–∂–¥–∞–Ω–µ –∏ –ñ–∏—Ç–µ–ª–∏
        user_roles = [role.name for role in interaction.user.roles]
        allowed_roles = ["–ñ–∏—Ç–µ–ª—å", "–ì—Ä–∞–∂–¥–∞–Ω–∏–Ω"]
        is_author = interaction.user.id == real_author_id
        has_permission = any(role in user_roles for role in allowed_roles)

        logger.info(f"üîë –î–ï–¢–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –î–û–°–¢–£–ü–ê:")
        logger.info(
            f"   üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {interaction.user.display_name} (ID: {interaction.user.id})"
        )
        logger.info(f"   üìÅ –ö–∞–Ω–∞–ª: {interaction.channel.name}")
        logger.info(
            f"   üéØ –ù–∞–π–¥–µ–Ω–Ω—ã–π –∞–≤—Ç–æ—Ä: {real_author.display_name if real_author else '–ù–ï –ù–ê–ô–î–ï–ù'} (ID: {real_author_id})"
        )
        logger.info(
            f"   ‚úÖ is_author: {is_author} (—Å—Ä–∞–≤–Ω–µ–Ω–∏–µ {interaction.user.id} == {real_author_id})"
        )
        # –§–∏–ª—å—Ç—Ä—É–µ–º @everyone —á—Ç–æ–±—ã –Ω–µ –ø–∏–Ω–≥–æ–≤–∞—Ç—å –≤—Å–µ—Ö –≤ –ª–æ–≥–∞—Ö
        filtered_roles = [role for role in user_roles if role != "@everyone"]
        logger.info(f"   üõ°Ô∏è has_permission: {has_permission} (—Ä–æ–ª–∏: {filtered_roles})")
        logger.info(f"   üîç –í—Å–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ —Å –ø–æ—Ö–æ–∂–∏–º–∏ –∏–º–µ–Ω–∞–º–∏:")

        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        extracted_username = (
            interaction.channel.name.replace("new_", "").lower()
            if interaction.channel.name.startswith("new_")
            else "unknown"
        )
        matching_users = []
        for member in interaction.guild.members:
            if (
                extracted_username in member.name.lower()
                or member.name.lower() in extracted_username
                or (
                    hasattr(member, "display_name")
                    and extracted_username in member.display_name.lower()
                )
            ):
                matching_users.append(
                    f"      - {member.display_name} (username: {member.name}, ID: {member.id})"
                )

        if matching_users:
            for user_info in matching_users:
                logger.info(user_info)
        else:
            logger.info(
                f"      - –£—á–∞—Å—Ç–Ω–∏–∫–∏ —Å –ø–æ—Ö–æ–∂–∏–º–∏ –∏–º–µ–Ω–∞–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –¥–ª—è '{extracted_username}'"
            )

        # –ê–í–¢–û–† –ó–ê–Ø–í–ö–ò –í–°–ï–ì–î–ê –º–æ–∂–µ—Ç –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–≤–æ—é –∑–∞—è–≤–∫—É
        if not (is_author or has_permission):
            logger.warning(
                f"üö´ –û—Ç–∫–∞–∑–∞–Ω–æ –≤ –¥–æ—Å—Ç—É–ø–µ: {interaction.user.display_name} –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–æ–º ({is_author}) –∏ –Ω–µ –∏–º–µ–µ—Ç –Ω—É–∂–Ω—ã—Ö —Ä–æ–ª–µ–π ({has_permission})"
            )
            await interaction.response.send_message(
                "‚ùå –¢–æ–ª—å–∫–æ **–∞–≤—Ç–æ—Ä –∑–∞—è–≤–∫–∏** –∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º **–ì—Ä–∞–∂–¥–∞–Ω–∏–Ω**/**–ñ–∏—Ç–µ–ª—å** –º–æ–≥—É—Ç –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–∞—è–≤–∫—É.\n\n"
                f"üí° –ï—Å–ª–∏ —ç—Ç–æ –≤–∞—à–∞ –∑–∞—è–≤–∫–∞, —É–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –∫–∞–Ω–∞–ª —Å–æ–∑–¥–∞–Ω –æ—Ç –≤–∞—à–µ–≥–æ –∏–º–µ–Ω–∏.\n"
                f"üîç –ù–∞–π–¥–µ–Ω–Ω—ã–π –∞–≤—Ç–æ—Ä: {real_author.display_name if real_author else '–ù–µ –Ω–∞–π–¥–µ–Ω'}",
                ephemeral=True,
            )
            return


        # –ù–∞—Ö–æ–¥–∏–º –∞–≤—Ç–æ—Ä–∞ –∑–∞—è–≤–∫–∏ (—É–∂–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω –≤—ã—à–µ)
        author = real_author
        if not author:
            try:
                await interaction.response.send_message(
                    "‚ùå –ê–≤—Ç–æ—Ä –∑–∞—è–≤–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.", ephemeral=True
                )
            except discord.errors.NotFound:
                logger.warning(
                    f"‚ö†Ô∏è Interaction –∏—Å—Ç–µ–∫ –¥–ª—è {interaction.user.display_name} - –∞–≤—Ç–æ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω"
                )
            return

        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ acknowledged –ª–∏ —É–∂–µ interaction
            if interaction.response.is_done():
                logger.warning(
                    f"‚ö†Ô∏è Interaction —É–∂–µ acknowledged –¥–ª—è {interaction.user.display_name}"
                )
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª –∫–∞–∫ fallback
                await interaction.channel.send(
                    f"üîÑ {interaction.user.mention} –∑–∞–ø—É—Å—Ç–∏–ª –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä–∫—É –∑–∞—è–≤–∫–∏ {author.mention}..."
                )
            else:
                await interaction.response.send_message(
                    f"üîÑ {interaction.user.mention} –∑–∞–ø—É—Å—Ç–∏–ª –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä–∫—É –∑–∞—è–≤–∫–∏ {author.mention}...",
                    ephemeral=False,
                )
        except discord.errors.InteractionResponded:
            logger.warning(
                f"‚ö†Ô∏è Interaction —É–∂–µ –æ—Ç–≤–µ—á–µ–Ω –¥–ª—è {interaction.user.display_name}"
            )
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª –∫–∞–∫ fallback
            await interaction.channel.send(
                f"üîÑ {interaction.user.mention} –∑–∞–ø—É—Å—Ç–∏–ª –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä–∫—É –∑–∞—è–≤–∫–∏ {author.mention}..."
            )
        except discord.errors.NotFound:
            logger.warning(f"‚ö†Ô∏è Interaction –∏—Å—Ç–µ–∫ –¥–ª—è {interaction.user.display_name}")
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª –∫–∞–∫ fallback
            await interaction.channel.send(
                f"üîÑ {interaction.user.mention} –∑–∞–ø—É—Å—Ç–∏–ª –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä–∫—É –∑–∞—è–≤–∫–∏ {author.mention}..."
            )
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä–∫–µ: {e}")
            return

        try:

            # –ü–æ–ª—É—á–∞–µ–º TicketHandler –¥–ª—è –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä–∫–∏
            ticket_handler = interaction.client.get_cog("TicketHandler")
            if not ticket_handler:
                # –ü–æ–ø—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± –ø–æ–ª—É—á–µ–Ω–∏—è
                for cog_name, cog in interaction.client.cogs.items():
                    if hasattr(cog, 'analyze_and_respond_to_application'):
                        ticket_handler = cog
                        logger.info(f"üîç –ù–∞–π–¥–µ–Ω TicketHandler —á–µ—Ä–µ–∑ –ø–æ–∏—Å–∫: {cog_name}")
                        break

            if ticket_handler:
                # –û—á–∏—â–∞–µ–º –∫—ç—à Steam –¥–ª—è —Å–≤–µ–∂–µ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
                try:
                    # –û—á–∏—â–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π –∫—ç—à Steam
                    from handlers.tickets import local_steam_cache
                    if hasattr(local_steam_cache, 'clear'):
                        local_steam_cache.clear()

                    logger.info(
                        f"üóëÔ∏è –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä–∫–µ –∑–∞—è–≤–∫–∏ {author.display_name}"
                    )
                except Exception as e:
                    logger.error(f"–û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –∫—ç—à–∞: {e}")

                # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–ª–Ω—É—é –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä–∫—É –∑–∞—è–≤–∫–∏
                await ticket_handler.analyze_and_respond_to_application(
                    interaction.channel, author
                )

                logger.info(
                    f"üîÑ –ü–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞—è–≤–∫–∏ –∑–∞–ø—É—â–µ–Ω–∞: {author.display_name} –ø–æ –∑–∞–ø—Ä–æ—Å—É {interaction.user.display_name}"
                )
            else:
                logger.error("‚ùå TicketHandler –Ω–µ –Ω–∞–π–¥–µ–Ω! –î–æ—Å—Ç—É–ø–Ω—ã–µ cogs:")
                for cog_name in interaction.client.cogs.keys():
                    logger.error(f"   - {cog_name}")

                await interaction.followup.send(
                    "‚ùå –°–∏—Å—Ç–µ–º–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞—è–≤–æ–∫ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.",
                    ephemeral=True,
                )

        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞—è–≤–∫–∏: {e}")
            await interaction.followup.send(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä–∫–µ –∑–∞—è–≤–∫–∏.", ephemeral=True
            )

    @discord.ui.button(label="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –∑–∞—è–≤–∫—É", style=discord.ButtonStyle.danger, custom_id="delete_application_v4")
    async def delete_application(self, interaction: discord.Interaction, button: discord.ui.Button):
        """–ö–Ω–æ–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∑–∞—è–≤–∫–∏ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º"""

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∞–≤—Ç–æ—Ä–∞ –∑–∞—è–≤–∫–∏
        real_author_id = None
        real_author = None

        # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º –≤–ª–∞–¥–µ–ª—å—Ü–∞ —Ç–∏–∫–µ—Ç–∞ –∏–∑ ticket_state
        from utils.ticket_state import get_ticket_owner
        ticket_owner_id = get_ticket_owner(interaction.channel.id)
        if ticket_owner_id:
            real_author = interaction.guild.get_member(ticket_owner_id)
            if real_author:
                real_author_id = ticket_owner_id
                logger.info(f"üéØ –ê–≤—Ç–æ—Ä –Ω–∞–π–¥–µ–Ω —á–µ—Ä–µ–∑ ticket_state: {real_author.display_name} (ID: {real_author_id})")

        # –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ —á–µ—Ä–µ–∑ ticket_state, –ø—Ä–æ–±—É–µ–º –∏–∑–≤–ª–µ—á—å –∏–∑ –∏–º–µ–Ω–∏ –∫–∞–Ω–∞–ª–∞
        if not real_author_id:
            extracted_username = extract_discord_id(interaction.channel.name)
            if extracted_username:
                # –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –∏–º–µ–Ω–∏
                matching_users = []
                for member in interaction.guild.members:
                    # –¢–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if member.name.lower() == extracted_username.lower():
                        real_author_id = member.id
                        real_author = member
                        logger.info(f"üéØ –ê–≤—Ç–æ—Ä –Ω–∞–π–¥–µ–Ω –ø–æ —Ç–æ—á–Ω–æ–º—É —Å–æ–≤–ø–∞–¥–µ–Ω–∏—é –∏–º–µ–Ω–∏: {member.display_name} (ID: {member.id})")
                        break

                    # –¢–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –Ω–∏–∫–Ω–µ–π–º–∞
                    if member.display_name.lower() == extracted_username.lower():
                        real_author_id = member.id
                        real_author = member
                        logger.info(f"üéØ –ê–≤—Ç–æ—Ä –Ω–∞–π–¥–µ–Ω –ø–æ —Ç–æ—á–Ω–æ–º—É —Å–æ–≤–ø–∞–¥–µ–Ω–∏—é –Ω–∏–∫–Ω–µ–π–º–∞: {member.display_name} (ID: {member.id})")
                        break

                    # –ß–∞—Å—Ç–∏—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
                    similarity = _ratio(member.display_name.lower(), extracted_username.lower()) # Using _ratio instead of fuzz.ratio
                    if similarity >= 0.8: # Adjusted threshold for _ratio
                        matching_users.append({
                            "member": member,
                            "similarity": similarity,
                            "match_type": "display_name"
                        })

                        if similarity >= 0.95:  # Very high similarity for _ratio
                            real_author_id = member.id
                            real_author = member
                            logger.info(f"üéØ –ê–≤—Ç–æ—Ä –Ω–∞–π–¥–µ–Ω –ø–æ –≤—ã—Å–æ–∫–æ–º—É —Å–æ–≤–ø–∞–¥–µ–Ω–∏—é –Ω–∏–∫–Ω–µ–π–º–∞ ({similarity:.2f}): {member.display_name} (ID: {member.id})")
                            break

                # –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ —Ç–æ—á–Ω–æ–≥–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è, –ø–æ–ø—Ä–æ–±—É–µ–º –ø–æ–∏—Å–∫ –ø–æ ID –∏–∑ embed
                if not real_author_id:
                    best_match_score = 0
                    found_author_id = None
                    # –ü–æ–∏—Å–∫ –≤ embed –∑–∞—è–≤–∫–∏
                    async for message in interaction.channel.history(limit=50):
                        if message.embeds:
                            for embed in message.embeds:
                                if embed.title and "–∑–∞—è–≤–∫–∞" in embed.title.lower():
                                    # –ò—â–µ–º —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –æ–ø–∏—Å–∞–Ω–∏–∏ –∏–ª–∏ –ø–æ–ª—è—Ö
                                    content_to_search = []
                                    if embed.description:
                                        content_to_search.append(embed.description)
                                    for field in embed.fields:
                                        content_to_search.append(field.value)

                                    for content in content_to_search:
                                        # –ò—â–µ–º —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –≤–∏–¥–∞ <@123456789>
                                        import re
                                        mentions = re.findall(r'<@!?(\d+)>', content)
                                        for user_id_str in mentions:
                                            try:
                                                found_user_id = int(user_id_str)
                                                found_member = interaction.guild.get_member(found_user_id)
                                                if found_member and extracted_username:
                                                    s1 = SequenceMatcher(None, found_member.name.lower(), extracted_username.lower()).ratio()
                                                    s2 = SequenceMatcher(None, found_member.display_name.lower(), extracted_username.lower()).ratio()
                                                    similarity = max(s1, s2)  # 0.0..1.0

                                                    if similarity >= 0.80 and similarity > best_match_score:
                                                        found_author_id = found_member.id
                                                        best_match_score = similarity
                                            except Exception:
                                                pass

                # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ª—É—á—à–µ–≥–æ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞ –µ—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ —Ç–æ—á–Ω–æ–≥–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è
                if not real_author_id and found_author_id and best_match_score >= 0.8:
                    real_author_id = found_author_id

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞: –∞–≤—Ç–æ—Ä –∑–∞—è–≤–∫–∏, –ì—Ä–∞–∂–¥–∞–Ω–∏–Ω –∏–ª–∏ –í–ª–∞–¥–µ–ª–µ—Ü —Å–µ—Ä–≤–µ—Ä–∞ –º–æ–≥—É—Ç —É–¥–∞–ª–∏—Ç—å
        user_roles = [role.name for role in interaction.user.roles]
        is_citizen = "–ì—Ä–∞–∂–¥–∞–Ω–∏–Ω" in user_roles or "–ñ–∏—Ç–µ–ª—å" in user_roles # Added "–ñ–∏—Ç–µ–ª—å" to check
        is_author = interaction.user.id == real_author_id
        is_owner = interaction.user.id == interaction.guild.owner_id

        if not (is_author or is_citizen or is_owner):
            await interaction.response.send_message(
                "‚ùå –£–¥–∞–ª—è—Ç—å –∑–∞—è–≤–∫–∏ –º–æ–≥—É—Ç —Ç–æ–ª—å–∫–æ –∞–≤—Ç–æ—Ä –∑–∞—è–≤–∫–∏, **–ì—Ä–∞–∂–¥–∞–Ω–∏–Ω** –∏–ª–∏ **–í–ª–∞–¥–µ–ª–µ—Ü —Å–µ—Ä–≤–µ—Ä–∞**.",
                ephemeral=True,
            )
            return

        # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è
        confirm_embed = discord.Embed(
            title="‚ö†Ô∏è –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è",
            description="–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç—É –∑–∞—è–≤–∫—É? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å.",
            color=0xFF9900,
        )

        confirm_view = ConfirmDeleteView(real_author_id or 0, interaction.user.id)
        await interaction.response.send_message(embed=confirm_embed, view=confirm_view, ephemeral=True)


    @discord.ui.button(label="‚ùå –û—Ç–º–µ–Ω–∞", style=discord.ButtonStyle.secondary, custom_id="cancel_delete_application_v2")
    async def cancel_delete(
        self, interaction: discord.Interaction, button: discord.ui.Button
    ):
        """–û—Ç–º–µ–Ω–∞ —É–¥–∞–ª–µ–Ω–∏—è"""
        await interaction.response.edit_message(
            content="‚ùå –£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.", embed=None, view=None
        )


class ReadyButtonView(discord.ui.View):
    def __init__(self, author_id: int = None):
        super().__init__(timeout=None)
        self.author_id = author_id or 0

    @discord.ui.button(
        label="üîÑ –ü–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–∞—è–≤–∫—É",
        style=discord.ButtonStyle.primary,
        custom_id="ready_button_v4",
    )
    async def ready_button(
        self, interaction: discord.Interaction, button: discord.ui.Button
    ):
        """–ö–Ω–æ–ø–∫–∞ –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä–∫–∏ - –æ—á–∏—â–∞–µ—Ç –∫—ç—à –∏ –∑–∞–Ω–æ–≤–æ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –∑–∞—è–≤–∫—É"""
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–Ω–æ–ø–∫—É –Ω–∞–∂–∞–ª –∞–≤—Ç–æ—Ä –∑–∞—è–≤–∫–∏
        if interaction.user.id != self.author_id:
            await interaction.response.send_message(
                "‚ùå –≠—Ç–∞ –∫–Ω–æ–ø–∫–∞ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–≤—Ç–æ—Ä–∞ –∑–∞—è–≤–∫–∏.", ephemeral=True
            )
            return

        try:
            await interaction.response.send_message(
                f"üîÑ {interaction.user.mention} –∑–∞–ø—Ä–æ—Å–∏–ª –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä–∫—É –∑–∞—è–≤–∫–∏! –û—á–∏—â–∞—é –∫—ç—à –∏ –∑–∞–ø—É—Å–∫–∞—é –ø–æ–ª–Ω—ã–π –∞–Ω–∞–ª–∏–∑...",
                ephemeral=False,
            )
        except discord.errors.InteractionResponded:
            logger.warning(
                f"‚ö†Ô∏è Interaction —É–∂–µ –æ—Ç–≤–µ—á–µ–Ω –¥–ª—è {interaction.user.display_name}"
            )
            await interaction.channel.send(
                f"üîÑ {interaction.user.mention} –∑–∞–ø—Ä–æ—Å–∏–ª –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä–∫—É –∑–∞—è–≤–∫–∏! –û—á–∏—â–∞—é –∫—ç—à –∏ –∑–∞–ø—É—Å–∫–∞—é –ø–æ–ª–Ω—ã–π –∞–Ω–∞–ª–∏–∑..."
            )
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä–∫–µ: {e}")
            return

        try:
            # –ü–æ–ª—É—á–∞–µ–º TicketHandler –¥–ª—è –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä–∫–∏
            ticket_handler = interaction.client.get_cog("TicketHandler")
            if not ticket_handler:
                # –ü–æ–ø—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± –ø–æ–ª—É—á–µ–Ω–∏—è
                for cog_name, cog in interaction.client.cogs.items():
                    if hasattr(cog, 'analyze_and_respond_to_application'):
                        ticket_handler = cog
                        logger.info(f"üîç –ù–∞–π–¥–µ–Ω TicketHandler —á–µ—Ä–µ–∑ –ø–æ–∏—Å–∫: {cog_name}")
                        break

            if ticket_handler:
                # –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö –∫—ç—à–µ–π –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                try:
                    # –û—á–∏—â–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π –∫—ç—à Steam
                    from handlers.tickets import local_steam_cache
                    if hasattr(local_steam_cache, 'clear'):
                        local_steam_cache.clear()
                    logger.info(f"üóëÔ∏è –õ–æ–∫–∞–ª—å–Ω—ã–π –∫—ç—à –æ—á–∏—â–µ–Ω –¥–ª—è {interaction.user.display_name}")

                    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –æ—á–∏—â–∞–µ–º –∫—ç—à Steam API
                    from handlers.steam_api import steam_client
                    from handlers.novichok import extract_steam_id_from_url

                    # –ò—â–µ–º Steam-—Å—Å—ã–ª–∫—É –≤ –∫–∞–Ω–∞–ª–µ –∏ –æ—á–∏—â–∞–µ–º –µ—ë –∫—ç—à
                    async for msg in interaction.channel.history(limit=50):
                        if msg.embeds:
                            for embed in msg.embeds:
                                if (
                                    embed.description
                                    and "steamcommunity.com" in embed.description
                                ):
                                    import re

                                    steam_links = re.findall(
                                        r"https://steamcommunity\.com/[^\s]+",
                                        embed.description,
                                    )
                                    for steam_link in steam_links:
                                        steam_id = extract_steam_id_from_url(steam_link)
                                        if steam_id:
                                            steam_client.force_cache_clear_for_profile(
                                                steam_id
                                            )
                                            logger.info(
                                                f"üóëÔ∏è –û—á–∏—â–µ–Ω Steam –∫—ç—à –¥–ª—è ID: {steam_id}"
                                            )
                                            break
                                if embed.fields:
                                    for field in embed.fields:
                                        if (
                                            field.value
                                            and "steamcommunity.com" in field.value
                                        ):
                                            import re

                                            steam_links = re.findall(
                                                r"https://steamcommunity\.com/[^\s]+",
                                                field.value,
                                            )
                                            for steam_link in steam_links:
                                                steam_id = extract_steam_id_from_url(
                                                    steam_link
                                                )
                                                if steam_id:
                                                    steam_client.force_cache_clear_for_profile(
                                                        steam_id
                                                    )
                                                    logger.info(
                                                        f"üóëÔ∏è –û—á–∏—â–µ–Ω Steam –∫—ç—à –¥–ª—è ID: {steam_id}"
                                                    )
                                                    break

                    logger.info(
                        f"üóëÔ∏è –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –¥–ª—è {interaction.user.display_name}"
                    )
                except Exception as e:
                    logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏ –∫—ç—à–∞: {e}")

                # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–ª–Ω—É—é –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä–∫—É –∑–∞—è–≤–∫–∏
                await ticket_handler.analyze_and_respond_to_application(
                    interaction.channel, interaction.user
                )

                logger.info(
                    f"‚úÖ –ü–æ–ª–Ω–∞—è –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø—É—â–µ–Ω–∞: {interaction.user.display_name}"
                )
            else:
                logger.error("‚ùå TicketHandler –Ω–µ –Ω–∞–π–¥–µ–Ω! –î–æ—Å—Ç—É–ø–Ω—ã–µ cogs:")
                for cog_name in interaction.client.cogs.keys():
                    logger.error(f"   - {cog_name}")

                await interaction.followup.send(
                    "‚ùå –°–∏—Å—Ç–µ–º–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞—è–≤–æ–∫ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.",
                    ephemeral=True,
                )

        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª–Ω–æ–π –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä–∫–∏: {e}")
            await interaction.followup.send(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä–∫–µ –∑–∞—è–≤–∫–∏.", ephemeral=True
            )


class ApplicationButton(discord.ui.View):
    def __init__(self):
        super().__init__(timeout=None)

    @discord.ui.button(
        label="–í—Å—Ç—É–ø–∏—Ç—å –≤ –î–µ—Ä–µ–≤–Ω—é",
        style=discord.ButtonStyle.primary,
        custom_id="application_button",
        emoji="<:Civil1:1287759173475635200>",
    )
    async def application_button(
        self, interaction: discord.Interaction, button: discord.ui.Button
    ):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–∫–∏"""
        try:
            logger.info(
                f"üéØ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {interaction.user.display_name} –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–∫–∏"
            )

            # –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
            modal = ApplicationModal()

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ (–±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫)
            await interaction.response.send_modal(modal)
            logger.info(
                f"‚úÖ –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {interaction.user.display_name}"
            )

        except discord.errors.InteractionResponded:
            logger.warning(
                f"‚ö†Ô∏è Interaction —É–∂–µ –±—ã–ª –æ–±—Ä–∞–±–æ—Ç–∞–Ω –¥–ª—è {interaction.user.display_name}"
            )
        except discord.errors.NotFound:
            logger.warning(f"‚ö†Ô∏è Interaction –∏—Å—Ç–µ–∫ –¥–ª—è {interaction.user.display_name}")
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ –∑–∞—è–≤–∫–∏: {e}")

            # –õ–æ–≥–∏—Ä—É–µ–º –¥–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏ –¥–ª—è –≤—Å–µ—Ö –∑–∞—è–≤–æ–∫
            import traceback

            logger.error(
                f"Traceback –¥–ª—è –∑–∞—è–≤–∫–∏ {interaction.user.display_name}: {traceback.format_exc()}"
            )


class ApplicationSystem(commands.Cog):
    def __init__(self, bot: commands.Bot):
        self.bot = bot
        self.application_panels = []  # –°–ø–∏—Å–æ–∫ –ø–∞–Ω–µ–ª–µ–π –¥–ª—è –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        self.auto_update_member_count.start()  # –ó–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ

    def cog_unload(self):
        """–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–¥–∞—á–∏ –ø—Ä–∏ –≤—ã–≥—Ä—É–∑–∫–µ –º–æ–¥—É–ª—è"""
        self.auto_update_member_count.cancel()

    @tasks.loop(hours=24)  # –û–±–Ω–æ–≤–ª—è–µ–º —Ä–∞–∑ –≤ —Å—É—Ç–∫–∏
    async def auto_update_member_count(self):
        """–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ –ø–∞–Ω–µ–ª—è—Ö –∑–∞—è–≤–æ–∫"""
        if not self.application_panels:
            return

        logger.info("üîÑ –ù–∞—á–∏–Ω–∞—é –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞–Ω–µ–ª–µ–π –∑–∞—è–≤–æ–∫...")
        updated_count = 0

        for panel_info in self.application_panels.copy():
            try:
                channel = self.bot.get_channel(panel_info["channel_id"])
                if not channel:
                    # –£–¥–∞–ª—è–µ–º –ø–∞–Ω–µ–ª—å –µ—Å–ª–∏ –∫–∞–Ω–∞–ª –±–æ–ª—å—à–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
                    self.application_panels.remove(panel_info)
                    continue

                message = await channel.fetch_message(panel_info["message_id"])
                member_count = get_member_count(channel.guild)

                # –û–±–Ω–æ–≤–ª—è–µ–º embed
                if message.embeds:
                    embed = message.embeds[0]
                    # –û–±–Ω–æ–≤–ª—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ
                    new_description = embed.description
                    if "—Å–æ—Å–µ–¥—è–º–∏!" in new_description:
                        import re

                        new_description = re.sub(
                            r"—Å \d+[\s\d]* —Å–æ—Å–µ–¥—è–º–∏!",
                            f"—Å {member_count} —Å–æ—Å–µ–¥—è–º–∏!",
                            new_description,
                        )
                        embed.description = new_description

                    # –û–±–Ω–æ–≤–ª—è–µ–º footer
                    if embed.footer:
                        new_footer = re.sub(
                            r"‚Ä¢ \d+[\s\d]* —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ ‚Ä¢",
                            f"‚Ä¢ {member_count} —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ ‚Ä¢",
                            embed.footer.text,
                        )
                        embed.set_footer(text=new_footer)

                    await message.edit(embed=embed)
                    updated_count += 1
                    logger.info(
                        f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∞ –ø–∞–Ω–µ–ª—å –≤ {channel.name}: {member_count} —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤"
                    )

            except discord.NotFound:
                # –£–¥–∞–ª—è–µ–º –ø–∞–Ω–µ–ª—å –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ–ª—å—à–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
                self.application_panels.remove(panel_info)
                logger.warning(f"‚ö†Ô∏è –£–¥–∞–ª–µ–Ω–∞ –ø–∞–Ω–µ–ª—å: —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
            except Exception as e:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–∞–Ω–µ–ª–∏: {e}")

        if updated_count > 0:
            logger.info(
                f"üîÑ –ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ: –æ–±–Ω–æ–≤–ª–µ–Ω–æ {updated_count} –ø–∞–Ω–µ–ª–µ–π"
            )

    @auto_update_member_count.before_loop
    async def before_auto_update(self):
        """–û–∂–∏–¥–∞–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞ –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è"""
        await self.bot.wait_until_ready()

    @app_commands.command(
        name="create_application_panel", description="–°–æ–∑–¥–∞—Ç—å –ø–∞–Ω–µ–ª—å –¥–ª—è –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–æ–∫"
    )
    @app_commands.describe(channel="–ö–∞–Ω–∞–ª –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –ø–∞–Ω–µ–ª–∏")
    @app_commands.guild_only()
    async def create_application_panel(
        self, interaction: discord.Interaction, channel: discord.TextChannel = None
    ):
        """–°–æ–∑–¥–∞–µ—Ç –ø–∞–Ω–µ–ª—å –¥–ª—è –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–æ–∫"""

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞
        user_roles = [role.name for role in interaction.user.roles]
        admin_roles = ["–ñ–∏—Ç–µ–ª—å", "–ì—Ä–∞–∂–¥–∞–Ω–∏–Ω"]
        is_owner = interaction.user.id == interaction.guild.owner_id

        if not any(role in user_roles for role in admin_roles) and not is_owner:
            await interaction.response.send_message(
                "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–∞–Ω–µ–ª–∏ –∑–∞—è–≤–æ–∫.", ephemeral=True
            )
            return

        target_channel = channel or interaction.channel

        # –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
        member_count = get_member_count(interaction.guild)

        # –°–æ–∑–¥–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π embed —Å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º–∏
        main_embed = discord.Embed(
            title="üìã –ü–æ–¥–∞—á–∞ –∑–∞—è–≤–∫–∏ –≤ –î–µ—Ä–µ–≤–Ω—é VLG",
            description=(
                f"üèòÔ∏è **–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–∞–º—É—é –±–æ–ª—å—à—É—é –î–µ—Ä–µ–≤–Ω—é –≤ Rust —Å {member_count} —Å–æ—Å–µ–¥—è–º–∏!**\n\n"
                "üéØ **–ü–µ—Ä–µ–¥ –ø–æ–¥–∞—á–µ–π –∑–∞—è–≤–∫–∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ:**\n\n"
                "**1.** üìù –ò–∑–º–µ–Ω–∏—Ç–µ –≤–∞—à –Ω–∏–∫ –≤ Discord –ø–æ —Ñ–æ—Ä–º–∞—Ç—É: `SteamNickname | –ò–º—è`\n"
                "‚îî‚îÄ **–ü—Ä–∏–º–µ—Ä:** `Terminator | –í–æ–ª–æ–¥—è`\n"
                "‚îî‚îÄ **–ö–∞–∫ –∏–∑–º–µ–Ω–∏—Ç—å:** –ü–ö–ú –ø–æ –Ω–∏–∫—É ‚Üí *–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ª–∏—á–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å —Å–µ—Ä–≤–µ—Ä–∞*\n\n"
                "**2.** üîó –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ Steam-–ø—Ä–æ—Ñ–∏–ª—å\n\n"
                "**3.** üë§ **–ù–∏–∫ –≤ Steam –¥–æ–ª–∂–µ–Ω —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å –Ω–∏–∫–æ–º –≤ Discord**\n\n"
                "‚ö†Ô∏è **–í–∞–∂–Ω–æ:** –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤—Å—ë –µ—â—ë —Ä–∞–∑ –ø–µ—Ä–µ–¥ –ø–æ–¥–∞—á–µ–π –∑–∞—è–≤–∫–∏!"
            ),
            color=0x00FF00,
        )

        main_embed.add_field(
            name="‚úÖ –ü–æ–¥—Ö–æ–¥—è—â–∏–µ –Ω–∏–∫–∏:",
            value="`Bestel`, `Yango`, `–°–ø—Ä–∞–≤–µ–¥–ª–∏–≤—ã–π`, `–ë–æ—Ä–∏—Å`, `Gen0m`, `–Æ–Ω—ã–π –í–æ–∏–Ω`",
            inline=False,
        )

        main_embed.add_field(
            name="‚ùå –ù–ï –ø–æ–¥–æ–π–¥—É—Ç:",
            value="`‡ºí‚ò¨‚ò†»ΩÔ∏é√ô√ß“ú·Éß‚ò†Ô∏é‚ò¨‡ºí`, `775038`, `K Œî –Ø U MI`, `crmnl1`, `Y1`, `AB`, `OOO`",
            inline=False,
        )

        main_embed.set_footer(
            text=f"–î–µ—Ä–µ–≤–Ω—è VLG ‚Ä¢ {member_count} —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ ‚Ä¢ 170+ –≤–∞–π–ø–æ–≤"
        )
        main_embed.set_thumbnail(
            url="https://cdn.discordapp.com/attachments/472365787445985280/icon.png"
        )
        main_embed.set_image(url="https://i.ibb.co/kVvrcT3Q/VLG-Logo.gif")

        # –°–æ–∑–¥–∞–µ–º view —Å –∫–Ω–æ–ø–∫–æ–π
        view = ApplicationButton()

        try:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–∞–Ω–µ–ª—å –≤ —É–∫–∞–∑–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª
            message = await safe_send_message(
                target_channel, embed=main_embed, view=view
            )

            # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø–∞–Ω–µ–ª—å –¥–ª—è –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
            panel_info = {
                "message_id": message.id,
                "channel_id": target_channel.id,
                "created_at": datetime.now(timezone.utc),
            }
            self.application_panels.append(panel_info)

            await interaction.response.send_message(
                f"‚úÖ –ü–∞–Ω–µ–ª—å –∑–∞—è–≤–æ–∫ —Å–æ–∑–¥–∞–Ω–∞ –≤ –∫–∞–Ω–∞–ª–µ {target_channel.mention}\n"
                f"üîó [–ü–µ—Ä–µ–π—Ç–∏ –∫ –ø–∞–Ω–µ–ª–∏]({message.jump_url})\n"
                f"üîÑ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª—è—Ç—å—Å—è –∫–∞–∂–¥—ã–µ 24 —á–∞—Å–∞",
                ephemeral=True,
            )

            logger.info(
                f"üìã {interaction.user.display_name} —Å–æ–∑–¥–∞–ª –ø–∞–Ω–µ–ª—å –∑–∞—è–≤–æ–∫ –≤ –∫–∞–Ω–∞–ª–µ {target_channel.name} (–∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤–∫–ª—é—á–µ–Ω–æ)"
            )

        except discord.Forbidden:
            await interaction.response.send_message(
                "‚ùå –£ –±–æ—Ç–∞ –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —É–∫–∞–∑–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª.",
                ephemeral=True,
            )
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–∞–Ω–µ–ª–∏ –∑–∞—è–≤–æ–∫: {e}")
            await interaction.response.send_message(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–∞–Ω–µ–ª–∏.", ephemeral=True
            )

    @app_commands.command(
        name="update_application_panel",
        description="–û–±–Ω–æ–≤–∏—Ç—å –ø–∞–Ω–µ–ª—å –∑–∞—è–≤–æ–∫ —Å –∞–∫—Ç—É–∞–ª—å–Ω—ã–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤",
    )
    @app_commands.describe(
        message_id="ID —Å–æ–æ–±—â–µ–Ω–∏—è —Å –ø–∞–Ω–µ–ª—å—é –∑–∞—è–≤–æ–∫",
        channel="–ö–∞–Ω–∞–ª –≥–¥–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ø–∞–Ω–µ–ª—å (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ç–µ–∫—É—â–∏–π)",
    )
    @app_commands.guild_only()
    async def update_application_panel(
        self,
        interaction: discord.Interaction,
        message_id: str,
        channel: discord.TextChannel = None,
    ):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –ø–∞–Ω–µ–ª—å –∑–∞—è–≤–æ–∫ —Å –∞–∫—Ç—É–∞–ª—å–Ω—ã–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤"""

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞
        user_roles = [role.name for role in interaction.user.roles]
        admin_roles = ["–ñ–∏—Ç–µ–ª—å", "–ì—Ä–∞–∂–¥–∞–Ω–∏–Ω"]
        is_owner = interaction.user.id == interaction.guild.owner_id

        if not any(role in user_roles for role in admin_roles) and not is_owner:
            await interaction.response.send_message(
                "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–∞–Ω–µ–ª–∏ –∑–∞—è–≤–æ–∫.", ephemeral=True
            )
            return

        target_channel = channel or interaction.channel

        try:
            # –ù–∞—Ö–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            message = await target_channel.fetch_message(int(message_id))

            # –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
            member_count = get_member_count(interaction.guild)

            # –°–æ–∑–¥–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π embed
            main_embed = discord.Embed(
                title="üìã –ü–æ–¥–∞—á–∞ –∑–∞—è–≤–∫–∏ –≤ –î–µ—Ä–µ–≤–Ω—é VLG",
                description=(
                    f"üèòÔ∏è **–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–∞–º—É—é –±–æ–ª—å—à—É—é –î–µ—Ä–µ–≤–Ω—é –≤ Rust —Å {member_count} —Å–æ—Å–µ–¥—è–º–∏!**\n\n"
                    "üéØ **–ü–µ—Ä–µ–¥ –ø–æ–¥–∞—á–µ–π –∑–∞—è–≤–∫–∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ:**\n\n"
                    "**1.** üìù –ò–∑–º–µ–Ω–∏—Ç–µ –≤–∞—à –Ω–∏–∫ –≤ Discord –ø–æ —Ñ–æ—Ä–º–∞—Ç—É: `SteamNickname | –ò–º—è`\n"
                    "‚îî‚îÄ **–ü—Ä–∏–º–µ—Ä:** `Terminator | –í–æ–ª–æ–¥—è`\n"
                    "‚îî‚îÄ **–ö–∞–∫ –∏–∑–º–µ–Ω–∏—Ç—å:** –ü–ö–ú –ø–æ –Ω–∏–∫—É ‚Üí *–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ª–∏—á–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å —Å–µ—Ä–≤–µ—Ä–∞*\n\n"
                    "**2.** üîó –û—Ç–∫—Ä–æ–π—Ç–µ Steam-–ø—Ä–æ—Ñ–∏–ª—å:\n"
                    "‚îú‚îÄ **–°–ø–∏—Å–æ–∫ –¥—Ä—É–∑–µ–π** ‚Üí –ü—É–±–ª–∏—á–Ω—ã–π\n"
                    "‚îú‚îÄ **–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∏–≥—Ä–µ** ‚Üí –ü—É–±–ª–∏—á–Ω–∞—è\n"
                    "‚îî‚îÄ üîó [–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏ Steam](https://steamcommunity.com/my/edit/settings)\n\n"
                    "**3.** üë§ **–ù–∏–∫ –≤ Steam –¥–æ–ª–∂–µ–Ω —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å –Ω–∏–∫–æ–º –≤ Discord**\n\n"
                    "‚ö†Ô∏è **–í–∞–∂–Ω–æ:** –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤—Å—ë –µ—â—ë —Ä–∞–∑ –ø–µ—Ä–µ–¥ –ø–æ–¥–∞—á–µ–π –∑–∞—è–≤–∫–∏!"
                ),
                color=0x00FF00,
            )

            main_embed.add_field(
                name="‚úÖ –ü–æ–¥—Ö–æ–¥—è—â–∏–µ –Ω–∏–∫–∏:",
                value="`Bestel`, `Yango`, `–°–ø—Ä–∞–≤–µ–¥–ª–∏–≤—ã–π`, `–ë–æ—Ä–∏—Å`, `Gen0m`, `–Æ–Ω—ã–π –í–æ–∏–Ω`",
                inline=False,
            )

            main_embed.add_field(
                name="‚ùå –ù–ï –ø–æ–¥–æ–π–¥—É—Ç:",
                value="`‡ºí‚ò¨‚ò†»ΩÔ∏é√ô√ß“ú·Éß‚ò†Ô∏é‚ò¨‡ºí`, `775038`, `K Œî –Ø U MI`, `crmnl1`, `Y1`, `AB`, `OOO`",
                inline=False,
            )

            main_embed.set_footer(
                text=f"–î–µ—Ä–µ–≤–Ω—è VLG ‚Ä¢ {member_count} —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ ‚Ä¢ 170+ –≤–∞–π–ø–æ–≤"
            )
            main_embed.set_thumbnail(
                url="https://cdn.discordapp.com/attachments/472365787445985280/icon.png"
            )
            main_embed.set_image(url="https://i.ibb.co/kVvrcT3Q/VLG-Logo.gif")

            # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            await message.edit(embed=main_embed)

            await interaction.response.send_message(
                f"‚úÖ **–ü–∞–Ω–µ–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω–∞!**\n\n"
                f"üìä –ê–∫—Ç—É–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: **{member_count}**\n"
                f"üîó [–ü–µ—Ä–µ–π—Ç–∏ –∫ –ø–∞–Ω–µ–ª–∏]({message.jump_url})",
                ephemeral=True,
            )

            logger.info(
                f"üîÑ {interaction.user.display_name} –æ–±–Ω–æ–≤–∏–ª –ø–∞–Ω–µ–ª—å –∑–∞—è–≤–æ–∫: {member_count} —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤"
            )

        except discord.NotFound:
            await interaction.response.send_message(
                "‚ùå –°–æ–æ–±—â–µ–Ω–∏–µ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ —ç—Ç–æ–º –∫–∞–Ω–∞–ª–µ.", ephemeral=True
            )
        except ValueError:
            await interaction.response.send_message(
                "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç ID —Å–æ–æ–±—â–µ–Ω–∏—è.", ephemeral=True
            )
        except discord.Forbidden:
            await interaction.response.send_message(
                "‚ùå –£ –±–æ—Ç–∞ –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —ç—Ç–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.", ephemeral=True
            )
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–∞–Ω–µ–ª–∏ –∑–∞—è–≤–æ–∫: {e}")
            await interaction.response.send_message(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø–∞–Ω–µ–ª–∏.", ephemeral=True
            )

    @commands.Cog.listener()
    async def on_ready(self):
        """–î–æ–±–∞–≤–ª—è–µ–º –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–π view –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞"""
        self.bot.add_view(ApplicationButton())
        logger.info("‚úÖ ApplicationButton view –¥–æ–±–∞–≤–ª–µ–Ω –∫–∞–∫ –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–π view")


async def setup(bot: commands.Bot):
    await bot.add_cog(ApplicationSystem(bot))