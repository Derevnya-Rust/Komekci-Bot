import discord
from discord.ext import commands
from discord import app_commands
from utils.nickname_filter import filter_nickname
from datetime import datetime, timezone
import json
import logging
from typing import List
import asyncio

logger = logging.getLogger(__name__)


class NicknameAdmin(commands.Cog):
    """–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞ –Ω–∏–∫–Ω–µ–π–º–æ–≤"""

    def __init__(self, bot: commands.Bot):
        self.bot = bot

    @app_commands.command(
        name="test_nickname_filter", description="–ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Ñ–∏–ª—å—Ç—Ä –Ω–∏–∫–Ω–µ–π–º–æ–≤"
    )
    @app_commands.describe(nickname="–ù–∏–∫–Ω–µ–π–º –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
    @app_commands.guild_only()
    async def test_nickname_filter(
        self, interaction: discord.Interaction, nickname: str
    ):
        """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ñ–∏–ª—å—Ç—Ä –Ω–∏–∫–Ω–µ–π–º–æ–≤ –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º –ø—Ä–∏–º–µ—Ä–µ"""

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞
        user_roles = [role.name for role in interaction.user.roles]
        admin_roles = ["–ñ–∏—Ç–µ–ª—å", "–ì—Ä–∞–∂–¥–∞–Ω–∏–Ω", "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"]

        if not any(role in user_roles for role in admin_roles):
            await interaction.response.send_message(
                "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–∞.", ephemeral=True
            )
            return

        try:
            from utils.nickname_filter import filter_nickname

            is_blocked, reason, user_message = filter_nickname(nickname)

            if is_blocked:
                embed = discord.Embed(
                    title="üö´ –ù–∏–∫–Ω–µ–π–º –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω",
                    description=f"**–¢–µ—Å—Ç–∏—Ä—É–µ–º—ã–π –Ω–∏–∫–Ω–µ–π–º:** `{nickname}`",
                    color=0xFF0000,
                )
                embed.add_field(
                    name="üîç –ü—Ä–∏—á–∏–Ω–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏:", value=reason, inline=False
                )
                embed.add_field(
                    name="üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é:",
                    value=(
                        user_message[:1000] + "..."
                        if len(user_message) > 1000
                        else user_message
                    ),
                    inline=False,
                )
            else:
                embed = discord.Embed(
                    title="‚úÖ –ù–∏–∫–Ω–µ–π–º –ø—Ä–æ—à–µ–ª –ø—Ä–æ–≤–µ—Ä–∫—É",
                    description=f"**–¢–µ—Å—Ç–∏—Ä—É–µ–º—ã–π –Ω–∏–∫–Ω–µ–π–º:** `{nickname}`",
                    color=0x00FF00,
                )
                embed.add_field(
                    name="üìä –†–µ–∑—É–ª—å—Ç–∞—Ç:",
                    value="–ù–∏–∫–Ω–µ–π–º –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ–ø–æ–¥–æ–±–∞—é—â–µ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞",
                    inline=False,
                )

            embed.set_footer(text=f"–¢–µ—Å—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω {interaction.user.display_name}")

            await interaction.response.send_message(embed=embed, ephemeral=True)

            logger.info(
                f"üß™ {interaction.user.display_name} –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–ª –Ω–∏–∫–Ω–µ–π–º '{nickname}': –±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω={is_blocked}"
            )

        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–∞: {e}")
            await interaction.response.send_message(
                f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Ñ–∏–ª—å—Ç—Ä–∞: {str(e)}", ephemeral=True
            )

    @app_commands.command(
        name="nickname_filter_stats", description="–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–∞–±–æ—Ç—ã —Ñ–∏–ª—å—Ç—Ä–∞ –Ω–∏–∫–Ω–µ–π–º–æ–≤"
    )
    @app_commands.guild_only()
    async def nickname_filter_stats(self, interaction: discord.Interaction):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ñ–∏–ª—å—Ç—Ä–∞ –Ω–∏–∫–Ω–µ–π–º–æ–≤"""

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞
        user_roles = [role.name for role in interaction.user.roles]
        admin_roles = ["–ñ–∏—Ç–µ–ª—å", "–ì—Ä–∞–∂–¥–∞–Ω–∏–Ω", "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"]

        if not any(role in user_roles for role in admin_roles):
            await interaction.response.send_message(
                "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ñ–∏–ª—å—Ç—Ä–∞ –Ω–∏–∫–Ω–µ–π–º–æ–≤.",
                ephemeral=True,
            )

    @app_commands.command(
        name="moderate_nickname", description="–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∏–∫–Ω–µ–π–º –ø–æ –ø—Ä–∞–≤–∏–ª–∞–º –º–æ–¥–µ—Ä–∞—Ü–∏–∏"
    )
    @app_commands.describe(nickname="–ù–∏–∫–Ω–µ–π–º –≤ —Ñ–æ—Ä–º–∞—Ç–µ '–ò–≥—Ä–æ–≤–æ–π–ù–∏–∫ | –ò–º—è'")
    @app_commands.guild_only()
    async def moderate_nickname_command(
        self, interaction: discord.Interaction, nickname: str
    ):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∏–∫–Ω–µ–π–º –ø–æ —Å—Ç—Ä–æ–≥–∏–º –ø—Ä–∞–≤–∏–ª–∞–º –º–æ–¥–µ—Ä–∞—Ü–∏–∏"""

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞
        user_roles = [role.name for role in interaction.user.roles]
        admin_roles = ["–ñ–∏—Ç–µ–ª—å", "–ì—Ä–∞–∂–¥–∞–Ω–∏–Ω", "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"]

        if not any(role in user_roles for role in admin_roles):
            await interaction.response.send_message(
                "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ –Ω–∏–∫–Ω–µ–π–º–æ–≤.",
                ephemeral=True,
            )
            return

        try:
            # –õ–æ–∫–∞–ª—å–Ω—ã–π –∏–º–ø–æ—Ä—Ç –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
            from utils.nickname_moderator import NicknameModerator
            
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–æ–¥–µ—Ä–∞—Ç–æ—Ä –Ω–∏–∫–Ω–µ–π–º–æ–≤
            moderator = NicknameModerator()
            result = await moderator.check_nickname(interaction.user, nickname)
            moderator = NicknameModerator()
            result = await moderator.check_nickname(nickname)

            # –°–æ–∑–¥–∞–µ–º embed —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º
            if result.approve:
                embed = discord.Embed(
                    title="‚úÖ –ù–∏–∫–Ω–µ–π–º –æ–¥–æ–±—Ä–µ–Ω",
                    description=f"**–ü—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–π –Ω–∏–∫–Ω–µ–π–º:** `{nickname}`",
                    color=0x00FF00,
                    timestamp=datetime.now(timezone.utc),
                )
                embed.add_field(
                    name="üìù –°—Ç–∞—Ç—É—Å",
                    value="–°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –≤—Å–µ–º —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º",
                    inline=False,
                )
            else:
                embed = discord.Embed(
                    title="‚ùå –ù–∏–∫–Ω–µ–π–º –æ—Ç–∫–ª–æ–Ω–µ–Ω",
                    description=f"**–ü—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–π –Ω–∏–∫–Ω–µ–π–º:** `{nickname}`",
                    color=0xFF0000,
                    timestamp=datetime.now(timezone.utc),
                )

                if result.reasons:
                    embed.add_field(
                        name="üö´ –ü—Ä–∏—á–∏–Ω—ã –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è",
                        value="\n".join(f"‚Ä¢ {reason}" for reason in result.reasons),
                        inline=Falsese,
                    )

                if result["fixed_full"]:
                    embed.add_field(
                        name="üîß –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ",
                        value=f"`{result['fixed_full']}`",
                        inline=False,
                    )

            if result["notes_to_user"]:
                embed.add_field(
                    name="üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏",
                    value=result["notes_to_user"],
                    inline=False,
                )

            embed.set_footer(text=f"–ü—Ä–æ–≤–µ—Ä–∫—É –≤—ã–ø–æ–ª–Ω–∏–ª {interaction.user.display_name}")

            await interaction.response.send_message(embed=embed, ephemeral=True)

            logger.info(
                f"üß™ {interaction.user.display_name} –ø—Ä–æ–≤–µ—Ä–∏–ª –Ω–∏–∫–Ω–µ–π–º '{nickname}': –æ–¥–æ–±—Ä–µ–Ω={result['approve']}"
            )

        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏ –Ω–∏–∫–Ω–µ–π–º–∞: {e}")
            await interaction.response.send_message(
                f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –Ω–∏–∫–Ω–µ–π–º–∞: {str(e)}", ephemeral=True
            )

    @app_commands.command(
        name="add_banned_word", description="–î–æ–±–∞–≤–∏—Ç—å —Å–ª–æ–≤–æ –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Ñ–∏–ª—å—Ç—Ä–∞"
    )
    @app_commands.describe(word="–°–ª–æ–≤–æ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫")
    @app_commands.guild_only()
    async def add_banned_word(self, interaction: discord.Interaction, word: str):
        """–î–æ–±–∞–≤–ª—è–µ—Ç —Å–ª–æ–≤–æ –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Ñ–∏–ª—å—Ç—Ä–∞"""

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ (—Ç–æ–ª—å–∫–æ –≤—ã—Å—à–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã)
        user_roles = [role.name for role in interaction.user.roles]
        admin_roles = ["–ì—Ä–∞–∂–¥–∞–Ω–∏–Ω", "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"]

        if not any(role in user_roles for role in admin_roles):
            await interaction.response.send_message(
                "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —á–µ—Ä–Ω—ã–º —Å–ø–∏—Å–∫–æ–º.", ephemeral=True
            )
            return

        try:
            from utils.nickname_filter import nickname_filter

            word_clean = word.strip().lower()

            if not word_clean:
                await interaction.response.send_message(
                    "‚ùå –°–ª–æ–≤–æ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º.", ephemeral=True
                )
                return

            if word_clean in nickname_filter.banned_words_full:
                await interaction.response.send_message(
                    f"‚ö†Ô∏è –°–ª–æ–≤–æ '{word_clean}' —É–∂–µ –µ—Å—Ç—å –≤ —á–µ—Ä–Ω–æ–º —Å–ø–∏—Å–∫–µ.", ephemeral=True
                )
                return

            # –î–æ–±–∞–≤–ª—è–µ–º —Å–ª–æ–≤–æ
            nickname_filter.banned_words_full.append(word_clean)

            embed = discord.Embed(
                title="‚úÖ –°–ª–æ–≤–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫",
                description=f"**–î–æ–±–∞–≤–ª–µ–Ω–Ω–æ–µ —Å–ª–æ–≤–æ:** `{word_clean}`",
                color=0x00FF00,
            )

            embed.add_field(
                name="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:",
                value=f"–í—Å–µ–≥–æ —Å–ª–æ–≤ –≤ —á–µ—Ä–Ω–æ–º —Å–ø–∏—Å–∫–µ: {len(nickname_filter.banned_words_full)}",
                inline=False,
            )

            embed.set_footer(
                text=f"–î–æ–±–∞–≤–ª–µ–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º {interaction.user.display_name}"
            )

            await interaction.response.send_message(embed=embed, ephemeral=True)

            logger.info(
                f"üìù {interaction.user.display_name} –¥–æ–±–∞–≤–∏–ª —Å–ª–æ–≤–æ '{word_clean}' –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Ñ–∏–ª—å—Ç—Ä–∞"
            )

        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–ª–æ–≤–∞: {e}")
            await interaction.response.send_message(
                f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å–ª–æ–≤–∞: {str(e)}", ephemeral=True
            )


async def setup(bot):
    await bot.add_cog(NicknameAdmin(bot))