
import discord
from discord.ext import commands
import logging
import re
import asyncio
from datetime import datetime, timezone
from utils.rate_limiter import safe_send_message
from config import config
from utils.discord_logger import log_to_channel, log_error, discord_logger
from utils.logger import get_module_logger

logger = get_module_logger(__name__)


class AutoResponseHandler:
    def __init__(self, bot):
        self.bot = bot
        self.response_cooldowns = {}  # –ö—É–ª–¥–∞—É–Ω—ã –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è —Å–ø–∞–º–∞

    async def handle_message(self, message: discord.Message):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –æ—Ç–≤–µ—Ç–æ–≤"""
        try:
            # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –±–æ—Ç–æ–≤
            if message.author.bot:
                return

            # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
            if message.type != discord.MessageType.default:
                return

            # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º AI –∫–∞–Ω–∞–ª
            if message.channel.id == 1178436876244361388:
                return

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—É–ª–¥–∞—É–Ω
            user_id = message.author.id
            current_time = asyncio.get_event_loop().time()

            if user_id in self.response_cooldowns:
                if (
                    current_time - self.response_cooldowns[user_id] < 30
                ):  # 30 —Å–µ–∫—É–Ω–¥ –∫—É–ª–¥–∞—É–Ω
                    return

            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç—ã —Ç–æ–ª—å–∫–æ –≤ —Ç–∏–∫–µ—Ç-–∫–∞–Ω–∞–ª–∞—Ö
            if not (
                hasattr(message.channel, "name")
                and message.channel.name.startswith("new_")
            ):
                return

            content = message.content.lower().strip()

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç—Ä–∏–≥–≥–µ—Ä—ã –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç–æ–≤ –¥–ª—è –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä–∫–∏
            recheck_triggers = [
                "–≥–æ—Ç–æ–≤–æ",
                "–≥–æ—Ç–æ–≤",
                "–ø—Ä–æ–≤–µ—Ä—å",
                "–ø—Ä–æ–≤–µ—Ä—å –∑–∞—è–≤–∫—É",
                "–∏—Å–ø—Ä–∞–≤–∏–ª",
                "–∏—Å–ø—Ä–∞–≤–∏–ª–∞",
                "–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ",
            ]
            if any(trigger in content for trigger in recheck_triggers):
                await self._send_recheck_response(message)
                self.response_cooldowns[user_id] = current_time

        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç–∞: {e}")

    async def _send_recheck_response(self, message: discord.Message):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ—Ç–≤–µ—Ç –æ –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä–∫–µ –∑–∞—è–≤–∫–∏"""
        try:
            await safe_send_message(
                message.channel,
                f"üîÑ {message.author.mention} –ó–∞–ø—É—Å–∫–∞—é –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä–∫—É –≤–∞—à–µ–π –∑–∞—è–≤–∫–∏...",
            )

            # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä–∫—É —á–µ—Ä–µ–∑ TicketHandler
            ticket_handler = self.bot.get_cog("TicketHandler")
            if ticket_handler and hasattr(ticket_handler, 'analyze_and_respond_to_application'):
                await ticket_handler.analyze_and_respond_to_application(
                    message.channel, message.author
                )

        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç–∞: {e}")


# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç–æ–≤
auto_response_handler = None


def set_bot(bot):
    """–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç –¥–ª—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç–æ–≤"""
    global auto_response_handler
    auto_response_handler = AutoResponseHandler(bot)
