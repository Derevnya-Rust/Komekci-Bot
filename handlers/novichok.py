import re
import asyncio
import time
import logging
import aiohttp
import discord
from datetime import datetime, timezone

from handlers.steam_api import fetch_steam_data, get_steamid64_from_url, steam_client
from utils.cache import get_cached, set_cache
from utils.validators import parse_discord_nick, nick_matches, is_nickname_format_valid, hard_check_full
from utils.misc import extract_real_name_from_discord_nick
from utils.logger import get_module_logger

logger = get_module_logger(__name__)


def _are_nicknames_completely_different(nick1, nick2):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è—é—Ç—Å—è –ª–∏ –Ω–∏–∫–Ω–µ–π–º—ã –∫–∞—Ä–¥–∏–Ω–∞–ª—å–Ω–æ —Ä–∞–∑–Ω—ã–º–∏ (—Ä–∞–∑–Ω—ã–µ –∞–ª—Ñ–∞–≤–∏—Ç—ã –∏–ª–∏ —Å—Ç–∏–ª–∏)"""
    if not nick1 or not nick2:
        return True

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –∞–ª—Ñ–∞–≤–∏—Ç—ã
    has_cyrillic_1 = bool(re.search(r"[–∞-—è—ë]", nick1, re.IGNORECASE))
    has_latin_1 = bool(re.search(r"[a-z]", nick1, re.IGNORECASE))
    has_cyrillic_2 = bool(re.search(r"[–∞-—è—ë]", nick2, re.IGNORECASE))
    has_latin_2 = bool(re.search(r"[a-z]", nick2, re.IGNORECASE))

    # –ï—Å–ª–∏ –æ–¥–∏–Ω –Ω–∏–∫ —Ç–æ–ª—å–∫–æ –Ω–∞ –∫–∏—Ä–∏–ª–ª–∏—Ü–µ, –∞ –¥—Ä—É–≥–æ–π —Ç–æ–ª—å–∫–æ –Ω–∞ –ª–∞—Ç–∏–Ω–∏—Ü–µ - —ç—Ç–æ —Ä–∞–∑–Ω—ã–µ –Ω–∏–∫–∏
    if (has_cyrillic_1 and not has_latin_1) and (has_latin_2 and not has_cyrillic_2):
        return True
    if (has_latin_1 and not has_cyrillic_1) and (has_cyrillic_2 and not has_latin_2):
        return True

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ —Ä–∞–∑–Ω—ã–µ —Å—Ç–∏–ª–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, XOMKI4 vs –ö–∏—è–Ω–∫–∞)
    # –ï—Å–ª–∏ –æ–¥–∏–Ω —Å–æ–¥–µ—Ä–∂–∏—Ç —Ü–∏—Ñ—Ä—ã, –∞ –¥—Ä—É–≥–æ–π –Ω–µ—Ç, –∏ –ø—Ä–∏ —ç—Ç–æ–º —Å—Ö–æ–¥—Å—Ç–≤–æ –æ—á–µ–Ω—å –Ω–∏–∑–∫–æ–µ
    has_digits_1 = bool(re.search(r"\d", nick1))
    has_digits_2 = bool(re.search(r"\d", nick2))

    if has_digits_1 != has_digits_2:
        # –í—ã—á–∏—Å–ª—è–µ–º —Å—Ö–æ–¥—Å—Ç–≤–æ –±–µ–∑ —Ü–∏—Ñ—Ä –¥–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
        clean_nick1 = re.sub(r"\d", "", nick1)
        clean_nick2 = re.sub(r"\d", "", nick2)
        if clean_nick1 and clean_nick2:
            similarity = _calculate_nickname_similarity(clean_nick1, clean_nick2)
            if similarity < 0.3:  # –û—á–µ–Ω—å –Ω–∏–∑–∫–æ–µ —Å—Ö–æ–¥—Å—Ç–≤–æ
                return True

    return False


def _calculate_nickname_similarity(nick1, nick2):
    """–í—ã—á–∏—Å–ª—è–µ—Ç —Å—Ö–æ–¥—Å—Ç–≤–æ –º–µ–∂–¥—É –¥–≤—É–º—è –Ω–∏–∫–Ω–µ–π–º–∞–º–∏ (–æ—Ç 0 –¥–æ 1)"""
    if not nick1 or not nick2:
        return 0.0

    # –£–¥–∞–ª—è–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã –∏ —Ü–∏—Ñ—Ä—ã –≤ –∫–æ–Ω—Ü–µ –¥–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ–≥–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
    clean_nick1 = re.sub(r"[^a-zA-Z–∞-—è—ë]", "", nick1.lower())
    clean_nick2 = re.sub(r"[^a-zA-Z–∞-—è—ë]", "", nick2.lower())

    if not clean_nick1 or not clean_nick2:
        return 0.0

    if clean_nick1 == clean_nick2:
        return 1.0

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ö–æ–∂–¥–µ–Ω–∏–µ –æ–¥–Ω–æ–≥–æ –≤ –¥—Ä—É–≥–æ–π
    if clean_nick1 in clean_nick2 or clean_nick2 in clean_nick1:
        shorter = min(len(clean_nick1), len(clean_nick2))
        longer = max(len(clean_nick1), len(clean_nick2))
        return shorter / longer

    # –ê–ª–≥–æ—Ä–∏—Ç–º –õ–µ–≤–µ–Ω—à—Ç–µ–π–Ω–∞ –¥–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ–≥–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
    def levenshtein_distance(s1, s2):
        if len(s1) > len(s2):
            s1, s2 = s2, s1

        distances = list(range(len(s1) + 1))
        for i2, c2 in enumerate(s2):
            distances_ = [i2 + 1]
            for i1, c1 in enumerate(s1):
                if c1 == c2:
                    distances_.append(distances[i1])
                else:
                    distances_.append(
                        1 + min((distances[i1], distances[i1 + 1], distances_[-1]))
                    )
            distances = distances_
        return distances[-1]

    max_len = max(len(clean_nick1), len(clean_nick2))
    if max_len == 0:
        return 1.0

    distance = levenshtein_distance(clean_nick1, clean_nick2)
    similarity = 1 - (distance / max_len)

    return max(0.0, similarity)


def get_account_age_days(member) -> int:
    """–°—á–∏—Ç–∞–µ—Ç –≤–æ–∑—Ä–∞—Å—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ Discord –≤ –¥–Ω—è—Ö."""
    return (datetime.now(timezone.utc) - member.created_at).days


def extract_steam_links(text) -> list:
    """–ò–∑–≤–ª–µ–∫–∞–µ—Ç Steam —Å—Å—ã–ª–∫–∏ –∏–∑ —Ç–µ–∫—Å—Ç–∞"""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø –≤—Ö–æ–¥—è—â–µ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞
    if not isinstance(text, str):
        text = str(text)

    logger.debug(f"–ò–∑–≤–ª–µ—á–µ–Ω–∏–µ Steam —Å—Å—ã–ª–æ–∫ –∏–∑: {text}")

    # –†–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è Steam —Å—Å—ã–ª–æ–∫
    steam_pattern = r'https://steamcommunity\.com/(?:profiles|id)/[a-zA-Z0-9_-]+/?'

    # –ò—â–µ–º –≤—Å–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è
    matches = re.finditer(steam_pattern, text)
    links = [match.group() for match in matches]

    logger.debug(f"–ù–∞–π–¥–µ–Ω–æ Steam —Å—Å—ã–ª–æ–∫: {len(links)}")
    return links


def extract_steam_links_from_embed(
    embed, target_player_name=None, target_player_id=None
):
    """
    –ò–∑–≤–ª–µ–∫–∞–µ—Ç Steam-—Å—Å—ã–ª–∫–∏ –∏–∑ Discord embed'–∞.

    Args:
        embed: Discord embed –æ–±—ä–µ–∫—Ç
        target_player_name: –∏–º—è –∏–≥—Ä–æ–∫–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–Ω–æ—Å—Ç–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
        target_player_id: ID –∏–≥—Ä–æ–∫–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–Ω–æ—Å—Ç–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)

    Returns:
        List[str]: —Å–ø–∏—Å–æ–∫ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö Steam-—Å—Å—ã–ª–æ–∫
    """
    steam_links = []

    if not embed:
        return steam_links

    logger.debug(
        f"üîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º embed: title='{embed.title}', description='{embed.description[:100] if embed.description else 'None'}...'"
    )

    # –†–ê–°–®–ò–†–ï–ù–ù–ê–Ø –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∞–Ω–∫–µ—Ç—É - –±–æ–ª–µ–µ –≥–∏–±–∫–∏–µ –∫—Ä–∏—Ç–µ—Ä–∏–∏
    is_application_embed = False

    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
    if embed.title:
        title_lower = embed.title.lower()
        application_keywords = [
            "–∞–Ω–∫–µ—Ç–∞",
            "–∑–∞—è–≤–∫–∞",
            "application",
            "—Ñ–æ—Ä–º–∞",
            "–≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—é",
        ]
        is_application_embed = any(
            keyword in title_lower for keyword in application_keywords
        )
        logger.debug(
            f"üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –Ω–∞ –∞–Ω–∫–µ—Ç—É: '{embed.title}' -> {is_application_embed}"
        )

    # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Steam-–ø–æ–ª–µ–π –≤ embed'–µ
    if not is_application_embed and embed.fields:
        steam_field_keywords = [
            "steam",
            "—Å—Ç–∏–º",
            "–ø—Ä–æ—Ñ–∏–ª—å",
            "—Å—Å—ã–ª–∫–∞ –Ω–∞ –≤–∞—à steam",
            "—Ä–∞–Ω—å—à–µ –∏–≥—Ä–∞–ª–∏",
            "—Å–∫–æ–ª—å–∫–æ —á–∞—Å–æ–≤",
            "–≤—Ä–µ–º—è –≤ –∏–≥—Ä–µ",
        ]

        for field in embed.fields:
            if field.name:
                field_name_lower = field.name.lower()
                if any(keyword in field_name_lower for keyword in steam_field_keywords):
                    is_application_embed = True
                    logger.debug(
                        f"üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—è –Ω–∞ –∞–Ω–∫–µ—Ç—É: '{field.name}' -> {is_application_embed}"
                    )
                    break

    # 3. –ï—Å–ª–∏ –µ—Å—Ç—å –ø–æ–ª—è —Å —Ç–∏–ø–∏—á–Ω—ã–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏ –∞–Ω–∫–µ—Ç—ã - —Å—á–∏—Ç–∞–µ–º –∞–Ω–∫–µ—Ç–æ–π
    if not is_application_embed and embed.fields and len(embed.fields) >= 2:
        typical_questions = [
            "—Ä–∞–Ω—å—à–µ –∏–≥—Ä–∞–ª–∏",
            "—Å–∫–æ–ª—å–∫–æ —á–∞—Å–æ–≤",
            "–≤—Ä–µ–º—è",
            "–æ–ø—ã—Ç",
            "–≤–æ–∑—Ä–∞—Å—Ç",
            "–æ—Ç–∫—É–¥–∞ —É–∑–Ω–∞–ª–∏",
            "–¥—Ä—É–≥",
            "—Å–µ—Ä–≤–µ—Ä",
        ]

        field_matches = 0
        for field in embed.fields:
            if field.name:
                field_name_lower = field.name.lower()
                if any(keyword in field_name_lower for keyword in typical_questions):
                    field_matches += 1

        if field_matches >= 2:  # –ï—Å–ª–∏ –µ—Å—Ç—å 2+ —Ç–∏–ø–∏—á–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–∞ –∞–Ω–∫–µ—Ç—ã
            is_application_embed = True
            logger.debug(
                f"üìã –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –∞–Ω–∫–µ—Ç–∞ –ø–æ —Ç–∏–ø–∏—á–Ω—ã–º –≤–æ–ø—Ä–æ—Å–∞–º: {field_matches} —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π"
            )

    # 4. –ï—Å–ª–∏ –Ω–∞—à–ª–∏ Steam-—Å—Å—ã–ª–∫—É –≤ –ª—é–±–æ–º –ø–æ–ª–µ - –≤–µ—Ä–æ—è—Ç–Ω–æ —ç—Ç–æ –∞–Ω–∫–µ—Ç–∞
    if not is_application_embed and embed.fields:
        for field in embed.fields:
            if field.value and "steamcommunity.com" in field.value:
                is_application_embed = True
                logger.debug(f"üìã –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ Steam-—Å—Å—ã–ª–∫–∞ –≤ –ø–æ–ª–µ - —Å—á–∏—Ç–∞–µ–º –∞–Ω–∫–µ—Ç–æ–π")
                break

    # –ï—Å–ª–∏ —ç—Ç–æ –ù–ï –∞–Ω–∫–µ—Ç–∞ - –Ω–µ –∏–∑–≤–ª–µ–∫–∞–µ–º Steam-—Å—Å—ã–ª–∫–∏
    if not is_application_embed:
        logger.debug(
            f"üö´ Embed –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∞–Ω–∫–µ—Ç–æ–π, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ Steam-—Å—Å—ã–ª–æ–∫"
        )
        return steam_links

    logger.info(f"‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ: —ç—Ç–æ embed –∞–Ω–∫–µ—Ç—ã")

    # –ò–∑–≤–ª–µ–∫–∞–µ–º Steam-—Å—Å—ã–ª–∫–∏ –∏–∑ –æ–ø–∏—Å–∞–Ω–∏—è
    if embed.description:
        description_links = extract_steam_links(embed.description)
        steam_links.extend(description_links)
        if description_links:
            logger.info(
                f"üîó –ù–∞–π–¥–µ–Ω—ã Steam-—Å—Å—ã–ª–∫–∏ –≤ –æ–ø–∏—Å–∞–Ω–∏–∏ embed'–∞: {description_links}"
            )

    # –ò–∑–≤–ª–µ–∫–∞–µ–º Steam-—Å—Å—ã–ª–∫–∏ –∏–∑ –ø–æ–ª–µ–π
    if embed.fields:
        logger.debug(f"üìã –ü—Ä–æ–≤–µ—Ä—è–µ–º {len(embed.fields)} –ø–æ–ª–µ–π embed'–∞...")

        for field in embed.fields:
            if not field.value:
                continue

            field_name_lower = field.name.lower() if field.name else ""
            field_value = field.value.strip()

            logger.debug(f"üîç –ü–æ–ª–µ: '{field.name}' = '{field_value[:50]}...'")

            # –ò—â–µ–º Steam-—Å—Å—ã–ª–∫–∏ –≤–æ –≤—Å–µ—Ö –ø–æ–ª—è—Ö
            field_links = extract_steam_links(field_value)
            if field_links:
                steam_links.extend(field_links)
                logger.info(
                    f"üîó –ù–∞–π–¥–µ–Ω—ã Steam-—Å—Å—ã–ª–∫–∏ –≤ –ø–æ–ª–µ '{field.name}': {field_links}"
                )

                # –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–µ –ø–æ–ª—è –¥–ª—è Steam-—Å—Å—ã–ª–æ–∫
                steam_priority_keywords = [
                    "—Å—Å—ã–ª–∫–∞ –Ω–∞ –≤–∞—à steam-–ø—Ä–æ—Ñ–∏–ª—å",
                    "steam-–ø—Ä–æ—Ñ–∏–ª—å",
                    "steam –ø—Ä–æ—Ñ–∏–ª—å",
                    "—Å—Å—ã–ª–∫–∞ –Ω–∞ steam",
                    "steam —Å—Å—ã–ª–∫–∞",
                    "steam",
                ]

                is_priority_field = any(
                    keyword in field_name_lower for keyword in steam_priority_keywords
                )
                if is_priority_field:
                    logger.info(
                        f"üîó [–ü–†–ò–û–†–ò–¢–ï–¢–ù–û–ï –ü–û–õ–ï] Steam-—Å—Å—ã–ª–∫–∏ –≤ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–æ–º –ø–æ–ª–µ '{field.name}': {field_links}"
                    )
                    # –ü–µ—Ä–µ–º–µ—â–∞–µ–º –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –≤ –Ω–∞—á–∞–ª–æ —Å–ø–∏—Å–∫–∞
                    for link in reversed(field_links):
                        if link in steam_links:
                            steam_links.remove(link)
                            steam_links.insert(0, link)

    # –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –∏ —É–¥–∞–ª—è–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã, —Å–æ—Ö—Ä–∞–Ω—è—è –ø–æ—Ä—è–¥–æ–∫
    unique_links = []
    for link in steam_links:
        normalized_link = normalize_steam_url(link)
        if normalized_link not in unique_links:
            unique_links.append(normalized_link)
            if normalized_link != link:
                logger.info(
                    f"üîß Steam URL –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω –≤ embed: {link} ‚Üí {normalized_link}"
                )

    if not unique_links:
        logger.warning(f"‚ö†Ô∏è Steam-—Å—Å—ã–ª–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ embed'–µ")
    else:
        logger.info(
            f"‚úÖ –ù–∞–π–¥–µ–Ω–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö Steam-—Å—Å—ã–ª–æ–∫ –≤ embed'–µ: {len(unique_links)} - {unique_links}"
        )

    return unique_links


def normalize_steam_url(steam_url: str) -> str:
    """–ù–æ—Ä–º–∞–ª–∏–∑—É–µ—Ç Steam URL, –ø—Ä–µ–æ–±—Ä–∞–∑—É—è Steam ID –≤ –ø–æ–ª–Ω—É—é —Å—Å—ã–ª–∫—É –µ—Å–ª–∏ –Ω—É–∂–Ω–æ"""
    if not steam_url:
        return ""

    # –ï—Å–ª–∏ —ç—Ç–æ —É–∂–µ –ø–æ–ª–Ω–∞—è —Å—Å—ã–ª–∫–∞, –æ—á–∏—â–∞–µ–º –æ—Ç –ª–∏—à–Ω–∏—Ö —á–∞—Å—Ç–µ–π
    if steam_url.startswith("https://steamcommunity.com/"):
        # –£–¥–∞–ª—è–µ–º –ª–∏—à–Ω–∏–µ —á–∞—Å—Ç–∏ URL —Ç–∏–ø–∞ /edit/settings, /games, /badges –∏ —Ç.–¥.
        clean_url = steam_url

        # –ü–∞—Ç—Ç–µ—Ä–Ω—ã –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ URL
        cleanup_patterns = [
            r"/edit/settings.*$",
            r"/edit.*$",
            r"/games.*$",
            r"/badges.*$",
            r"/friends.*$",
            r"/groups.*$",
            r"/screenshots.*$",
            r"/images.*$",
            r"/videos.*$",
            r"/workshop.*$",
            r"/inventory.*$",
            r"/reviews.*$",
            r"/recommended.*$",
            r"/\?.*$",  # —É–±–∏—Ä–∞–µ–º query –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
            r"#.*$",  # —É–±–∏—Ä–∞–µ–º —è–∫–æ—Ä–∏
        ]

        for pattern in cleanup_patterns:
            clean_url = re.sub(pattern, "", clean_url)

        # –£–±–∏—Ä–∞–µ–º trailing slash –µ—Å–ª–∏ –µ—Å—Ç—å
        clean_url = clean_url.rstrip("/")

        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—á–∏—â–µ–Ω–Ω—ã–π URL
        return clean_url

    # –ï—Å–ª–∏ —ç—Ç–æ Steam ID (17-—Ü–∏—Ñ—Ä–æ–≤–æ–µ —á–∏—Å–ª–æ), –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ –ø–æ–ª–Ω—É—é —Å—Å—ã–ª–∫—É
    steam_id_pattern = r"^\d{17}$"
    if re.match(steam_id_pattern, steam_url.strip()):
        return f"https://steamcommunity.com/profiles/{steam_url.strip()}"

    # –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ –ø–æ–ª–Ω–∞—è —Å—Å—ã–ª–∫–∞ –∏ –Ω–µ Steam ID, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–∞–∫ –µ—Å—Ç—å
    return steam_url


def extract_steam_id_from_url(steam_url: str) -> str | None:
    """–ò–∑–≤–ª–µ–∫–∞–µ—Ç Steam ID –∏–∑ URL"""
    if not steam_url:
        return None

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ —Ñ–µ–π–∫–æ–≤—ã–µ –¥–æ–º–µ–Ω—ã
    fake_domains = [
        "xn--steamcommunity-vul.com",
        "steamcommunlty.com",  # –ø—Ä–æ–ø—É—â–µ–Ω–∞ –±—É–∫–≤–∞ i
        "steamcommunitty.com",  # –¥–≤–æ–π–Ω–∞—è t
        "steamcommunity.ru",
        "steamcommunity.org",
    ]

    for fake_domain in fake_domains:
        if fake_domain in steam_url.lower():
            logger.warning(f"üö® –û–±–Ω–∞—Ä—É–∂–µ–Ω –ø–æ–¥–¥–µ–ª—å–Ω—ã–π –¥–æ–º–µ–Ω: {fake_domain}")
            return None

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –¥–æ–º–µ–Ω
    if "steamcommunity.com" not in steam_url.lower():
        logger.warning(f"‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –¥–æ–º–µ–Ω –≤ URL: {steam_url}")
        return None

    # –ò–∑–≤–ª–µ–∫–∞–µ–º ID –∏–∑ profiles/ –∏–ª–∏ id/
    if "/profiles/" in steam_url:
        match = re.search(r"/profiles/(\d+)", steam_url)
        if match:
            steam_id = match.group(1)
            logger.info(f"üÜî –ò–∑–≤–ª–µ—á–µ–Ω SteamID64 –∏–∑ profiles/: {steam_id}")
            return steam_id
    elif "/id/" in steam_url:
            match = re.search(r"/id/([^/]+)", steam_url)
            if match:
                vanity_name = match.group(1)
                logger.info(f"üîó –ù–∞–π–¥–µ–Ω Vanity URL: {vanity_name}, –Ω–∞—á–∏–Ω–∞–µ–º –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—é ‚Üí SteamID64")
                try:
                    from handlers.steam_api import get_steamid64_from_url
                    steam_id64 = asyncio.run(get_steamid64_from_url(steam_url))
                    if steam_id64:
                        logger.info(f"‚úÖ Vanity URL '{vanity_name}' –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω –≤ SteamID64: {steam_id64}")
                        return steam_id64
                    else:
                        logger.error(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å Vanity URL '{vanity_name}' –≤ SteamID64")
                        return None
                except Exception as e:
                    logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ Vanity URL: {e}")
                    return None

    logger.warning(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å ID –∏–∑ URL: {steam_url}")
    return None


async def check_steam_profile_and_nickname(
    steam_url: str, discord_nickname: str, user: discord.Member
) -> dict:
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç Steam-–ø—Ä–æ—Ñ–∏–ª—å –∏ —Å—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç –Ω–∏–∫–Ω–µ–π–º.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö –ø—Ä–æ–≤–µ—Ä–∫–∏.
    """
    logger.info(
        f"üîç –î–µ—Ç–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ Steam-–ø—Ä–æ—Ñ–∏–ª—è –¥–ª—è {user.display_name}: {steam_url}"
    )

    result = {
        "valid_url": False,
        "steam_nickname": "",
        "discord_nickname": discord_nickname,
        "nickname_matches": False,
        "error_message": "",
        "auto_fix_applied": False,
        "auto_fix_message": "",
        "original_nickname": discord_nickname,
    }

    # –®–∞–≥ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è URL
    try:
        normalized_url = normalize_steam_url(steam_url)
        logger.info(f"üîß –ù–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π URL: {normalized_url}")

        steam_id = extract_steam_id_from_url(normalized_url)
        if not steam_id:
            result["error_message"] = "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å Steam URL –≤ SteamID64"
            logger.error(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å Steam URL –≤ SteamID64: {steam_url}")
            return result

        result["valid_url"] = True
        logger.info(f"‚úÖ Steam URL –≤–∞–ª–∏–¥–Ω—ã–π, –∏–∑–≤–ª–µ—á–µ–Ω ID: {steam_id}")

    except Exception as e:
        result["error_message"] = f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å—Å—ã–ª–∫–∏: {str(e)}"
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å—Å—ã–ª–∫–∏ {steam_url}: {e}")
        return result

    # –®–∞–≥ 2: –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Steam API
    try:
        from handlers.steam_api import steam_client

        logger.info(f"üåê –ó–∞–ø—Ä–æ—Å –¥–∞–Ω–Ω—ã—Ö Steam API –¥–ª—è ID: {steam_id}")
        steam_data = await steam_client.fetch_steam_data(steam_id)

        if not steam_data or not steam_data.get("success"):
            result["error_message"] = steam_data.get("error_message", "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ Steam –ø—Ä–æ—Ñ–∏–ª—è")
            return result

        # –ü–æ–ª—É—á–∞–µ–º Steam –Ω–∏–∫–Ω–µ–π–º
        steam_nickname = steam_data.get("personaname", "")
        if not steam_nickname:
            result["error_message"] = "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –Ω–∏–∫–Ω–µ–π–º –∏–∑ Steam –ø—Ä–æ—Ñ–∏–ª—è"
            logger.error(f"‚ùå –ü—É—Å—Ç–æ–π Steam –Ω–∏–∫–Ω–µ–π–º –¥–ª—è {steam_id}")
            return result

        result["steam_nickname"] = steam_nickname
        logger.info(f"‚úÖ Steam –Ω–∏–∫–Ω–µ–π–º –ø–æ–ª—É—á–µ–Ω: '{steam_nickname}'")

    except Exception as e:
        logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ Steam API: {e}")
        result["error_message"] = f"‚ùå –û—à–∏–±–∫–∞ Steam API: {str(e)}"
        return result

    # –®–∞–≥ 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è –Ω–∏–∫–Ω–µ–π–º–æ–≤
    try:

        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –Ω–∏–∫–Ω–µ–π–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        current_user_nick = user.display_name

        # –ü–∞—Ä—Å–∏–º –ª–µ–≤—É—é —á–∞—Å—Ç—å Discord –Ω–∏–∫–∞
        discord_left = parse_discord_nick(current_user_nick)

        logger.info(f"üîç –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –Ω–∏–∫–æ–≤:")
        logger.info(f"  Steam: '{steam_nickname}'")
        logger.info(f"  Discord full: '{current_user_nick}'")
        logger.info(f"  Discord left: '{discord_left}'")

        # –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º –Ω–∏–∫–∏
        matches = nick_matches(steam_nickname, discord_left)
        result["nickname_matches"] = matches

        if matches:
            logger.info(f"‚úÖ –ù–∏–∫–∏ —Å–æ–≤–ø–∞–¥–∞—é—Ç")
        else:
            logger.info(f"‚ö†Ô∏è –ù–∏–∫–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç")

            # –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ü–†–û–í–ï–†–ö–ê: –ù–ï –ø—Ä–∏–º–µ–Ω—è–µ–º –∞–≤—Ç–æ–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –µ—Å–ª–∏ –∏–º—è —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∞—Ç–∏–Ω—Å–∫–∏–µ –±—É–∫–≤—ã
            real_name = extract_real_name_from_discord_nick(current_user_nick)

            # –°–¢–†–û–ì–ê–Ø –ø—Ä–æ–≤–µ—Ä–∫–∞: –ª—é–±–∞—è –ª–∞—Ç–∏–Ω—Å–∫–∞—è –±—É–∫–≤–∞ –≤ –∏–º–µ–Ω–∏ = –ë–õ–û–ö–ò–†–û–í–ö–ê –∞–≤—Ç–æ–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
            if re.search(r"[a-zA-Z]", real_name):
                result["error_message"] = (
                    f"‚ùå **–ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –õ–∞—Ç–∏–Ω—Å–∫–æ–µ –∏–º—è –≤ Discord –Ω–∏–∫–µ!**\n\n"
                    f"**–¢–µ–∫—É—â–∏–π –Ω–∏–∫:** `{current_user_nick}`\n"
                    f"**–ü—Ä–æ–±–ª–µ–º–∞:** –ò–º—è `{real_name}` —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∞—Ç–∏–Ω—Å–∫–∏–µ –±—É–∫–≤—ã\n\n"
                    f"üö´ **–°–¢–†–û–ì–û–ï —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–µ:** –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¢–û–õ–¨–ö–û –∫–∏—Ä–∏–ª–ª–∏—Ü—É (—Ä—É—Å—Å–∫–∏–µ –±—É–∫–≤—ã) –≤ –∏–º–µ–Ω–∏!\n"
                    f"‚úÖ **–ò—Å–ø—Ä–∞–≤—å—Ç–µ –Ω–∞:** `{steam_nickname} | –í–∞—à–µ–ò–º—è–ö–∏—Ä–∏–ª–ª–∏—Ü–µ–π`\n\n"
                    f"**–ü—Ä–∏–º–µ—Ä—ã –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –∏–º–µ–Ω:** –ú–∏—Ö–∞–∏–ª, –°–µ—Ä–≥–µ–π, –ê–Ω–Ω–∞, –î–º–∏—Ç—Ä–∏–π"
                )
                logger.error(f"üö´ –ë–õ–û–ö–ò–†–û–í–ö–ê –∞–≤—Ç–æ–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è: –∏–º—è '{real_name}' —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∞—Ç–∏–Ω—Å–∫–∏–µ –±—É–∫–≤—ã")
                return result

            suggested_nick = f"{steam_nickname} | {real_name}"

            # –í–∞–ª–∏–¥–∏—Ä—É–µ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã–π –Ω–∏–∫
            is_valid, reason, auto_fix_result = is_nickname_format_valid(suggested_nick)

            if is_valid or (auto_fix_result and auto_fix_result.get("auto_applied")):
                try:
                    # –ü—Ä–∏–º–µ–Ω—è–µ–º –∞–≤—Ç–æ–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¢–û–õ–¨–ö–û –µ—Å–ª–∏ –∏–º—è –∫–∏—Ä–∏–ª–ª–∏—á–µ—Å–∫–æ–µ
                    final_nick = auto_fix_result.get("fixed_nickname", suggested_nick) if auto_fix_result else suggested_nick

                    await user.edit(
                        nick=final_nick,
                        reason=f"–ê–≤—Ç–æ–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: Steam –Ω–∏–∫ '{steam_nickname}' –Ω–µ —Å–æ–≤–ø–∞–¥–∞–ª —Å Discord '{discord_left}'"
                    )

                    result["nickname_matches"] = True
                    result["auto_fix_applied"] = True
                    result["auto_fix_message"] = (
                        f"üîß **–ù–∏–∫–Ω–µ–π–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω!**\n\n"
                        f"**–ë—ã–ª–æ:** `{current_user_nick}`\n"
                        f"**–°—Ç–∞–ª–æ:** `{final_nick}`\n\n"
                        f"‚úÖ –¢–µ–ø–µ—Ä—å –≤–∞—à Discord –Ω–∏–∫–Ω–µ–π–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç Steam –Ω–∏–∫–Ω–µ–π–º—É!"
                    )
                    result["original_nickname"] = current_user_nick

                    logger.info(f"üîß –ê–≤—Ç–æ–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–æ: '{current_user_nick}' ‚Üí '{final_nick}'")

                except discord.Forbidden:
                    logger.warning(f"‚ö†Ô∏è –ù–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∏–∫–∞ —É {user.display_name}")
                    result["error_message"] = (
                        f"‚ùå **–ù–∏–∫–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç:**\n"
                        f"‚Ä¢ **Discord:** `{discord_left}`\n"
                        f"‚Ä¢ **Steam:** `{steam_nickname}`\n\n"
                        f"üîß **–ö–∞–∫ –∏—Å–ø—Ä–∞–≤–∏—Ç—å:**\n"
                        f"–ò–∑–º–µ–Ω–∏—Ç–µ –≤–∞—à Discord –Ω–∏–∫ –Ω–∞: `{suggested_nick}`"
                    )
                except Exception as e:
                    logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∏–∫–∞: {e}")
                    result["error_message"] = f"‚ùå –û—à–∏–±–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∏–∫–∞: {str(e)}"
            else:
                # –ù–µ —É–¥–∞–ª–æ—Å—å –∞–≤—Ç–æ–∏—Å–ø—Ä–∞–≤–∏—Ç—å
                result["error_message"] = (
                    f"‚ùå **–ù–∏–∫–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç:**\n"
                    f"‚Ä¢ **Discord:** `{discord_left}`\n" 
                    f"‚Ä¢ **Steam:** `{steam_nickname}`\n\n"
                    f"üîß **–ò–∑–º–µ–Ω–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –Ω–∏—Ö –¥–ª—è —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è**"
                )

    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∏–∫–Ω–µ–π–º–æ–≤: {e}")
        result["error_message"] = f"‚ùå –û—à–∏–±–∫–∞ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –Ω–∏–∫–Ω–µ–π–º–æ–≤: {str(e)}"
        return result

    logger.info(f"‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –¥–ª—è {user.display_name}: nickname_matches={result['nickname_matches']}")
    return result


def create_application_embed(
    user: discord.User,
    steam_url: str,
    result: dict,
    channel: discord.TextChannel,
    discord_nickname: str,
):
    """–°–æ–∑–¥–∞–µ—Ç embed —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞—è–≤–∫–∏."""
    embed = discord.Embed(
        title="–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞—è–≤–∫–∏ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ",
        description=f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.mention}\nSteam-–ø—Ä–æ—Ñ–∏–ª—å: {steam_url}",
        color=discord.Color.blue(),
    )

    # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    embed.set_author(
        name=f"{user.name}#{user.discriminator}",
        icon_url=user.avatar.url if user.avatar else discord.Embed.Empty,
    )

    # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ Steam –ø—Ä–æ—Ñ–∏–ª–µ
    if result.get("steam_nickname"):
        embed.add_field(
            name="Steam –ù–∏–∫–Ω–µ–π–º", value=f"`{result['steam_nickname']}`", inline=True
        )

    # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ Discord –Ω–∏–∫–Ω–µ–π–º–µ
    original_nickname_display = (
        result.get("original_nickname", discord_nickname)
        if result.get("auto_fix_applied")
        else discord_nickname
    )
    if original_nickname_display:
        embed.add_field(
            name="Discord –ù–∏–∫–Ω–µ–π–º", value=f"`{original_nickname_display}`", inline=True
        )

    # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–∏ –Ω–∏–∫–Ω–µ–π–º–æ–≤
    if "nickname_matches" in result:
        match_status = (
            "‚úÖ –°–æ–≤–ø–∞–¥–∞—é—Ç" if result["nickname_matches"] else "‚ùå –ù–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç"
        )
        embed.add_field(name="–°–æ–≤–ø–∞–¥–µ–Ω–∏–µ –Ω–∏–∫–Ω–µ–π–º–æ–≤", value=match_status, inline=False)

    # –£–±–∏—Ä–∞–µ–º –ø–æ–ª–µ –ø—Ä–æ —á–∞—Å—ã –≤ Rust, —Ç–∞–∫ –∫–∞–∫ –æ–Ω–æ —É–¥–∞–ª–µ–Ω–æ
    # if "rust_playtime_minutes" in result:
    #     rust_minutes = result["rust_playtime_minutes"]
    #     rust_hours = rust_minutes // 60
    #     embed.add_field(
    #         name="Rust –í—Ä–µ–º—è", value=f"{rust_minutes} –º–∏–Ω ({rust_hours} —á)", inline=True
    #     )


    # –£–±–∏—Ä–∞–µ–º –ø–æ–ª–µ –ø—Ä–æ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –ø—Ä–æ—Ñ–∏–ª—è
    # if "profile_accessible" in result:
    #     profile_status = (
    #         "‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω" if result["profile_accessible"] else "‚ùå –ü—Ä–∏–≤–∞—Ç–Ω—ã–π"
    #     )
    #     embed.add_field(name="Steam –ü—Ä–æ—Ñ–∏–ª—å", value=profile_status, inline=True)

    # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏, –µ—Å–ª–∏ –æ–Ω–æ –±—ã–ª–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–æ
    if result.get("auto_fix_applied"):
        embed.add_field(
            name="üîß –ê–≤—Ç–æ–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∏–∫–Ω–µ–π–º–∞",
            value=f"**–ë—ã–ª–æ:** `{result['original_nickname']}`\n**–°—Ç–∞–ª–æ:** `{result['fixed_nickname']}`\n\n"
            + result.get("auto_fix_message", ""),
            inline=False,
        )

    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—è —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏
    if result.get("warnings"):
        embed.add_field(
            name="‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è",
            value="\n".join(result["warnings"])[:1024],
            inline=False,
        )

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏
    if result.get("error_message"):
        status_color = 0xFF0000  # –ö—Ä–∞—Å–Ω—ã–π - –æ—à–∏–±–∫–∞
        status_title = "‚ùå –ó–∞—è–≤–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏"
        status_description = result["error_message"]
    elif result.get("auto_fix_applied"):
        status_color = 0x3498DB  # –°–∏–Ω–∏–π - –∞–≤—Ç–æ–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
        status_title = "üîß –ó–∞—è–≤–∫–∞ —Å –∞–≤—Ç–æ–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º"
        status_description = result.get("auto_fix_message", "–ù–∏–∫–Ω–µ–π–º –±—ã–ª –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω.")
    elif result.get("warnings"):
        status_color = 0xFFA500  # –û—Ä–∞–Ω–∂–µ–≤—ã–π - –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è
        status_title = "‚ö†Ô∏è –ó–∞—è–≤–∫–∞ —Ç—Ä–µ–±—É–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏"
        status_description = "–ù–∞–π–¥–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã, —Ç—Ä–µ–±—É—é—â–∏–µ –≤–Ω–∏–º–∞–Ω–∏—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞"
    else:
        status_color = 0x00FF00  # –ó–µ–ª–µ–Ω—ã–π - –≤—Å–µ —Ö–æ—Ä–æ—à–æ
        status_title = "‚úÖ –ó–∞—è–≤–∫–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—é"
        status_description = "–í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ"

    embed.add_field(name=status_title, value=status_description, inline=False)
    embed.color = discord.Color(
        status_color
    )  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ü–≤–µ—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç–∞—Ç—É—Å–∞

    return embed


def check_nickname_match(discord_nickname: str, steam_nickname: str) -> dict:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –Ω–∏–∫–Ω–µ–π–º–æ–≤ Discord –∏ Steam"""
    result = {"matches": False, "suggestion": None}

    if not discord_nickname or not steam_nickname:
        return result

    # –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ç–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
    if discord_nickname.lower() == steam_nickname.lower():
        result["matches"] = True
        return result

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ "SteamNick | –ò–º—è"
    if " | " in discord_nickname:
        steam_part = discord_nickname.split(" | ")[0].strip()
        if steam_part.lower() == steam_nickname.lower():
            result["matches"] = True
            return result

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ö–æ–¥—Å—Ç–≤–∞
    similarity = _calculate_nickname_similarity(discord_nickname, steam_nickname)
    if similarity > 0.8:
        result["matches"] = True
        return result

    # –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    if not " | " in discord_nickname:
        result["suggestion"] = f"–ò–∑–º–µ–Ω–∏—Ç–µ –Ω–∏–∫–Ω–µ–π–º –Ω–∞: {steam_nickname} | –ò–º—è"

    return result


def extract_discord_id(text: str) -> int | None:
    """–ò–∑–≤–ª–µ–∫–∞–µ—Ç Discord ID (17‚Äì20 —Ü–∏—Ñ—Ä) –∏–∑ —Ç–µ–∫—Å—Ç–∞."""
    if not text:
        return None

    # –ò—â–µ–º Discord —É–ø–æ–º–∏–Ω–∞–Ω–∏—è <@!ID> –∏–ª–∏ <@ID>
    mention_match = re.search(r"<@!?(\d{17,20})>", text)
    if mention_match:
        return int(mention_match.group(1))

    # –ò—â–µ–º –ø—Ä–æ—Å—Ç–æ –¥–ª–∏–Ω–Ω—ã–µ —á–∏—Å–ª–∞ (Discord ID)
    id_match = re.search(r"\b(\d{17,20})\b", text)
    if id_match:
        return int(id_match.group(1))

    return None