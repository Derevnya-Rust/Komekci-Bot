# 1. Updated imports and removed legacy Steam API calls, integrated ticket context for hours.

# Imports and setup for the application system cog, focusing on ticket context and Rust hours.
import discord
from discord.ext import commands
from discord import app_commands
import asyncio
import logging
import traceback
from datetime import datetime, timezone
from typing import Optional
import re
import random

from config import config
from utils.rate_limiter import safe_send_message
from utils.validators import auto_fix_nickname
from utils.discord_logger import log_error, log_to_channel
from utils.ticket_context import TicketContext, get_ctx # Import get_ctx and TicketContext
from utils.ai_moderation import decide_nickname # Import decide_nickname
from utils.nickname_moderator import NicknameModerator
from utils.decision import NickCheckResult
from utils.logger import get_module_logger

# Import SequenceMatcher and define helper function
from difflib import SequenceMatcher

def _ratio(a: str, b: str) -> float:
    return SequenceMatcher(None, str(a).lower(), str(b).lower()).ratio()  # 0.0..1.0

logger = get_module_logger(__name__)

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
ADMIN_ROLES = config.ADMIN_ROLES
NEWBIE_ROLE_ID = config.NEWBIE_ROLE_ID
GUEST_ROLE_ID = config.GUEST_ROLE_ID
LOG_CHANNEL_ID = config.LOG_CHANNEL_ID


class AutoFixConfirmationView(discord.ui.View):
    def __init__(
        self,
        user_id: int,
        original_nickname: str,
        fixed_nickname: str,
        fixes_applied: list,
    ):
        super().__init__(timeout=None)
        self.user_id = user_id
        self.original_nickname = original_nickname
        self.fixed_nickname = fixed_nickname
        self.fixes_applied = fixes_applied

    @discord.ui.button(
        label="‚úÖ –ü—Ä–∏–º–µ–Ω–∏—Ç—å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏ –æ–¥–æ–±—Ä–∏—Ç—å", style=discord.ButtonStyle.success
    )
    async def confirm_auto_fix(
        self, interaction: discord.Interaction, button: discord.ui.Button
    ):
        """–ü—Ä–∏–º–µ–Ω—è–µ—Ç –∞–≤—Ç–æ–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏ –æ–¥–æ–±—Ä—è–µ—Ç –∑–∞—è–≤–∫—É"""
        try:
            # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user = await interaction.guild.fetch_member(self.user_id)
            if not user:
                await interaction.response.send_message(
                    "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.", ephemeral=True
                )
                return

            # –ü—Ä–∏–º–µ–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –Ω–∏–∫–Ω–µ–π–º
            try:
                await user.edit(nick=self.fixed_nickname)
                logger.info(
                    f"üîß –ù–∏–∫–Ω–µ–π–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω: {self.original_nickname} ‚Üí {self.fixed_nickname}"
                )
            except discord.Forbidden:
                logger.warning(
                    f"‚ö†Ô∏è –ù–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∏–∫–Ω–µ–π–º–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.display_name}"
                )
            except Exception as nick_error:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∏–∫–Ω–µ–π–º–∞: {nick_error}")

            # –í—ã–¥–∞–µ–º —Ä–æ–ª—å –ù–æ–≤–∏—á–æ–∫
            novichok_role = discord.utils.get(
                interaction.guild.roles, id=1257813489595191296
            )
            if novichok_role and novichok_role not in user.roles:
                await user.add_roles(novichok_role)
                logger.info(
                    f"‚úÖ –†–æ–ª—å '–ù–æ–≤–∏—á–æ–∫' –≤—ã–¥–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.display_name}"
                )

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ–± –∞–≤—Ç–æ–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏
            try:
                user_embed = discord.Embed(
                    title="üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ–¥–æ–±—Ä–µ–Ω–∞!",
                    description="–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –î–µ—Ä–µ–≤–Ω—é VLG!",
                    color=0x00FF00,
                    timestamp=datetime.now(timezone.utc),
                )

                user_embed.add_field(
                    name="üîß –í–∞—à –Ω–∏–∫–Ω–µ–π–º –±—ã–ª –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω",
                    value=f"**–ë—ã–ª–æ:** `{self.original_nickname}`\n**–°—Ç–∞–ª–æ:** `{self.fixed_nickname}`\n\n**–ü—Ä–∏–º–µ–Ω–µ–Ω–Ω—ã–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:**\n‚Ä¢ "
                    + "\n‚Ä¢ ".join(self.fixes_applied),
                    inline=False,
                )

                user_embed.add_field(
                    name="üìã –ß—Ç–æ –¥–∞–ª—å—à–µ?",
                    value="‚Ä¢ –í–∞–º –≤—ã–¥–∞–Ω–∞ —Ä–æ–ª—å **–ù–æ–≤–∏—á–æ–∫**\n‚Ä¢ –ò–∑—É—á–∏—Ç–µ –ø—Ä–∞–≤–∏–ª–∞ —Å–µ—Ä–≤–µ—Ä–∞\n‚Ä¢ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ!\n‚Ä¢ –í–∞—à –Ω–∏–∫–Ω–µ–π–º —Ç–µ–ø–µ—Ä—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º –î–µ—Ä–µ–≤–Ω–∏",
                    inline=False,
                )

                user_embed.add_field(
                    name="üí° –ü–æ—á–µ–º—É –∏—Å–ø—Ä–∞–≤–ª–µ–Ω –Ω–∏–∫–Ω–µ–π–º?",
                    value="–ù–∏–∫–Ω–µ–π–º—ã –¥–æ–ª–∂–Ω—ã —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å —Ñ–æ—Ä–º–∞—Ç—É `–ò–≥—Ä–æ–≤–æ–π–Ω–∏–∫ | –ò–º—è` —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø—Ä–æ–±–µ–ª–∞–º–∏ –∏ –∑–∞–≥–ª–∞–≤–Ω—ã–º–∏ –±—É–∫–≤–∞–º–∏ –≤ –∏–º–µ–Ω–∏.",
                    inline=False,
                )

                user_embed.set_footer(
                    text="–î–µ—Ä–µ–≤–Ω—è VLG ‚Ä¢ –†–∞–¥—ã –≤–∏–¥–µ—Ç—å –≤–∞—Å –≤ –Ω–∞—à–µ–º —Å–æ–æ–±—â–µ—Å—Ç–≤–µ!"
                )

                await user.send(embed=user_embed)
                logger.info(
                    f"üìß –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –∞–≤—Ç–æ–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ –∏ –æ–¥–æ–±—Ä–µ–Ω–∏–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.display_name}"
                )
            except discord.Forbidden:
                logger.warning(
                    f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –õ–° –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.display_name} (–∑–∞–∫—Ä—ã—Ç—ã –õ–°)"
                )
            except Exception as dm_error:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –õ–°: {dm_error}")

            # –°–æ–∑–¥–∞–µ–º embed –¥–ª—è –æ–¥–æ–±—Ä–µ–Ω–∏—è –≤ —Ç–∏–∫–µ—Ç–µ
            approval_embed = discord.Embed(
                title="‚úÖ –ó–∞—è–≤–∫–∞ –æ–¥–æ–±—Ä–µ–Ω–∞ —Å –∞–≤—Ç–æ–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º",
                description=f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.mention} –ø—Ä–∏–Ω—è—Ç –≤ –î–µ—Ä–µ–≤–Ω—é VLG!",
                color=0x00FF00,
                timestamp=datetime.now(timezone.utc),
            )

            approval_embed.add_field(
                name="üîß –ê–≤—Ç–æ–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∏–∫–Ω–µ–π–º–∞",
                value=f"**–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ:** `{self.original_nickname}` ‚Üí `{self.fixed_nickname}`\n**–ü—Ä–∏–º–µ–Ω–µ–Ω—ã –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:**\n‚Ä¢ "
                + "\n‚Ä¢ ".join(self.fixes_applied),
                inline=False,
            )

            approval_embed.add_field(
                name="üë§ –ù–æ–≤—ã–π —É—á–∞—Å—Ç–Ω–∏–∫",
                value=f"**–£—á–∞—Å—Ç–Ω–∏–∫:** {user.mention}\n**–ù–∏–∫:** `{self.fixed_nickname}`\n**–†–æ–ª—å:** –ù–æ–≤–∏—á–æ–∫\n**–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ:** –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –õ–°",
                inline=False,
            )

            approval_embed.set_footer(
                text=f"–û–¥–æ–±—Ä–µ–Ω–æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º {interaction.user.display_name}"
            )

            await interaction.response.edit_message(embed=approval_embed, view=None)

        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏ –æ–¥–æ–±—Ä–µ–Ω–∏—è: {e}")
            await interaction.response.send_message(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞—è–≤–∫–∏.", ephemeral=True
            )

    @discord.ui.button(
        label="‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å –±–µ–∑ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π", style=discord.ButtonStyle.danger
    )
    async def reject_auto_fix(
        self, interaction: discord.Interaction, button: discord.ui.Button
    ):
        """–û—Ç–∫–ª–æ–Ω—è–µ—Ç –∑–∞—è–≤–∫—É –±–µ–∑ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∞–≤—Ç–æ–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π"""
        try:
            user = await interaction.guild.fetch_member(self.user_id)
            if not user:
                await interaction.response.send_message(
                    "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.", ephemeral=True
                )
                return

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ–± –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏
            try:
                user_reject_embed = discord.Embed(
                    title="‚ùå –ó–∞—è–≤–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞",
                    description="–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤–∞—à–∞ –∑–∞—è–≤–∫–∞ –≤ –î–µ—Ä–µ–≤–Ω—é VLG –±—ã–ª–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞.",
                    color=0xFF0000,
                    timestamp=datetime.now(timezone.utc),
                )

                user_reject_embed.add_field(
                    name="üìù –ü—Ä–∏—á–∏–Ω–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è",
                    value=f"–í–∞—à –Ω–∏–∫–Ω–µ–π–º `{self.original_nickname}` –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º —Å–µ—Ä–≤–µ—Ä–∞ –∏ —Ç—Ä–µ–±—É–µ—Ç —Ä—É—á–Ω–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è.",
                    inline=False,
                )

                user_reject_embed.add_field(
                    name="üîß –†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è",
                    value="‚Ä¢ "
                    + "\n‚Ä¢ ".join(self.fixes_applied)
                    + f"\n\n**–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç:** `{self.fixed_nickname}`",
                    inline=False,
                )

                user_reject_embed.add_field(
                    name="üí° –ß—Ç–æ –¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ?",
                    value="1. –ò—Å–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–π –Ω–∏–∫–Ω–µ–π–º –≤ Discord\n2. –ü–æ–¥–∞–π—Ç–µ –∑–∞—è–≤–∫—É –∑–∞–Ω–æ–≤–æ\n3. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ —Ñ–æ—Ä–º–∞—Ç: `–ò–≥—Ä–æ–≤–æ–π–Ω–∏–∫ | –ò–º—è`",
                    inline=False,
                )

                user_reject_embed.set_footer(
                    text="–î–µ—Ä–µ–≤–Ω—è VLG ‚Ä¢ –ò—Å–ø—Ä–∞–≤—å—Ç–µ –Ω–∏–∫–Ω–µ–π–º –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞"
                )

                await user.send(embed=user_reject_embed)
                logger.info(
                    f"üìß –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.display_name}"
                )
            except discord.Forbidden:
                logger.warning(
                    f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –õ–° –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.display_name} (–∑–∞–∫—Ä—ã—Ç—ã –õ–°)"
                )
            except Exception as dm_error:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –õ–°: {dm_error}")

            # –°–æ–∑–¥–∞–µ–º embed –¥–ª—è –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –≤ —Ç–∏–∫–µ—Ç–µ
            rejection_embed = discord.Embed(
                title="‚ùå –ó–∞—è–≤–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞",
                description=f"–ó–∞—è–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.mention} –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞ –±–µ–∑ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∞–≤—Ç–æ–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π.",
                color=0xFF0000,
                timestamp=datetime.now(timezone.utc),
            )

            rejection_embed.add_field(
                name="üìù –ü—Ä–∏—á–∏–Ω–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è",
                value="–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä —Ä–µ—à–∏–ª –Ω–µ –ø—Ä–∏–º–µ–Ω—è—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∏–∫–Ω–µ–π–º–∞. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω –∏—Å–ø—Ä–∞–≤–∏—Ç—å –Ω–∏–∫–Ω–µ–π–º —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ.",
                inline=False,
            )

            rejection_embed.add_field(
                name="üîß –í–æ–∑–º–æ–∂–Ω—ã–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è",
                value="‚Ä¢ "
                + "\n‚Ä¢ ".join(self.fixes_applied)
                + f"\n\n**–†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã–π –Ω–∏–∫–Ω–µ–π–º:** `{self.fixed_nickname}`",
                inline=False,
            )

            rejection_embed.set_footer(
                text=f"–û—Ç–∫–ª–æ–Ω–µ–Ω–æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º {interaction.user.display_name}"
            )

            await interaction.response.edit_message(embed=rejection_embed, view=None)

        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –∑–∞—è–≤–∫–∏: {e}")
            await interaction.response.send_message(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞—è–≤–∫–∏.", ephemeral=True
            )

    async def interaction_check(self, interaction: discord.Interaction) -> bool:
        """–ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–æ–ª—å–∫–æ –∞–≤—Ç–æ—Ä –º–æ–∂–µ—Ç –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å –∫–Ω–æ–ø–∫–∞–º–∏"""
        if interaction.user.id != self.user_id:
            try:
                await interaction.response.send_message(
                    "‚ùå –¢–æ–ª—å–∫–æ –∞–≤—Ç–æ—Ä –∑–∞—è–≤–∫–∏ –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–∏ –∫–Ω–æ–ø–∫–∏.",
                    ephemeral=True,
                )
            except discord.errors.NotFound:
                logger.warning(
                    f"‚ö†Ô∏è Interaction –∏—Å—Ç–µ–∫ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø—Ä–∞–≤ –¥–ª—è {interaction.user.display_name}"
                )
            return False
        return True


class TicketActionView(discord.ui.View):
    def __init__(self, user_id: int = None, steam_url: str = None):
        super().__init__(timeout=None)
        self.user_id = user_id or 0
        self.steam_url = steam_url or "unknown"

    async def find_user_application_data(self, guild, user):
        """–ò—â–µ—Ç –¥–∞–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ç–∏–∫–µ—Ç-–∫–∞–Ω–∞–ª–∞—Ö (–∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ –∫–æ–º–∞–Ω–¥–µ /role)"""
        application_data = {
            "steam_url": "–ù–µ —É–∫–∞–∑–∞–Ω–æ",
            "rust_hours": "–ù–µ —É–∫–∞–∑–∞–Ω–æ",
            "how_found": "–ù–µ —É–∫–∞–∑–∞–Ω–æ",
        }

        try:
            # –ò—â–µ–º —Ç–∏–∫–µ—Ç-–∫–∞–Ω–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–∫–∞–Ω–∞–ª—ã –Ω–∞—á–∏–Ω–∞—é—â–∏–µ—Å—è —Å "new_")
            for channel in guild.channels:
                if (
                    hasattr(channel, "name")
                    and channel.name.startswith("new_")
                    and isinstance(channel, (discord.TextChannel, discord.Thread))
                ):

                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏ –∫–∞–Ω–∞–ª–∞ –∏–ª–∏ –≤ –∏—Å—Ç–æ—Ä–∏–∏
                    channel_name_lower = channel.name.lower()
                    user_name_parts = [
                        user.name.lower(),
                        user.display_name.lower().replace(" ", "-"),
                        user.display_name.lower().replace(" ", "_"),
                    ]

                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if any(
                        part in channel_name_lower for part in user_name_parts if part
                    ):
                        logger.info(f"üîç –ù–∞–π–¥–µ–Ω –≤–æ–∑–º–æ–∂–Ω—ã–π —Ç–∏–∫–µ—Ç-–∫–∞–Ω–∞–ª: {channel.name}")

                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –ª–∏ –∫–∞–Ω–∞–ª —ç—Ç–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                        owner_id = get_ticket_owner(channel.id)
                        if owner_id == user.id:
                            # –ò—â–µ–º embed –∑–∞—è–≤–∫–∏ –≤ —ç—Ç–æ–º –∫–∞–Ω–∞–ª–µ
                            try:
                                async for message in channel.history(limit=30):
                                    if message.embeds and message.author.bot:
                                        for embed in message.embeds:
                                            if (
                                                embed.description
                                                and str(user.id) in embed.description
                                            ):
                                                from handlers.novichok import (
                                                    extract_steam_links,
                                                )

                                                if embed.fields:
                                                    for field in embed.fields:
                                                        if (
                                                            field.value
                                                            and "steamcommunity.com"
                                                            in field.value
                                                        ):
                                                            steam_links = (
                                                                extract_steam_links(
                                                                    field.value
                                                                )
                                                            )
                                                            if steam_links:
                                                                application_data[
                                                                    "steam_url"
                                                                ] = steam_links[0]
                                                                return application_data
                            except Exception as e:
                                logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –≤ –∫–∞–Ω–∞–ª–µ {channel.name}: {e}")
                                continue

        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∑–∞—è–≤–∫–∏ –¥–ª—è {user.display_name}: {e}")

        return application_data

    async def interaction_check(self, interaction: discord.Interaction) -> bool:
        """–ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞"""
        user_roles = [role.name for role in interaction.user.roles]
        admin_roles = ["–ñ–∏—Ç–µ–ª—å", "–ì—Ä–∞–∂–¥–∞–Ω–∏–Ω"]
        is_owner = interaction.user.id == interaction.guild.owner_id

        if not any(role in user_roles for role in admin_roles) and not is_owner:
            await interaction.response.send_message(
                "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞—è–≤–∫–∞–º–∏.", ephemeral=True
            )
            return False
        return True

    @discord.ui.button(
        label="‚úÖ –ü—Ä–∏–Ω—è—Ç—å",
        style=discord.ButtonStyle.success,
        custom_id="accept_application",
    )
    async def accept_application(
        self, interaction: discord.Interaction, button: discord.ui.Button
    ):
        """–ü—Ä–∏–Ω—è—Ç–∏–µ –∑–∞—è–≤–∫–∏"""
        await interaction.response.defer()

        try:
            guild = interaction.guild
            user = guild.get_member(self.user_id)

            if not user:
                await interaction.followup.send(
                    "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.", ephemeral=True
                )
                return

            # –£–¥–∞–ª—è–µ–º —Ä–æ–ª—å –ü—Ä–æ—Ö–æ–∂–∏–π –∏ –¥–æ–±–∞–≤–ª—è–µ–º —Ä–æ–ª—å –ù–æ–≤–∏—á–æ–∫ (–∫–∞–∫ –≤ –∫–æ–º–∞–Ω–¥–µ /role)
            guest_role = guild.get_role(GUEST_ROLE_ID)
            newbie_role = guild.get_role(NEWBIE_ROLE_ID)

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ä–æ–ª–∏ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
            if not newbie_role:
                await interaction.followup.send(
                    "‚ùå –†–æ–ª—å '–ù–æ–≤–∏—á–æ–∫' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.", ephemeral=True
                )
                logger.error(f"‚ùå –†–æ–ª—å –ù–æ–≤–∏—á–æ–∫ (ID: {NEWBIE_ROLE_ID}) –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
                return

            # –°–Ω–∞—á–∞–ª–∞ —É–¥–∞–ª—è–µ–º —Ä–æ–ª—å –ü—Ä–æ—Ö–æ–∂–∏–π –µ—Å–ª–∏ –µ—Å—Ç—å
            if guest_role and guest_role in user.roles:
                try:
                    await user.remove_roles(
                        guest_role,
                        reason=f"–ó–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞, —É–¥–∞–ª–µ–Ω–∏–µ —Ä–æ–ª–∏ –ü—Ä–æ—Ö–æ–∂–∏–π –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º {interaction.user.display_name}",
                    )
                    logger.info(f"‚úÖ –£–¥–∞–ª–µ–Ω–∞ —Ä–æ–ª—å –ü—Ä–æ—Ö–æ–∂–∏–π —É {user.display_name}")
                except Exception as e:
                    logger.error(
                        f"‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ä–æ–ª–∏ –ü—Ä–æ—Ö–æ–∂–∏–π —É {user.display_name}: {e}"
                    )

            # –£–¥–∞–ª—è–µ–º —Ä–æ–ª—å –ù–æ–≤–∏—á–æ–∫ –µ—Å–ª–∏ –µ—Å—Ç—å (–Ω–∞ —Å–ª—É—á–∞–π –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –Ω–∞–∂–∞—Ç–∏—è)
            if newbie_role in user.roles:
                try:
                    await user.remove_roles(
                        newbie_role,
                        reason=f"–û—á–∏—Å—Ç–∫–∞ –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –≤—ã–¥–∞—á–µ–π —Ä–æ–ª–∏ –ù–æ–≤–∏—á–æ–∫",
                    )
                    logger.info(
                        f"üîÑ –£–¥–∞–ª–µ–Ω–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∞—è —Ä–æ–ª—å –ù–æ–≤–∏—á–æ–∫ —É {user.display_name}"
                    )
                except Exception as e:
                    logger.error(
                        f"‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π —Ä–æ–ª–∏ –ù–æ–≤–∏—á–æ–∫ —É {user.display_name}: {e}"
                    )

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∏–∫–Ω–µ–π–º –ø–µ—Ä–µ–¥ –≤—ã–¥–∞—á–µ–π —Ä–æ–ª–∏
            current_nick = user.nick or user.display_name
            logger.info(f"üîç –ü—Ä–æ–≤–µ—Ä—è—é –Ω–∏–∫–Ω–µ–π–º –ø–µ—Ä–µ–¥ –≤—ã–¥–∞—á–µ–π —Ä–æ–ª–∏: {current_nick}")

            try:
                nick_decision: NickCheckResult = await NicknameModerator.check_nickname(user, current_nick)
                logger.info(f"üìã –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∏–∫–Ω–µ–π–º–∞: {nick_decision}")

                if not nick_decision.approve:
                    logger.warning(f"üö´ –ù–∏–∫–Ω–µ–π–º –æ—Ç–∫–ª–æ–Ω–µ–Ω: {', '.join(nick_decision.reasons)}")
                    await log_to_channel(
                        "Moderation",
                        f"–ù–∏–∫–Ω–µ–π–º –æ—Ç–∫–ª–æ–Ω–µ–Ω –ø—Ä–∏ –≤—ã–¥–∞—á–µ —Ä–æ–ª–∏: {current_nick} - {', '.join(nick_decision.reasons)}",
                        user=user,
                        channel=interaction.channel
                    )

                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º ephemeral –æ—Ç–≤–µ—Ç —Å –ø—Ä–∏—á–∏–Ω–∞–º–∏
                    reject_message = f"‚ùå **–ù–∏–∫–Ω–µ–π–º –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ø—Ä–∞–≤–∏–ª–∞–º**\n\n"
                    reject_message += f"**–ü—Ä–∏—á–∏–Ω—ã –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è:**\n"
                    for reason in nick_decision.reasons:
                        reject_message += f"‚Ä¢ {reason}\n"

                    if nick_decision.fixed_full:
                        reject_message += f"\n**–ü—Ä–∏–º–µ—Ä –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:** `{nick_decision.fixed_full}`\n"

                    reject_message += f"\n{nick_decision.notes_to_user}"

                    await interaction.followup.send(reject_message, ephemeral=True)
                    return
                else:
                    logger.info(f"‚úÖ –ù–∏–∫–Ω–µ–π–º –æ–¥–æ–±—Ä–µ–Ω: {current_nick}")

            except Exception as e:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∏–∫–Ω–µ–π–º–∞: {e}")
                await interaction.followup.send(
                    "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –Ω–∏–∫–Ω–µ–π–º–∞. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏.", ephemeral=True
                )
                return

            # –î–æ–±–∞–≤–ª—è–µ–º —Ä–æ–ª—å –ù–æ–≤–∏—á–æ–∫
            try:
                await user.add_roles(
                    newbie_role,
                    reason=f"–ó–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º {interaction.user.display_name}",
                )
                logger.info(f"‚úÖ –í—ã–¥–∞–Ω–∞ —Ä–æ–ª—å –ù–æ–≤–∏—á–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.display_name}")
            except Exception as e:
                logger.error(
                    f"‚ùå –û—à–∏–±–∫–∞ –≤—ã–¥–∞—á–∏ —Ä–æ–ª–∏ –ù–æ–≤–∏—á–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.display_name}: {e}"
                )
                await interaction.followup.send(
                    "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–¥–∞—á–µ —Ä–æ–ª–∏ –ù–æ–≤–∏—á–æ–∫.", ephemeral=True
                )
                return

            # –°–æ–∑–¥–∞–µ–º embed —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º
            success_embed = discord.Embed(
                title="‚úÖ –ó–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞!",
                description=f"–ó–∞—è–≤–∫–∞ –∏–≥—Ä–æ–∫–∞ {user.mention} —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–Ω—è—Ç–∞ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º {interaction.user.mention}",
                color=0x00FF00,
                timestamp=datetime.now(timezone.utc),
            )

            success_embed.add_field(
                name="üë§ –ù–æ–≤—ã–π —É—á–∞—Å—Ç–Ω–∏–∫",
                value=f"{user.display_name} ({user.mention})",
                inline=True,
            )

            success_embed.add_field(
                name="üëÆ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä",
                value=f"{interaction.user.display_name}",
                inline=True,
            )

            # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–æ–ª—è—Ö –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π
            role_info = []
            current_roles = [
                role.name for role in user.roles if role.name != "@everyone"
            ]

            if guest_role and guest_role.name not in current_roles:
                role_info.append(f"‚ùå –£–¥–∞–ª–µ–Ω–∞: {guest_role.mention}")
            if newbie_role and newbie_role.name in current_roles:
                role_info.append(f"‚úÖ –í—ã–¥–∞–Ω–∞: {newbie_role.mention}")

            success_embed.add_field(
                name="üéØ –ò–∑–º–µ–Ω–µ–Ω–∏—è —Ä–æ–ª–µ–π",
                value=(
                    "\n".join(role_info)
                    if role_info
                    else f"‚úÖ –í—ã–¥–∞–Ω–∞: {newbie_role.mention}"
                ),
                inline=True,
            )

            success_embed.add_field(
                name="üë• –¢–µ–∫—É—â–∏–µ —Ä–æ–ª–∏",
                value=(
                    ", ".join([f"`{role}`" for role in current_roles])
                    if current_roles
                    else "–¢–æ–ª—å–∫–æ –±–∞–∑–æ–≤—ã–µ —Ä–æ–ª–∏"
                ),
                inline=False,
            )

            success_embed.set_footer(
                text="–ó–∞—è–≤–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞"
            )

            # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            await interaction.edit_original_response(embed=success_embed, view=None)

            # –§–∏–∫—Å–∏—Ä—É–µ–º –Ω–∏–∫–Ω–µ–π–º –ø–æ—Å–ª–µ –≤—ã–¥–∞—á–∏ —Ä–æ–ª–∏ –ù–æ–≤–∏—á–æ–∫ (–∫–∞–∫ –≤ –∫–æ–º–∞–Ω–¥–µ /role)
            try:
                current_nick = user.display_name
                await user.edit(
                    nick=current_nick,
                    reason=f"–§–∏–∫—Å–∞—Ü–∏—è –Ω–∏–∫–Ω–µ–π–º–∞ –ø–æ—Å–ª–µ –ø—Ä–∏–Ω—è—Ç–∏—è –∑–∞—è–≤–∫–∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º {interaction.user.display_name}",
                )
                logger.info(
                    f"‚úÖ –ù–∏–∫–Ω–µ–π–º '{current_nick}' –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω –¥–ª—è {user.display_name} –ø—Ä–∏ –ø—Ä–∏–Ω—è—Ç–∏–∏ –∑–∞—è–≤–∫–∏ —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É"
                )
            except discord.Forbidden:
                logger.warning(
                    f"‚ö†Ô∏è –ù–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —Ñ–∏–∫—Å–∞—Ü–∏–∏ –Ω–∏–∫–Ω–µ–π–º–∞ —É {user.display_name}"
                )
            except Exception as e:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Ñ–∏–∫—Å–∞—Ü–∏–∏ –Ω–∏–∫–Ω–µ–π–º–∞ —É {user.display_name}: {e}")

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–æ–≤–∏—á–∫—É
            welcome_message = f"""üéâ {user.mention} **–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –î–µ—Ä–µ–≤–Ω—é VLG!**

‚úÖ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ **–ø—Ä–∏–Ω—è—Ç–∞**! –¢–µ–ø–µ—Ä—å –≤—ã –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ –∂–∏—Ç–µ–ª—å –Ω–∞—à–µ–π –î–µ—Ä–µ–≤–Ω–∏.

üìã **–ß—Ç–æ –¥–∞–ª—å—à–µ:**
üî∏ –ò–∑—É—á–∏—Ç–µ https://discord.com/channels/472365787445985280/1179490341980741763
üî∏ –í–∏–∫–∏–ø–µ–¥–∏—è –ø–æ –î–µ—Ä–µ–≤–Ω–µ: https://discord.com/channels/472365787445985280/1322342577239756881/1322344519454294046
üî∏ –ö–æ–≥–¥–∞ –≤—ã –Ω–∞ –≤–∞–π–ø–µ –î–µ—Ä–µ–≤–Ω–∏ –∏ —Å–∏–¥–∏—Ç–µ –≤ –î–∏—Å–∫–æ—Ä–¥–µ (–≤ –≤–æ–π—Å–∞—Ö), –±–æ—Ç –≤–µ–¥—ë—Ç —É—á—ë—Ç –∏ –∞–∫—Ç–∏–≤–Ω—ã–º –∏–≥—Ä–æ–∫–∞–º –≤—ã–¥–∞—ë—Ç —Ä–æ–ª–∏: ‚ö´üî¥üü°üü¢
üî∏ –ö–∞–∫ –ø–æ–ª—É—á–∏—Ç–µ —Ä–æ–ª—å üü¢ - —Å–º–æ–∂–µ—Ç–µ –ø–æ–≤—ã—Å–∏—Ç—å—Å—è –¥–æ —Å—Ç–∞—Ç—É—Å–∞ –ì–æ—Å—Ç—å –∏ –≤—ã—à–µ."""

            # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø–æ—Å—Ç-–æ–¥–æ–±—Ä–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏–π
            post_approval_view = PostApprovalView(self.user_id, interaction.channel.id)
            await safe_send_message(
                interaction.channel, welcome_message, view=post_approval_view
            )

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º Steam-—Å—Å—ã–ª–∫—É –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
            try:
                from handlers.tickets import save_steam_url_to_db

                await save_steam_url_to_db(self.user_id, self.steam_url)
            except Exception as e:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è Steam-—Å—Å—ã–ª–∫–∏: {e}")

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –º–æ–¥-–∫–∞–Ω–∞–ª
            mod_channel = guild.get_channel(config.MOD_CHANNEL_ID)
            if mod_channel:
                mod_embed = discord.Embed(
                    title="‚úÖ –ó–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞",
                    description=f"**–ò–≥—Ä–æ–∫:** {user.mention}\n**–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä:** {interaction.user.mention}\n**–¢–∏–∫–µ—Ç:** {interaction.channel.mention}",
                    color=0x00FF00,
                    timestamp=datetime.now(timezone.utc),
                )
                await mod_channel.send(embed=mod_embed)

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç—á–µ—Ç –≤ –∫–∞–Ω–∞–ª "–õ–∏—á–Ω—ã–µ –¥–µ–ª–∞"
            personal_files_channel = guild.get_channel(
                1226224193603895386
            )  # ID –∫–∞–Ω–∞–ª–∞ "–õ–∏—á–Ω—ã–µ –¥–µ–ª–∞"
            logger.info(
                f"üîç –ö–∞–Ω–∞–ª –ª–∏—á–Ω—ã—Ö –¥–µ–ª –Ω–∞–π–¥–µ–Ω: {personal_files_channel.name if personal_files_channel else '–ù–ï –ù–ê–ô–î–ï–ù'}"
            )

            if personal_files_channel:
                try:
                    await self.send_personal_file_report(
                        personal_files_channel, user, interaction.user, "–ö–Ω–æ–ø–∫–∞ \"–û–¥–æ–±—Ä–∏—Ç—å\"", interaction.channel
                    )
                except Exception as e:
                    logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ –õ–∏—á–Ω—ã–µ –¥–µ–ª–∞: {e}")
                    import traceback
                    logger.error(f"Traceback: {traceback.format_exc()}")
                    await log_error(
                        e,
                        f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ –õ–∏—á–Ω—ã–µ –¥–µ–ª–∞ –¥–ª—è {user.display_name}",
                    )
            else:
                logger.error(
                    f"‚ùå –ö–∞–Ω–∞–ª –õ–∏—á–Ω—ã–µ –¥–µ–ª–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω (ID: 1226224193603895386)"
                )

            # –ü–ª–∞–Ω–∏—Ä—É–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞ —á–µ—Ä–µ–∑ 1 —á–∞—Å –ø–æ—Å–ª–µ –æ–¥–æ–±—Ä–µ–Ω–∏—è
            asyncio.create_task(
                self._schedule_channel_deletion(
                    interaction.channel, user, interaction.user
                )
            )

            logger.info(
                f"‚úÖ –ó–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞: {user.display_name} –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º {interaction.user.display_name}"
            )

        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏–Ω—è—Ç–∏—è –∑–∞—è–≤–∫–∏: {e}")
            await interaction.followup.send(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–Ω—è—Ç–∏–∏ –∑–∞—è–≤–∫–∏.", ephemeral=True
            )

    async def _schedule_channel_deletion(self, channel, user, moderator):
        """–ü–ª–∞–Ω–∏—Ä—É–µ—Ç —É–¥–∞–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞ –∑–∞—è–≤–∫–∏ —á–µ—Ä–µ–∑ 1 —á–∞—Å –ø–æ—Å–ª–µ –ø—Ä–∏–Ω—è—Ç–∏—è"""
        try:
            # –ñ–¥–µ–º 1 —á–∞—Å (3600 —Å–µ–∫—É–Ω–¥)
            await asyncio.sleep(3600)

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–∞–Ω–∞–ª –≤—Å–µ –µ—â–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            if channel and hasattr(channel, "guild") and channel.guild:
                try:
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∫–∞–Ω–∞–ª –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
                    test_channel = channel.guild.get_channel(channel.id)
                    if test_channel:
                        # –£–¥–∞–ª—è–µ–º –∫–∞–Ω–∞–ª –≤—Ç–∏—Ö—É—é –±–µ–∑ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è
                        await channel.delete(
                            reason=f"–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 6 —á–∞—Å–æ–≤ –ø–æ—Å–ª–µ –ø—Ä–∏–Ω—è—Ç–∏—è –∑–∞—è–≤–∫–∏ {user.display_name} –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º {moderator.display_name}"
                        )

                        # –£–¥–∞–ª—è–µ–º –∏–∑ –∫—ç—à–∞ –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤ —Ç–∏–∫–µ—Ç–æ–≤
                        del_ticket_owner(channel.id)

                        logger.info(
                            f"üóëÔ∏è –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª–µ–Ω –∫–∞–Ω–∞–ª –∑–∞—è–≤–∫–∏ {channel.name} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.display_name} —á–µ—Ä–µ–∑ 1 —á–∞—Å –ø–æ—Å–ª–µ –ø—Ä–∏–Ω—è—Ç–∏—è"
                        )

                        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –º–æ–¥-–∫–∞–Ω–∞–ª –ü–ï–†–ï–î —É–¥–∞–ª–µ–Ω–∏–µ–º –∫–∞–Ω–∞–ª–∞
                        mod_channel = channel.guild.get_channel(config.MOD_CHANNEL_ID)
                        if mod_channel:
                            auto_delete_embed = discord.Embed(
                                title="üóëÔ∏è –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏",
                                description=f"**–ò–≥—Ä–æ–∫:** {user.display_name}\n**–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä:** {moderator.display_name}\n**–ö–∞–Ω–∞–ª:** {channel.name}",
                                color=0x808080,
                                timestamp=datetime.now(timezone.utc),
                            )
                            auto_delete_embed.add_field(
                                name="‚è∞ –í—Ä–µ–º—è",
                                value="–£–¥–∞–ª–µ–Ω —á–µ—Ä–µ–∑ 1 —á–∞—Å –ø–æ—Å–ª–µ –ø—Ä–∏–Ω—è—Ç–∏—è",
                                inline=False,
                            )
                            await mod_channel.send(embed=auto_delete_embed)
                    else:
                        logger.info(f"‚ÑπÔ∏è –ö–∞–Ω–∞–ª {channel.name} —É–∂–µ –±—ã–ª —É–¥–∞–ª–µ–Ω –≤—Ä—É—á–Ω—É—é")
                except discord.NotFound:
                    logger.info(f"‚ÑπÔ∏è –ö–∞–Ω–∞–ª {channel.name} —É–∂–µ –±—ã–ª —É–¥–∞–ª–µ–Ω")
                except Exception as e:
                    logger.error(f"‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∫–∞–Ω–∞–ª–∞ {channel.name}: {e}")
            else:
                logger.info(f"‚ÑπÔ∏è –ö–∞–Ω–∞–ª –∑–∞—è–≤–∫–∏ —É–∂–µ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è")

        except asyncio.CancelledError:
            logger.info(
                f"‚ö†Ô∏è –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞ {channel.name if channel else 'Unknown'} –æ—Ç–º–µ–Ω–µ–Ω–æ"
            )
        except Exception as e:
            logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è –∫–∞–Ω–∞–ª–∞: {e}")

    @discord.ui.button(
        label="‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å",
        style=discord.ButtonStyle.danger,
        custom_id="reject_application",
    )
    async def reject_application(
        self, interaction: discord.Interaction, button: discord.ui.Button
    ):
        """–û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏"""
        await interaction.response.send_modal(
            RejectReasonModal(self.user_id, self.steam_url)
        )

    async def get_user_steam_url(self, user_id: int) -> str:
        """–ü–æ–ª—É—á–∞–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π Steam URL –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        try:
            # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∫—ç—à–∞
            if hasattr(self, "user_steam_urls") and user_id in self.user_steam_urls:
                return self.user_steam_urls[user_id]

            # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –∏–∑ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –∫—ç—à–∞ —Ç–∏–∫–µ—Ç–æ–≤
            from handlers.tickets import steam_cache

            return steam_cache.get(f"{user_id}_steam_url", None)
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è Steam URL –¥–ª—è {user_id}: {e}")
            await log_error(e, f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è Steam URL –¥–ª—è {user_id}")
            return None

    async def send_personal_file_report(self, channel, user, moderator, method, ticket_channel):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –¥–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç—á—ë—Ç –≤ –∫–∞–Ω–∞–ª –ª–∏—á–Ω—ã—Ö –¥–µ–ª"""
        try:
            # –ü–æ–ª—É—á–∞–µ–º Steam URL –∏–∑ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
            saved_steam_url = await self.get_user_steam_url(user.id)
            if not saved_steam_url:
                application_data = await self.find_user_application_data(user.guild, user)
                saved_steam_url = application_data.get("steam_url", "–ù–µ —É–∫–∞–∑–∞–Ω–æ")

            # –ü–æ–ª—É—á–∞–µ–º SteamID64 –∏ —á–∞—Å—ã –≤ Rust
            steamid64 = "–ù–µ —É–∫–∞–∑–∞–Ω–æ"
            rust_hours = "–ù–µ —É–∫–∞–∑–∞–Ω–æ"
            final_nickname = user.display_name

            if saved_steam_url and saved_steam_url != "–ù–µ —É–∫–∞–∑–∞–Ω–æ" and "steamcommunity.com" in saved_steam_url:
                try:
                    from handlers.steam_api import get_steamid64_from_url, steam_client

                    # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º Steam URL –≤ SteamID64
                    steamid64 = await get_steamid64_from_url(saved_steam_url)
                    
                    if not steamid64:
                        from handlers.novichok import extract_steam_id_from_url
                        steamid64 = extract_steam_id_from_url(saved_steam_url)
                    if not steamid64:
                        steamid64 = "–û—à–∏–±–∫–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏"

                    logger.info(f"üîó –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è Steam URL ‚Üí SteamID64: {saved_steam_url} ‚Üí {steamid64}")

                    # –ü–æ–ª—É—á–∞–µ–º —á–∞—Å—ã –≤ Rust –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ —Ç–∏–∫–µ—Ç–∞
                    if ticket_channel:
                        try:
                            ctx = get_ctx(ticket_channel.id)
                            if ctx and ctx.rust_hours is not None:
                                rust_hours = str(ctx.rust_hours)
                                logger.info(f"üéÆ –ü–æ–ª—É—á–µ–Ω—ã —á–∞—Å—ã Rust –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞: {rust_hours}")
                            else:
                                # –ò—â–µ–º —á–∞—Å—ã –≤ –∏—Å—Ç–æ—Ä–∏–∏ –∫–∞–Ω–∞–ª–∞
                                rust_hours = await self.extract_rust_hours_from_channel(ticket_channel)
                        except Exception:
                            rust_hours = await self.extract_rust_hours_from_channel(ticket_channel)

                except Exception as e:
                    logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ Steam –¥–∞–Ω–Ω—ã—Ö: {e}")
                    steamid64 = "–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏"

            # –°–æ–∑–¥–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—ã–π embed –æ—Ç—á—ë—Ç
            current_time = datetime.now()
            report_embed = discord.Embed(
                title="üìù –õ–∏—á–Ω–æ–µ –¥–µ–ª–æ –∏–≥—Ä–æ–∫–∞",
                description="–£—á–∞—Å—Ç–Ω–∏–∫ –ø—Ä–∏–Ω—è—Ç –≤ –î–µ—Ä–µ–≤–Ω—é VLG",
                color=0x00FF00,
                timestamp=current_time
            )

            # –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∏–≥—Ä–æ–∫–µ  
            player_info = (
                f"üë§ –ò–≥—Ä–æ–∫: {user.mention}\n"
                f"üëÆ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä: {moderator.mention}\n"
                f"üìã –ú–µ—Ç–æ–¥ –ø—Ä–∏–Ω—è—Ç–∏—è: {method}\n"
                f"Discord: **{user.display_name}**\n"
                f"Discord ID: `{user.id}`\n"
                f"–ê–∫–∫–∞—É–Ω—Ç —Å–æ–∑–¥–∞–Ω: {user.created_at.strftime('%d.%m.%Y %H:%M')}"
            )
            report_embed.add_field(
                name="üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —É—á–∞—Å—Ç–Ω–∏–∫–µ",
                value=player_info,
                inline=False
            )

            report_embed.add_field(
                name="üëÆ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä",
                value=f"{moderator.mention}",
                inline=True
            )

            report_embed.add_field(
                name="üìã –ú–µ—Ç–æ–¥ –ø—Ä–∏–Ω—è—Ç–∏—è",
                value=method,
                inline=True
            )

            # Steam –¥–∞–Ω–Ω—ã–µ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º
            steam_info_parts = []
            if saved_steam_url and saved_steam_url != "–ù–µ —É–∫–∞–∑–∞–Ω–æ":
                steam_info_parts.append(f"Steam URL: {saved_steam_url}")
            else:
                steam_info_parts.append("Steam URL: –ù–µ —É–∫–∞–∑–∞–Ω–æ")
            
            steam_info_parts.append(f"SteamID64: `{steamid64}`")
            
            # –ü–æ–ª—É—á–∞–µ–º Steam –Ω–∏–∫–Ω–µ–π–º –∏–∑ –ø—Ä–æ—Ñ–∏–ª—è
            steam_nickname = "–ù–µ —É–∫–∞–∑–∞–Ω–æ"
            if steamid64 and steamid64 != "–ù–µ —É–∫–∞–∑–∞–Ω–æ":
                try:
                    from handlers.steam_api import steam_client
                    steam_profile = await steam_client.get_player_summary(steamid64)
                    if steam_profile and steam_profile.get("success"):
                        steam_nickname = steam_profile.get("personaname", "–ù–µ —É–∫–∞–∑–∞–Ω–æ")
                except Exception:
                    pass
            
            steam_info_parts.append(f"SteamNick: **{steam_nickname}**")
            steam_info_parts.append(f"–ß–∞—Å—ã –≤ Rust: {rust_hours}")
            
            report_embed.add_field(
                name="üîó Steam –¥–∞–Ω–Ω—ã–µ",
                value="\n".join(steam_info_parts),
                inline=False
            )

            # –î–µ—Ç–∞–ª–∏ –ø—Ä–∏–Ω—è—Ç–∏—è
            acceptance_details = (
                f"–î–∞—Ç–∞: {current_time.strftime('%d.%m.%Y %H:%M')}\n"
                f"–†–æ–ª—å –≤—ã–¥–∞–Ω–∞: <@&{config.NEWBIE_ROLE_ID}>\n"
                f"–ù–∏–∫–Ω–µ–π–º –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω: `{final_nickname}`"
            )
            report_embed.add_field(
                name="üìã –î–µ—Ç–∞–ª–∏ –ø—Ä–∏–Ω—è—Ç–∏—è",
                value=acceptance_details,
                inline=False
            )

            report_embed.set_footer(
                text=f"–ü—Ä–∏–Ω—è—Ç —á–µ—Ä–µ–∑ {method} –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º {moderator.display_name} ‚Ä¢ {current_time.strftime('%d.%m.%Y %H:%M')}"
            )

            report_embed.set_thumbnail(url=user.display_avatar.url)

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º embed
            message_sent = await safe_send_message(channel, embed=report_embed)
            if message_sent:
                logger.info(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω embed –æ—Ç—á—ë—Ç –≤ –õ–∏—á–Ω—ã–µ –¥–µ–ª–∞: {user.display_name}")
            else:
                logger.error(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å embed –æ—Ç—á—ë—Ç –≤ –õ–∏—á–Ω—ã–µ –¥–µ–ª–∞: {user.display_name}")

        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç—á—ë—Ç–∞ –≤ –ª–∏—á–Ω—ã–µ –¥–µ–ª–∞: {e}")
            import traceback
            logger.error(f"Traceback: {traceback.format_exc()}")

    async def extract_rust_hours_from_channel(self, channel):
        """–ò–∑–≤–ª–µ–∫–∞–µ—Ç —á–∞—Å—ã –≤ Rust –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏ –∫–∞–Ω–∞–ª–∞"""
        try:
            async for message in channel.history(limit=30):
                if message.embeds:
                    for embed in message.embeds:
                        if embed.fields:
                            for field in embed.fields:
                                if field.name and ("—á–∞—Å" in field.name.lower() or "rust" in field.name.lower()):
                                    if field.value and field.value.strip() not in ["–ù–µ —É–∫–∞–∑–∞–Ω–æ", "0", ""]:
                                        hours_text = field.value.strip()
                                        # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–∞
                                        import re
                                        numbers = re.findall(r'\d+', hours_text)
                                        if numbers:
                                            return numbers[0] + " —á–∞—Å–æ–≤"
                                        return hours_text
            return "–ù–µ —É–∫–∞–∑–∞–Ω–æ –≤ –∑–∞—è–≤–∫–µ"
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è —á–∞—Å–æ–≤ Rust: {e}")
            return "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è"

    async def get_steam_data_for_report(self, user_id: int, steam_url: str) -> dict:
        """–ü–æ–ª—É—á–∞–µ—Ç Steam –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—á–µ—Ç–∞ –≤ –ª–∏—á–Ω—ã–µ –¥–µ–ª–∞"""
        try:
            if not steam_url or steam_url == "–ù–µ —É–∫–∞–∑–∞–Ω–æ":
                return {}

            from handlers.steam_api import steam_client
            from handlers.novichok import extract_steam_id_from_url

            # –ò–∑–≤–ª–µ–∫–∞–µ–º Steam ID –∏–∑ URL
            steam_id = extract_steam_id_from_url(steam_url)
            if not steam_id:
                return {}

            # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ Steam API
            steam_data = await steam_client.get_player_summary(steam_id)
            if steam_data and steam_data.get('success'):
                return {
                    'steamid': steam_data.get('steamid', ''),
                    'personaname': steam_data.get('personaname', ''),
                }
            return {}

        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è Steam –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç—á–µ—Ç–∞: {e}")
            return {}


class RejectReasonModal(discord.ui.Modal):
    def __init__(self, user_id: int, steam_url: str):
        super().__init__(title="–ü—Ä–∏—á–∏–Ω–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –∑–∞—è–≤–∫–∏")
        self.user_id = user_id
        self.steam_url = steam_url

        self.reason_input = discord.ui.TextInput(
            label="–ü—Ä–∏—á–∏–Ω–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è",
            placeholder="–£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –∑–∞—è–≤–∫–∏...",
            required=True,
            max_length=500,
            style=discord.TextStyle.paragraph,
        )
        self.add_item(self.reason_input)

    async def on_submit(self, interaction: discord.Interaction):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –∑–∞—è–≤–∫–∏"""
        await interaction.response.defer()

        try:
            guild = interaction.guild
            user = guild.get_member(self.user_id)
            reason = self.reason_input.value.strip()

            if not user:
                await interaction.followup.send(
                    "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.", ephemeral=True
                )
                return

            # –°–æ–∑–¥–∞–µ–º embed —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º
            reject_embed = discord.Embed(
                title="‚ùå –ó–∞—è–≤–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞",
                description=f"–ó–∞—è–≤–∫–∞ –∏–≥—Ä–æ–∫–∞ {user.mention} –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º {interaction.user.mention}",
                color=0xFF0000,
                timestamp=datetime.now(timezone.utc),
            )

            reject_embed.add_field(
                name="üë§ –ó–∞—è–≤–∏—Ç–µ–ª—å",
                value=f"{user.display_name} ({user.mention})",
                inline=True,
            )

            reject_embed.add_field(
                name="üëÆ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä",
                value=f"{interaction.user.display_name}",
                inline=True,
            )

            reject_embed.add_field(name="üìù –ü—Ä–∏—á–∏–Ω–∞", value=reason, inline=False)

            reject_embed.set_footer(text="–ó–∞—è–≤–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞")

            # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            await interaction.edit_original_response(embed=reject_embed, view=None)

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∑–∞—è–≤–∏—Ç–µ–ª—é
            rejection_message = f"""‚ùå {user.mention} **–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞**

**–ü—Ä–∏—á–∏–Ω–∞:** {reason}

üìã **–ß—Ç–æ –¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ:**
üî∏ –ù–µ –Ω–∞–¥–æ —Å–æ–∑–¥–∞–≤–∞—Ç—å –Ω–æ–≤—É—é –∑–∞—è–≤–∫—É, –ø—Ä–æ–¥–æ–ª–∂–∏–º —Ä–µ—à–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—ã –≤ –¥–∞–Ω–Ω–æ–π –∑–∞—è–≤–∫–µ –∏ –ø–æ–ª—É—á–∏—Ç—å —Ä–æ–ª—å –ù–æ–≤–∏—á–æ–∫.
üî∏ –û—Ç–º–µ—á–∞–π—Ç–µ –±–æ—Ç–∞ –ü–æ–º–æ—â–Ω–∏–∫–∞ —Ç—É—Ç –≤ —á–∞—Ç–µ –∏ –ø–∏—à–∏—Ç–µ "–≥–æ—Ç–æ–≤–æ –∏–ª–∏ –ø—Ä–æ–≤–µ—Ä—å"
üî∏ –ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∂–∏—Ç–µ–ª—è–º –∑–∞ –ø–æ–º–æ—â—å—é –≤ https://discord.com/channels/472365787445985280/1178436876244361388"""

            await safe_send_message(interaction.channel, rejection_message)

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –º–æ–¥-–∫–∞–Ω–∞–ª(–±–æ—Ç-–ª–æ–≥)
            mod_channel = guild.get_channel(config.MOD_CHANNEL_ID)
            if mod_channel:
                mod_embed = discord.Embed(
                    title="‚ùå –ó–∞—è–≤–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞",
                    description=f"**–ò–≥—Ä–æ–∫:** {user.mention}\n**–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä:** {interaction.user.mention}\n**–ü—Ä–∏—á–∏–Ω–∞:** {reason}\n**–¢–∏–∫–µ—Ç:** {interaction.channel.mention}",
                    color=0xFF0000,
                    timestamp=datetime.now(timezone.utc),
                )
                await mod_channel.send(embed=mod_embed)

            logger.info(
                f"‚ùå –ó–∞—è–≤–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞: {user.display_name} –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º {interaction.user.display_name}, –ø—Ä–∏—á–∏–Ω–∞: {reason}"
            )

        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –∑–∞—è–≤–∫–∏: {e}")
            await interaction.followup.send(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏ –∑–∞—è–≤–∫–∏.", ephemeral=True
            )

    @discord.ui.button(
        label="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å", style=discord.ButtonStyle.red, custom_id="delete_ticket"
    )
    async def delete_ticket(
        self, interaction: discord.Interaction, button: discord.ui.Button
    ):
        """–ö–Ω–æ–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ç–∏–∫–µ—Ç–∞ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º"""
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞: —Ç–æ–ª—å–∫–æ –∞–≤—Ç–æ—Ä –∑–∞—è–≤–∫–∏, –ì—Ä–∞–∂–¥–∞–Ω–∏–Ω –∏ –ñ–∏—Ç–µ–ª—å
        user_roles = [role.name for role in interaction.user.roles]
        allowed_roles = ["–ñ–∏—Ç–µ–ª—å", "–ì—Ä–∞–∂–¥–∞–Ω–∏–Ω"]
        is_ticket_owner = interaction.user.id == self.user_id
        has_permission = (
            any(role in user_roles for role in allowed_roles) or is_ticket_owner
        )

        if not has_permission:
            await interaction.response.send_message(
                "‚ùå –£–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç —Ç–∏–∫–µ—Ç –º–æ–≥—É—Ç —Ç–æ–ª—å–∫–æ –∞–≤—Ç–æ—Ä –∑–∞—è–≤–∫–∏, –∞ —Ç–∞–∫–∂–µ –ª—é–±–æ–π –ñ–∏—Ç–µ–ª—å –∏–ª–∏ –ì—Ä–∞–∂–¥–∞–Ω–∏–Ω –î–µ—Ä–µ–≤–Ω–∏. –£ –≤–∞—Å –Ω–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö –ø—Ä–∞–≤.",
                ephemeral=True,
            )
            return

        # –ü–µ—Ä–≤–æ–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
        confirm_embed = discord.Embed(
            title="‚ö†Ô∏è –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è —Ç–∏–∫–µ—Ç–∞",
            description="–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç —Ç–∏–∫–µ—Ç?\n\n**–í–Ω–∏–º–∞–Ω–∏–µ:** –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å!",
            color=0xFF0000,
        )

        confirm_view = TicketDeleteConfirmView(self.user_id, interaction.user.id)
        await interaction.response.send_message(
            embed=confirm_embed, view=confirm_view, ephemeral=True
        )

    @discord.ui.button(
        label="üîÑ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–∞—è–≤–∫—É –µ—â—ë —Ä–∞–∑",
        style=discord.ButtonStyle.gray,
        custom_id="recheck_application_1",
    )
    async def recheck_application(
        self, interaction: discord.Interaction, button: discord.ui.Button
    ):
        """–ö–Ω–æ–ø–∫–∞ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞—è–≤–∫–∏"""
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞: –õ–Æ–ë–û–ô –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –Ω–∞–∂–∞—Ç—å (—É–ø—Ä–æ—â–∞–µ–º –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞)
        user_roles = [role.name for role in interaction.user.roles]
        allowed_roles = ["–ñ–∏—Ç–µ–ª—å", "–ì—Ä–∞–∂–¥–∞–Ω–∏–Ω"]
        is_ticket_owner = interaction.user.id == self.user_id
        has_permission = (
            any(role in user_roles for role in allowed_roles) or is_ticket_owner
        )

        if not has_permission:
            await interaction.response.send_message(
                "‚ùå –ü–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä–∏—Ç—å —ç—Ç–æ—Ç —Ç–∏–∫–µ—Ç –º–æ–≥—É—Ç —Ç–æ–ª—å–∫–æ –∞–≤—Ç–æ—Ä –∑–∞—è–≤–∫–∏, –∞ —Ç–∞–∫–∂–µ –ª—é–±–æ–π –ñ–∏—Ç–µ–ª—å –∏–ª–∏ –ì—Ä–∞–∂–¥–∞–Ω–∏–Ω –î–µ—Ä–µ–≤–Ω–∏. –£ –≤–∞—Å –Ω–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö –ø—Ä–∞–≤.",
                ephemeral=True,
            )
            return

        try:
            # –û—Ç–≤–µ—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            await interaction.response.send_message(
                "üîÑ –ù–∞—á–∏–Ω–∞—é –ø–æ–≤—Ç–æ—Ä–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –∑–∞—è–≤–∫–∏...", ephemeral=True
            )

            # –õ–æ–≥–∏—Ä—É–µ–º –¥–µ–π—Å—Ç–≤–∏–µ
            logger.info(
                f"üîÑ –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞—è–≤–∫–∏ –∑–∞–ø—Ä–æ—à–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {interaction.user.display_name} –≤ —Ç–∏–∫–µ—Ç–µ {interaction.channel.name}"
            )

            # –ü–æ–ª—É—á–∞–µ–º –∞–≤—Ç–æ—Ä–∞ –∑–∞—è–≤–∫–∏
            ticket_owner = interaction.guild.get_member(self.user_id)
            if not ticket_owner:
                await interaction.edit_original_response(
                    content="‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∞–≤—Ç–æ—Ä–∞ –∑–∞—è–≤–∫–∏."
                )
                return

            # –û—á–∏—â–∞–µ–º –∫—ç—à Steam –¥–ª—è —Å–≤–µ–∂–µ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
            try:
                from handlers.steam_api import steam_client
                from handlers.novichok import extract_steam_id_from_url

                # –ï—Å–ª–∏ –µ—Å—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–∞—è Steam-—Å—Å—ã–ª–∫–∞
                if hasattr(self, "steam_url") and self.steam_url:
                    steam_id = extract_steam_id_from_url(self.steam_url)
                    if steam_id:
                        steam_client.force_cache_clear_for_profile(steam_id)
                        logger.info(f"üóëÔ∏è –û—á–∏—â–µ–Ω –∫—ç—à Steam –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏")
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –∫—ç—à–∞ Steam: {e}")

            # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∞–ª–∏–∑ –∑–∞—è–≤–∫–∏
            from handlers.tickets import TicketHandler

            # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
            bot = interaction.client
            ticket_handler = bot.get_cog("TicketHandler")

            if ticket_handler:
                # –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∞–ª–∏–∑ –∑–∞—è–≤–∫–∏
                await ticket_handler.analyze_and_respond_to_application(
                    interaction.channel, ticket_owner
                )

                await interaction.edit_original_response(
                    content="‚úÖ –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞—è–≤–∫–∏ –∑–∞–ø—É—â–µ–Ω–∞!"
                )

        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞—è–≤–∫–∏: {e}")
            try:
                await interaction.edit_original_response(
                    content="‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–µ –∑–∞—è–≤–∫–∏."
                )
            except:
                pass


class PostApprovalView(discord.ui.View):
    def __init__(self, user_id: int, channel_id: int):
        super().__init__(timeout=None)
        self.user_id = user_id
        self.channel_id = channel_id

    async def interaction_check(self, interaction: discord.Interaction) -> bool:
        """–ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞"""
        user_roles = [role.name for role in interaction.user.roles]
        admin_roles = ["–ñ–∏—Ç–µ–ª—å", "–ì—Ä–∞–∂–¥–∞–Ω–∏–Ω"]
        is_owner = interaction.user.id == interaction.guild.owner_id

        if not any(role in user_roles for role in admin_roles) and not is_owner:
            await interaction.response.send_message(
                "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–∏—Ö –∫–Ω–æ–ø–æ–∫.", ephemeral=True
            )
            return False
        return True

    @discord.ui.button(
        label="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –∑–∞—è–≤–∫—É",
        style=discord.ButtonStyle.danger,
        custom_id="delete_ticket_post",
    )
    async def delete_ticket_post(
        self, interaction: discord.Interaction, button: discord.ui.Button
    ):
        """–£–¥–∞–ª–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º"""
        confirm_embed = discord.Embed(
            title="‚ö†Ô∏è –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è –∑–∞—è–≤–∫–∏",
            description="–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç—É –∑–∞—è–≤–∫—É? –ö–∞–Ω–∞–ª –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω —á–µ—Ä–µ–∑ 15 —Å–µ–∫—É–Ω–¥ –ø–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.",
            color=0xFF0000,
        )

        confirm_view = ConfirmTicketDeleteView(self.user_id, self.channel_id)
        await interaction.response.send_message(
            embed=confirm_embed, view=confirm_view, ephemeral=True
        )

    @discord.ui.button(
        label="üìã –ù–∞–ø–æ–º–Ω–∏—Ç—å –ø—Ä–∞–≤–∏–ª–∞",
        style=discord.ButtonStyle.secondary,
        custom_id="remind_rules_post",
    )
    async def remind_rules_post(
        self, interaction: discord.Interaction, button: discord.ui.Button
    ):
        """–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –ø—Ä–∞–≤–∏–ª –Ω–æ–≤–∏—á–∫—É"""
        user = interaction.guild.get_member(self.user_id)
        if not user:
            await interaction.response.send_message(
                "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.", ephemeral=True
            )
            return

        await interaction.response.defer()

        rules_message = f"""üìã {user.mention} **–ù–∞–ø–æ–º–∏–Ω–∞–µ–º –≤–∞–∂–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞ –î–µ—Ä–µ–≤–Ω–∏:**

üé§ **–í –î–µ—Ä–µ–≤–Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤–∞–∂–Ω–æ —Å–∏–¥–µ—Ç—å –≤ –≤–æ–π—Å –∫–∞–Ω–∞–ª–∞—Ö –î–µ—Ä–µ–≤–Ω–∏.**

üîß –í—ã –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞—Ç—å –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª —Å–µ–±–µ https://discord.com/channels/472365787445985280/1264874500693037197 –∏ —á–µ—Ä–µ–∑ –µ–≥–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞–∫—Ä—ã—Ç—å –µ—ë –¥–ª—è —Å–µ–±—è –∏ –ø—É—Å—Ç—å —Ç—É–¥–∞ —Ç–æ–ª—å–∫–æ —Å–≤–æ–∏—Ö –¥—Ä—É–∑–µ–π.

üëë –í—ã –∫–∞–∫ –≤–ª–∞–¥–µ–ª–µ—Ü –∫–∞–Ω–∞–ª–∞ —Å–º–æ–∂–µ—Ç–µ –∫–∏–∫–Ω—É—Ç—å –ª—é–±–æ–≥–æ –∫—Ç–æ –í–∞–º –ø–æ–º–µ—à–∞–µ—Ç.

üí° **–°–æ–≤–µ—Ç—É–µ–º –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å.** –í—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–æ–π—Å –∫–∞–Ω–∞–ª–∞ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è."""

        await safe_send_message(interaction.channel, rules_message)

        await interaction.followup.send(
            f"‚úÖ –ü—Ä–∞–≤–∏–ª–∞ –Ω–∞–ø–æ–º–Ω–µ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.mention}", ephemeral=True
        )

        logger.info(
            f"üìã –ü—Ä–∞–≤–∏–ª–∞ –Ω–∞–ø–æ–º–Ω–µ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.display_name} –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º {interaction.user.display_name}"
        )

    @discord.ui.button(
        label="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –æ–¥–æ–±—Ä–µ–Ω–∏–µ",
        style=discord.ButtonStyle.primary,
        custom_id="cancel_approval_post",
    )
    async def cancel_approval_post(
        self, interaction: discord.Interaction, button: discord.ui.Button
    ):
        """–û—Ç–º–µ–Ω–∞ –æ–¥–æ–±—Ä–µ–Ω–∏—è —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º"""
        user = interaction.guild.get_member(self.user_id)
        if not user:
            await interaction.response.send_message(
                "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.", ephemeral=True
            )
            return

        confirm_embed = discord.Embed(
            title="‚ö†Ô∏è –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ—Ç–º–µ–Ω—ã –æ–¥–æ–±—Ä–µ–Ω–∏—è",
            description=f"–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–º–µ–Ω–∏—Ç—å –æ–¥–æ–±—Ä–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.mention}?\n\n**–ß—Ç–æ –ø—Ä–æ–∏–∑–æ–π–¥–µ—Ç:**\nüîπ –†–æ–ª—å **–ù–æ–≤–∏—á–æ–∫** –±—É–¥–µ—Ç —Å–Ω—è—Ç–∞\nüîπ –†–æ–ª—å **–ü—Ä–æ—Ö–æ–∂–∏–π** –±—É–¥–µ—Ç –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∞",
            color=0xFF9900,
        )

        confirm_view = ConfirmCancelApprovalView(self.user_id, self.channel_id)
        await interaction.response.send_message(
            embed=confirm_embed, view=confirm_view, ephemeral=True
        )


class ConfirmTicketDeleteView(discord.ui.View):
    def __init__(self, user_id: int, channel_id: int):
        super().__init__(timeout=None)
        self.user_id = user_id
        self.channel_id = channel_id

    @discord.ui.button(label="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å", style=discord.ButtonStyle.danger)
    async def confirm_delete_ticket(
        self, interaction: discord.Interaction, button: discord.ui.Button
    ):
        """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è —Ç–∏–∫–µ—Ç–∞"""
        await interaction.response.send_message(
            "‚è∞ –ó–∞—è–≤–∫–∞ –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–∞ —á–µ—Ä–µ–∑ 15 —Å–µ–∫—É–Ω–¥...", ephemeral=False
        )

        # –õ–æ–≥–∏—Ä—É–µ–º –¥–µ–π—Å—Ç–≤–∏–µ
        logger.info(
            f"üóëÔ∏è –¢–∏–∫–µ—Ç {interaction.channel.name} –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω —á–µ—Ä–µ–∑ 15 —Å–µ–∫—É–Ω–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {interaction.user.display_name}"
        )

        # –ñ–¥–µ–º 15 —Å–µ–∫—É–Ω–¥
        await asyncio.sleep(15)

        try:
            # –£–¥–∞–ª—è–µ–º –∫–∞–Ω–∞–ª
            await interaction.channel.delete(
                reason=f"–ó–∞—è–≤–∫–∞ —É–¥–∞–ª–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {interaction.user.display_name} –ø–æ—Å–ª–µ —Ç–∞–π–º–µ—Ä–∞"
            )
            logger.info(f"üóëÔ∏è –¢–∏–∫–µ—Ç —É–¥–∞–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {interaction.user.display_name}")
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ç–∏–∫–µ—Ç–∞: {e}")


    @discord.ui.button(label="‚ùå –û—Ç–º–µ–Ω–∞", style=discord.ButtonStyle.secondary)
    async def cancel_delete_ticket(
        self, interaction: discord.Interaction, button: discord.ui.Button
    ):
        """–û—Ç–º–µ–Ω–∞ —É–¥–∞–ª–µ–Ω–∏—è"""
        await interaction.response.edit_message(
            content="‚ùå –£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.", embed=None, view=None
        )


class RecheckApplicationView(discord.ui.View):
    def __init__(self, user_id: int = None, steam_url: str = None):
        super().__init__(timeout=None)  # –ü–æ—Å—Ç–æ—è–Ω–Ω–∞—è –∫–Ω–æ–ø–∫–∞
        self.user_id = user_id or 0
        self.steam_url = steam_url or ""

    @discord.ui.button(
        label="üîÑ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–∞—è–≤–∫—É –µ—â—ë —Ä–∞–∑",
        style=discord.ButtonStyle.gray,
        custom_id="recheck_application_0",
    )
    async def recheck_application(
        self, interaction: discord.Interaction, button: discord.ui.Button
    ):
        """–ö–Ω–æ–ø–∫–∞ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞—è–≤–∫–∏"""
        try:
            # –û—Ç–≤–µ—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            await interaction.response.send_message(
                "üîÑ –ù–∞—á–∏–Ω–∞—é –ø–æ–≤—Ç–æ—Ä–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –∑–∞—è–≤–∫–∏...", ephemeral=True
            )

            # –õ–æ–≥–∏—Ä—É–µ–º –¥–µ–π—Å—Ç–≤–∏–µ
            logger.info(
                f"üîÑ –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞—è–≤–∫–∏ –∑–∞–ø—Ä–æ—à–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {interaction.user.display_name} –≤ —Ç–∏–∫–µ—Ç–µ {interaction.channel.name}"
            )

            # –ü–æ–ª—É—á–∞–µ–º –∞–≤—Ç–æ—Ä–∞ –∑–∞—è–≤–∫–∏
            ticket_owner = interaction.guild.get_member(self.user_id)
            if not ticket_owner:
                await interaction.edit_original_response(
                    content="‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∞–≤—Ç–æ—Ä–∞ –∑–∞—è–≤–∫–∏."
                )
                return

            # –û—á–∏—â–∞–µ–º –∫—ç—à Steam –¥–ª—è —Å–≤–µ–∂–µ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
            try:
                from handlers.steam_api import steam_client
                from handlers.novichok import extract_steam_id_from_url

                # –ï—Å–ª–∏ –µ—Å—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–∞—è Steam-—Å—Å—ã–ª–∫–∞
                if self.steam_url:
                    steam_id = extract_steam_id_from_url(self.steam_url)
                    if steam_id:
                        steam_client.force_cache_clear_for_profile(steam_id)
                        logger.info(f"üóëÔ∏è –û—á–∏—â–µ–Ω –∫—ç—à Steam –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏")
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –∫—ç—à–∞ Steam: {e}")

            # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∞–ª–∏–∑ –∑–∞—è–≤–∫–∏
            from handlers.tickets import TicketHandler

            # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
            bot = interaction.client
            handler = TicketHandler(bot)

            # –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∞–ª–∏–∑ –∑–∞—è–≤–∫–∏
            await handler.analyze_and_respond_to_application(
                interaction.channel, ticket_owner
            )

            await interaction.edit_original_response(
                content="‚úÖ –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞—è–≤–∫–∏ –∑–∞–ø—É—â–µ–Ω–∞!"
            )

        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞—è–≤–∫–∏: {e}")
            try:
                await interaction.edit_original_response(
                    content="‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–µ –∑–∞—è–≤–∫–∏."
                )
            except:
                pass


class ConfirmCancelApprovalView(discord.ui.View):
    def __init__(self, user_id: int, channel_id: int):
        super().__init__(timeout=None)
        self.user_id = user_id
        self.channel_id = channel_id

    @discord.ui.button(label="‚úÖ –û—Ç–º–µ–Ω–∏—Ç—å –æ–¥–æ–±—Ä–µ–Ω–∏–µ", style=discord.ButtonStyle.primary)
    async def confirm_cancel_approval(
        self, interaction: discord.Interaction, button: discord.ui.Button
    ):
        """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ—Ç–º–µ–Ω—ã –æ–¥–æ–±—Ä–µ–Ω–∏—è"""
        user = interaction.guild.get_member(self.user_id)
        if not user:
            await interaction.response.send_message(
                "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.", ephemeral=True
            )
            return

        await interaction.response.defer()

        try:
            guild = interaction.guild
            newbie_role = guild.get_role(NEWBIE_ROLE_ID)
            guest_role = guild.get_role(GUEST_ROLE_ID)

            # –°–Ω–∏–º–∞–µ–º —Ä–æ–ª—å –ù–æ–≤–∏—á–æ–∫
            if newbie_role and newbie_role in user.roles:
                await user.remove_roles(
                    newbie_role,
                    reason=f"–û—Ç–º–µ–Ω–∞ –æ–¥–æ–±—Ä–µ–Ω–∏—è –∑–∞—è–≤–∫–∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º {interaction.user.display_name}",
                )
                logger.info(f"üîÑ –°–Ω—è—Ç–∞ —Ä–æ–ª—å –ù–æ–≤–∏—á–æ–∫ —É {user.display_name}")

            # –í—ã–¥–∞–µ–º —Ä–æ–ª—å –ü—Ä–æ—Ö–æ–∂–∏–π
            if guest_role:
                await user.add_roles(
                    guest_role,
                    reason=f"–í–æ–∑–≤—Ä–∞—Ç —Ä–æ–ª–∏ –ü—Ä–æ—Ö–æ–∂–∏–π –ø–æ—Å–ª–µ –æ—Ç–º–µ–Ω—ã –æ–¥–æ–±—Ä–µ–Ω–∏—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º {interaction.user.display_name}",
                )
                logger.info(f"üîÑ –í—ã–¥–∞–Ω–∞ —Ä–æ–ª—å –ü—Ä–æ—Ö–æ–∂–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.display_name}")

                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª
                channel = guild.get_channel(self.channel_id)
                if channel:
                    cancel_message = f"""‚ö†Ô∏è {user.mention} **–í–∞—à–µ –æ–¥–æ–±—Ä–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º {interaction.user.mention}**

üîÑ –í–∞–º –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∞ —Ä–æ–ª—å **–ü—Ä–æ—Ö–æ–∂–∏–π**.

üìã **–ß—Ç–æ –¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ:**
üî∏ –ü—Ä–æ—á–∏—Ç–∞–π—Ç–µ —Ç—É—Ç –≤ —á–∞—Ç–µ –≤–æ–∑–º–æ–∂–Ω—É—é –ø—Ä–∏—á–∏–Ω—É –æ—Ç–∫–∞–∑–∞ –æ—Ç –æ–¥–æ–±—Ä–µ–Ω–∏—è –í–∞—à–µ–π –∑–∞—è–≤–∫–∏
üî∏ –ò—Å–ø—Ä–∞–≤—å—Ç–µ –≤—Å–µ –Ω–µ–¥–æ—á—ë—Ç—ã, –∞ –ø–æ—Å–ª–µ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–∞—è–≤–∫—É –µ—â—ë —Ä–∞–∑" –≤ —Å–∞–º–æ–º –Ω–∞—á–∞–ª–µ –¥–∞–Ω–Ω–æ–≥–æ —Ç–∏–∫–µ—Ç–∞
üî∏ –ï—Å–ª–∏ –±—É–¥—É—Ç –≤–æ–ø—Ä–æ—Å—ã, –º–æ–∂–µ—Ç–µ –∑–∞–¥–∞—Ç—å –∏—Ö –∂–∏—Ç–µ–ª—è–º –≤ https://discord.com/channels/472365787445985280/1178436876244361388"""

                    await safe_send_message(channel, cancel_message)

                await interaction.followup.send(
                    f"‚úÖ –û–¥–æ–±—Ä–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ: {user.mention} –ø–æ–ª—É—á–∏–ª —Ä–æ–ª—å –ü—Ä–æ—Ö–æ–∂–∏–π",
                    ephemeral=True,
                )

                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –º–æ–¥-–∫–∞–Ω–∞–ª
                mod_channel = guild.get_channel(config.MOD_CHANNEL_ID)
                if mod_channel:
                    mod_embed = discord.Embed(
                        title="‚ö†Ô∏è–û–¥–æ–±—Ä–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ",
                        description=f"**–ò–≥—Ä–æ–∫:** {user.mention}\n**–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä:** {interaction.user.mention}\n**–¢–∏–∫–µ—Ç:** <#{self.channel_id}>",
                        color=0xFF9900,
                        timestamp=datetime.now(timezone.utc),
                    )
                    await mod_channel.send(embed=mod_embed)

                logger.info(
                    f"‚ö†Ô∏è –û–¥–æ–±—Ä–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ: {user.display_name} –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º {interaction.user.display_name}"
                )
            else:
                await interaction.followup.send(
                    "‚ùå –†–æ–ª—å '–ü—Ä–æ—Ö–æ–∂–∏–π' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.", ephemeral=True
                )

        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–º–µ–Ω—ã –æ–¥–æ–±—Ä–µ–Ω–∏—è: {e}")
            await interaction.followup.send(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ –æ–¥–æ–±—Ä–µ–Ω–∏—è.", ephemeral=True
            )

    @discord.ui.button(label="‚ùå –û—Ç–º–µ–Ω–∞", style=discord.ButtonStyle.secondary, custom_id="cancel_cancel_approval_v2")
    async def cancel_cancel_approval(
        self, interaction: discord.Interaction, button: discord.ui.Button
    ):
        """–û—Ç–º–µ–Ω–∞ –æ—Ç–º–µ–Ω—ã –æ–¥–æ–±—Ä–µ–Ω–∏—è"""
        await interaction.response.edit_message(
            content="‚ùå –û—Ç–º–µ–Ω–∞ –æ–¥–æ–±—Ä–µ–Ω–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.", embed=None, view=None
        )


# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —Å–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞—á —É–¥–∞–ª–µ–Ω–∏—è
active_deletion_tasks = {}


class TicketDeleteConfirmView(discord.ui.View):
    def __init__(self, ticket_owner_id: int, deleter_id: int):
        super().__init__(timeout=None)
        self.ticket_owner_id = ticket_owner_id
        self.deleter_id = deleter_id

    @discord.ui.button(label="‚úÖ –î–∞, —É–¥–∞–ª–∏—Ç—å", style=discord.ButtonStyle.danger)
    async def confirm_delete_ticket(
        self, interaction: discord.Interaction, button: discord.ui.Button
    ):
        """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è - –∑–∞–ø—É—Å–∫–∞–µ–º —Ç–∞–π–º–µ—Ä"""
        await interaction.response.defer()

        try:
            # –°–æ–∑–¥–∞–µ–º embed —Å —Ç–∞–π–º–µ—Ä–æ–º
            timer_embed = discord.Embed(
                title="‚è∞ –ó–∞—è–≤–∫–∞ –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–∞ —á–µ—Ä–µ–∑ 30 —Å–µ–∫—É–Ω–¥...",
                description="–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ —á—Ç–æ–±—ã –æ—Ç–º–µ–Ω–∏—Ç—å —É–¥–∞–ª–µ–Ω–∏–µ",
                color=0xFF9900,
                timestamp=datetime.now(timezone.utc),
            )

            # –°–æ–∑–¥–∞–µ–º view —Å –∫–Ω–æ–ø–∫–æ–π –æ—Ç–º–µ–Ω—ã
            cancel_view = TicketDeleteCancelView(
                self.ticket_owner_id, self.deleter_id, interaction.channel.id
            )

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–∞–π–º–µ—Ä–æ–º –≤ –∫–∞–Ω–∞–ª —Ç–∏–∫–µ—Ç–∞
            timer_message = await safe_send_message(
                interaction.channel, embed=timer_embed, view=cancel_view
            )

            # –°–æ–∑–¥–∞–µ–º –∑–∞–¥–∞—á—É —É–¥–∞–ª–µ–Ω–∏—è
            deletion_task = asyncio.create_task(
                self._delete_after_delay(
                    interaction.channel, interaction.user, timer_message, cancel_view
                )
            )

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–¥–∞—á—É –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–º —Å–ª–æ–≤–∞—Ä–µ
            active_deletion_tasks[interaction.channel.id] = deletion_task

            # –û—Ç–≤–µ—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            await interaction.edit_original_response(
                content="‚è∞ –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ. –¢–∞–π–º–µ—Ä –∑–∞–ø—É—â–µ–Ω –≤ –∫–∞–Ω–∞–ª–µ —Ç–∏–∫–µ—Ç–∞.",
                embed=None,
                view=None,
            )

            logger.info(
                f"‚è∞ –ó–∞–ø—É—â–µ–Ω —Ç–∞–π–º–µ—Ä —É–¥–∞–ª–µ–Ω–∏—è –¥–ª—è {interaction.channel.name} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {interaction.user.display_name}"
            )

        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Ç–∞–π–º–µ—Ä–∞ —É–¥–∞–ª–µ–Ω–∏—è: {e}")
            await interaction.edit_original_response(
                content="‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Ç–∞–π–º–µ—Ä–∞ —É–¥–∞–ª–µ–Ω–∏—è.",
                embed=None,
                view=None,
            )

    async def _delete_after_delay(self, channel, deleter, timer_message, cancel_view):
        """–£–¥–∞–ª—è–µ—Ç –∫–∞–Ω–∞–ª —á–µ—Ä–µ–∑ 30 —Å–µ–∫—É–Ω–¥"""
        try:
            await asyncio.sleep(30)

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞–¥–∞—á–∞ –Ω–µ –±—ã–ª–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞
            if channel.id in active_deletion_tasks:
                # –û—Ç–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫—É –æ—Ç–º–µ–Ω—ã
                for item in cancel_view.children:
                    item.disabled = True

                # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                final_embed = discord.Embed(
                    title="üóëÔ∏è –£–¥–∞–ª—è–µ–º –∑–∞—è–≤–∫—É...",
                    description="–í—Ä–µ–º—è –∏—Å—Ç–µ–∫–ª–æ. –ö–∞–Ω–∞–ª –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥.",
                    color=0xFF0000,
                )

                try:
                    await timer_message.edit(embed=final_embed, view=cancel_view)
                except:
                    pass

                # –£–¥–∞–ª—è–µ–º –∫–∞–Ω–∞–ª
                await asyncio.sleep(3)
                await channel.delete(
                    reason=f"–£–¥–∞–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {deleter.display_name} –ø–æ—Å–ª–µ —Ç–∞–π–º–µ—Ä–∞"
                )

                # –£–¥–∞–ª—è–µ–º –∏–∑ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞—á
                if channel.id in active_deletion_tasks:
                    del active_deletion_tasks[channel.id]

                logger.info(
                    f"üóëÔ∏è –ö–∞–Ω–∞–ª {channel.name} —É–¥–∞–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {deleter.display_name} –ø–æ—Å–ª–µ –∏—Å—Ç–µ—á–µ–Ω–∏—è —Ç–∞–π–º–µ—Ä–∞"
                )

        except asyncio.CancelledError:
            logger.info(
                f"‚ö†Ô∏è –£–¥–∞–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞ {channel.name if channel else 'Unknown'} –æ—Ç–º–µ–Ω–µ–Ω–æ"
            )
            # –£–¥–∞–ª—è–µ–º –∏–∑ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞—á –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ
            if hasattr(channel, "id") and channel.id in active_deletion_tasks:
                del active_deletion_tasks[channel.id]
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∫–∞–Ω–∞–ª–∞: {e}")


class TicketDeleteCancelView(discord.ui.View):
    def __init__(self, ticket_owner_id: int, deleter_id: int, channel_id: int):
        super().__init__(timeout=None)
        self.ticket_owner_id = ticket_owner_id
        self.deleter_id = deleter_id
        self.channel_id = channel_id

    async def interaction_check(self, interaction: discord.Interaction) -> bool:
        """–ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –Ω–∞ –æ—Ç–º–µ–Ω—É —É–¥–∞–ª–µ–Ω–∏—è"""
        user_roles = [role.name for role in interaction.user.roles]
        allowed_roles = ["–ñ–∏—Ç–µ–ª—å", "–ì—Ä–∞–∂–¥–∞–Ω–∏–Ω"]
        is_ticket_owner = interaction.user.id == self.ticket_owner_id
        is_deleter = interaction.user.id == self.deleter_id
        has_permission = any(role in user_roles for role in allowed_roles)

        # –ê–≤—Ç–æ—Ä –∑–∞—è–≤–∫–∏, –∏–Ω–∏—Ü–∏–∞—Ç–æ—Ä —É–¥–∞–ª–µ–Ω–∏—è –∏–ª–∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä –º–æ–≥—É—Ç –æ—Ç–º–µ–Ω–∏—Ç—å
        if not (is_ticket_owner or is_deleter or has_permission):
            await interaction.response.send_message(
                "‚ùå –¢–æ–ª—å–∫–æ –∞–≤—Ç–æ—Ä –∑–∞—è–≤–∫–∏, –∏–Ω–∏—Ü–∏–∞—Ç–æ—Ä —É–¥–∞–ª–µ–Ω–∏—è –∏–ª–∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã –º–æ–≥—É—Ç –æ—Ç–º–µ–Ω–∏—Ç—å —É–¥–∞–ª–µ–Ω–∏–µ.",
                ephemeral=True,
            )
            return False
        return True

    @discord.ui.button(label="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å —É–¥–∞–ª–µ–Ω–∏–µ", style=discord.ButtonStyle.primary)
    async def cancel_deletion(
        self, interaction: discord.Interaction, button: discord.ui.Button
    ):
        """–û—Ç–º–µ–Ω–∞ —É–¥–∞–ª–µ–Ω–∏—è –∫–∞–Ω–∞–ª–∞"""
        try:
            # –û—Ç–º–µ–Ω—è–µ–º –∑–∞–¥–∞—á—É —É–¥–∞–ª–µ–Ω–∏—è
            if self.channel_id in active_deletion_tasks:
                task = active_deletion_tasks[self.channel_id]
                task.cancel()
                del active_deletion_tasks[self.channel_id]

            # –û—Ç–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫—É
            button.disabled = True

            # –°–æ–∑–¥–∞–µ–º embed –æ–± –æ—Ç–º–µ–Ω–µ
            cancel_embed = discord.Embed(
                title="‚úÖ –£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ",
                description=f"–£–¥–∞–ª–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏ –æ—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {interaction.user.display_name}",
                color=0x00FF00,
                timestamp=datetime.now(timezone.utc),
            )

            await interaction.response.edit_message(embed=cancel_embed, view=self)

            logger.info(
                f"‚úÖ –£–¥–∞–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞ {interaction.channel.name} –æ—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {interaction.user.display_name}"
            )

        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–º–µ–Ω—ã —É–¥–∞–ª–µ–Ω–∏—è: {e}")
            await interaction.response.send_message(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ —É–¥–∞–ª–µ–Ω–∏—è.", ephemeral=True
            )


async def setup(bot):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ—Å—Ç–æ—è–Ω–Ω—ã—Ö view –¥–ª—è –∫–Ω–æ–ø–æ–∫ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ Cog"""
    bot.add_view(TicketActionView(0, ""))  # Dummy view –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏
    bot.add_view(AutoFixConfirmationView(0, "", "", []))  # Dummy view –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏
    bot.add_view(PostApprovalView(0, 0))  # Dummy view –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏
    bot.add_view(ConfirmCancelApprovalView(0, 0))  # Dummy view –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏
    bot.add_view(TicketDeleteConfirmView(0, 0))  # Dummy view –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏
    bot.add_view(TicketDeleteCancelView(0, 0, 0))  # Dummy view –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏
    bot.add_view(RecheckApplicationView(0, ""))  # Dummy view –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏
    logger.info(
        "‚úÖ –í—Å–µ –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–µ views –¥–æ–±–∞–≤–ª–µ–Ω—ã: TicketActionView, AutoFixConfirmationView, PostApprovalView, ConfirmCancelApprovalView, TicketDeleteConfirmView, TicketDeleteCancelView, RecheckApplicationView"
    )

    # –î–æ–±–∞–≤–ª—è–µ–º Cog —Å –∫–æ–º–∞–Ω–¥–∞–º–∏
    await bot.add_cog(Novichok(bot))
    logger.info("‚úÖ Novichok Cog –¥–æ–±–∞–≤–ª–µ–Ω —Å –∫–æ–º–∞–Ω–¥–∞–º–∏")


from discord.ext import commands


class Novichok(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.logger = logging.getLogger(__name__)
        self.user_steam_urls = {}  # –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è Steam URL –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

    async def cog_load(self):
        self.logger.info(f"–ó–∞–≥—Ä—É–∂–µ–Ω –º–æ–¥—É–ª—å {self.__class__.__name__}")

    async def cog_unload(self):
        self.logger.info(f"–í—ã–≥—Ä—É–∂–µ–Ω –º–æ–¥—É–ª—å {self.__class__.__name__}")

    async def save_user_steam_url(self, user_id: int, steam_url: str):
        """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç Steam URL –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        try:
            self.user_steam_urls[user_id] = steam_url
            logger.info(
                f"üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∞ Steam-—Å—Å—ã–ª–∫–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {steam_url}"
            )
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è Steam URL –¥–ª—è {user_id}: {e}")
            await log_error(e, f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è Steam URL –¥–ª—è {user_id}")

    async def get_user_steam_url(self, user_id: int) -> str:
        """–ü–æ–ª—É—á–∞–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π Steam URL –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        try:
            return self.user_steam_urls.get(user_id, None)
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è Steam URL –¥–ª—è {user_id}: {e}")
            await log_error(e, f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è Steam URL –¥–ª—è {user_id}")
            return None

    @commands.command(name="–≥–æ—Ç–æ–≤", aliases=["–ø—Ä–æ–≤–µ—Ä—å", "check", "ready"])
    async def check_application_command(self, ctx):
        """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞—è–≤–∫–∏"""
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–º–∞–Ω–¥–∞ –≤—ã–∑–≤–∞–Ω–∞ –≤ –∫–∞–Ω–∞–ª–µ —Ç–∏–∫–µ—Ç–∞
            if not ctx.channel.name.startswith("new_"):
                await ctx.send(
                    "‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –∫–∞–Ω–∞–ª–∞—Ö –∑–∞—è–≤–æ–∫.",
                    ephemeral=True,
                    delete_after=5,
                )
                return

            # –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∞–ª–∏–∑ –∏ –æ–±—Ä–∞–±–æ—Ç–∫—É –∑–∞—è–≤–∫–∏
            applicant = ctx.author
            await self.analyze_and_respond_to_application(ctx.channel, applicant)

            # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –∫–æ–º–∞–Ω–¥–æ–π
            await ctx.message.delete(delay=2)

            self.logger.info(
                f"üîÑ –ó–∞—è–≤–∫–∞ {applicant.display_name} –∑–∞–ø—Ä–æ—à–µ–Ω–∞ –Ω–∞ –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä–∫—É –∫–æ–º–∞–Ω–¥–æ–π /–≥–æ—Ç–æ–≤"
            )

        except Exception as e:
            self.logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã /–≥–æ—Ç–æ–≤: {e}")
            await ctx.send(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
                ephemeral=True,
                delete_after=5,
            )

    @app_commands.command(name="role", description="–í—ã–¥–∞—Ç—å —Ä–æ–ª—å –ù–æ–≤–∏—á–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫—É")
    @app_commands.describe(member="–£—á–∞—Å—Ç–Ω–∏–∫, –∫–æ—Ç–æ—Ä–æ–º—É –Ω—É–∂–Ω–æ –≤—ã–¥–∞—Ç—å —Ä–æ–ª—å –ù–æ–≤–∏—á–æ–∫")
    async def issue_role_command(
        self, interaction: discord.Interaction, member: discord.Member
    ):
        """–í—ã–¥–∞—á–∞ —Ä–æ–ª–∏ –ù–æ–≤–∏—á–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫—É"""
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞
        user_roles = [role.name for role in interaction.user.roles]
        allowed_roles = ["–ñ–∏—Ç–µ–ª—å", "–ì—Ä–∞–∂–¥–∞–Ω–∏–Ω"]
        is_owner = interaction.user.id == interaction.guild.owner_id
        if not any(role in user_roles for role in allowed_roles) and not is_owner:
            await interaction.response.send_message(
                "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–¥–∞—á–∏ —Ä–æ–ª–µ–π.", ephemeral=True
            )
            return

        await interaction.response.defer()

        try:
            # –õ–æ–≥–∏—Ä—É–µ–º –¥–µ–π—Å—Ç–≤–∏–µ
            self.logger.info(
                f"–í—ã–¥–∞—á–∞ —Ä–æ–ª–∏ –∑–∞–ø—Ä–æ—à–µ–Ω–∞: {interaction.user.display_name} ‚Üí {member.display_name}"
            )

            # –ü–æ–ª—É—á–∞–µ–º —Ä–æ–ª–∏
            novichok_role = discord.utils.get(
                interaction.guild.roles, id=config.NEWBIE_ROLE_ID
            )
            prokhozhy_role = discord.utils.get(
                interaction.guild.roles, id=config.GUEST_ROLE_ID
            )

            if not novichok_role:
                await interaction.followup.send(
                    "‚ùå –†–æ–ª—å '–ù–æ–≤–∏—á–æ–∫' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.", ephemeral=True
                )
                return

            if not prokhozhy_role:
                await interaction.followup.send(
                    "‚ùå –†–æ–ª—å '–ü—Ä–æ—Ö–æ–∂–∏–π' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.", ephemeral=True
                )
                return

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É —É—á–∞—Å—Ç–Ω–∏–∫–∞ —Ä–æ–ª—å "–ü—Ä–æ—Ö–æ–∂–∏–π"
            if prokhozhy_role not in member.roles:
                await interaction.followup.send(
                    f"‚ùå –£ —É—á–∞—Å—Ç–Ω–∏–∫–∞ {member.mention} –Ω–µ—Ç —Ä–æ–ª–∏ '–ü—Ä–æ—Ö–æ–∂–∏–π'.",
                    ephemeral=True,
                )
                return

            # –£–±–∏—Ä–∞–µ–º —Ä–æ–ª—å "–ü—Ä–æ—Ö–æ–∂–∏–π" –∏ –≤—ã–¥–∞–µ–º —Ä–æ–ª—å "–ù–æ–≤–∏—á–æ–∫"
            try:
                await member.remove_roles(
                    prokhozhy_role, reason="–ó–∞–º–µ–Ω–∞ —Ä–æ–ª–∏ –ü—Ä–æ—Ö–æ–∂–∏–π –Ω–∞ –ù–æ–≤–∏—á–æ–∫"
                )
                await member.add_roles(
                    novichok_role,
                    reason=f"–†–æ–ª—å –≤—ã–¥–∞–Ω–∞ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º {interaction.user.display_name}",
                )
                self.logger.info(f"‚úÖ –†–æ–ª–∏ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã –¥–ª—è {member.display_name}")
            except Exception as e:
                self.logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–¥–∞—á–µ/—É–¥–∞–ª–µ–Ω–∏–∏ —Ä–æ–ª–µ–π: {e}")
                await interaction.followup.send(
                    f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–¥–∞—á–µ —Ä–æ–ª–∏. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.",
                    ephemeral=True,
                )
                return

            # –§–∏–∫—Å–∏—Ä—É–µ–º –Ω–∏–∫–Ω–µ–π–º
            try:
                current_nick = member.display_name
                await member.edit(
                    nick=current_nick,
                    reason=f"–§–∏–∫—Å–∞—Ü–∏—è –Ω–∏–∫–Ω–µ–π–º–∞ –ø–æ—Å–ª–µ –≤—ã–¥–∞—á–∏ —Ä–æ–ª–∏ –ù–æ–≤–∏—á–æ–∫",
                )
                self.logger.info(
                    f"‚úÖ –ù–∏–∫–Ω–µ–π–º '{current_nick}' –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω –¥–ª—è {member.display_name}"
                )
            except discord.Forbidden:
                self.logger.warning(
                    f"‚ö†Ô∏è –ù–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —Ñ–∏–∫—Å–∞—Ü–∏–∏ –Ω–∏–∫–Ω–µ–π–º–∞ —É {member.display_name}"
                )
            except Exception as e:
                self.logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Ñ–∏–∫—Å–∞—Ü–∏–∏ –Ω–∏–∫–Ω–µ–π–º–∞: {e}")

            # –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
            success_embed = discord.Embed(
                title="‚úÖ –†–æ–ª—å –≤—ã–¥–∞–Ω–∞",
                description=f"–£—á–∞—Å—Ç–Ω–∏–∫—É {member.mention} –≤—ã–¥–∞–Ω–∞ —Ä–æ–ª—å <@&{novichok_role.id}>",
                color=0x00FF00,
                timestamp=datetime.now(timezone.utc),
            )
            success_embed.add_field(
                name="üëÆ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä", value=interaction.user.mention, inline=True
            )
            await interaction.followup.send(embed=success_embed)

            # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –º–æ–¥-–∫–∞–Ω–∞–ª
            mod_channel = self.bot.get_channel(config.MOD_CHANNEL_ID)
            if mod_channel:
                mod_embed = discord.Embed(
                    title="‚úÖ –†–æ–ª—å –≤—ã–¥–∞–Ω–∞",
                    description=f"**–ò–≥—Ä–æ–∫:** {member.mention}\n**–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä:** {interaction.user.mention}",
                    color=0x00FF00,
                    timestamp=datetime.now(timezone.utc),
                )
                await mod_channel.send(embed=mod_embed)

        except Exception as e:
            self.logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã /role: {e}")
            await interaction.followup.send(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
                ephemeral=True,
            )

    @app_commands.command(name="check_nick", description="–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∏–∫–Ω–µ–π–º —É—á–∞—Å—Ç–Ω–∏–∫–∞")
    @app_commands.describe(member="–£—á–∞—Å—Ç–Ω–∏–∫ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∏–∫–Ω–µ–π–º–∞")
    async def check_nickname_command(
        self, interaction: discord.Interaction, member: discord.Member
    ):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∏–∫–Ω–µ–π–º–∞ —É—á–∞—Å—Ç–Ω–∏–∫–∞"""
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞
        user_roles = [role.name for role in interaction.user.roles]
        allowed_roles = ["–ñ–∏—Ç–µ–ª—å", "–ì—Ä–∞–∂–¥–∞–Ω–∏–Ω"]
        is_owner = interaction.user.id == interaction.guild.owner_id
        if not any(role in user_roles for role in allowed_roles) and not is_owner:
            await interaction.response.send_message(
                "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∏–∫–Ω–µ–π–º–æ–≤.", ephemeral=True
            )
            return

        await interaction.response.defer()

        try:
            # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
            current_nick = member.display_name
            self.logger.info(
                f"–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∏–∫–Ω–µ–π–º–∞ –∑–∞–ø—Ä–æ—à–µ–Ω–∞: {interaction.user.display_name} ‚Üí {member.display_name}"
            )

            # –û—Ü–µ–Ω–∏–≤–∞–µ–º –Ω–∏–∫–Ω–µ–π–º –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º
            nickname_valid, nickname_errors = self.validate_nickname(current_nick)
            self.logger.info(
                f"–†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∏–∫–Ω–µ–π–º–∞: valid={nickname_valid}, errors={nickname_errors}"
            )

            # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
            if nickname_valid:
                # –ù–∏–∫–Ω–µ–π–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º
                success_embed = discord.Embed(
                    title="‚úÖ –ù–∏–∫–Ω–µ–π–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º",
                    description=f"–ù–∏–∫–Ω–µ–π–º —É—á–∞—Å—Ç–Ω–∏–∫–∞ {member.mention} –æ—Ñ–æ—Ä–º–ª–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.",
                    color=0x00FF00,
                    timestamp=datetime.now(timezone.utc),
                )
                await interaction.followup.send(embed=success_embed, ephemeral=True)

            else:
                # –ù–∏–∫–Ω–µ–π–º –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º
                error_embed = discord.Embed(
                    title="‚ùå –ù–∏–∫–Ω–µ–π–º –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º",
                    description=f"–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–∏–∫–Ω–µ–π–º —É—á–∞—Å—Ç–Ω–∏–∫–∞ {member.mention} –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–¥–æ–±—Ä–µ–Ω.",
                    color=0xFF0000,
                    timestamp=datetime.now(timezone.utc),
                )

                # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—à–∏–±–∫–∞—Ö
                error_message = "\n".join([f"‚Ä¢ {error}" for error in nickname_errors])
                error_embed.add_field(
                    name="üìù –ù–∞–π–¥–µ–Ω–Ω—ã–µ –æ—à–∏–±–∫–∏", value=error_message, inline=False
                )

                await interaction.followup.send(embed=error_embed, ephemeral=True)

        except Exception as e:
            self.logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã /check_nick: {e}")
            await interaction.followup.send(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
                ephemeral=True,
            )

    def validate_nickname(self, nickname):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∏–∫–Ω–µ–π–º–∞ —á–µ—Ä–µ–∑ –Ω–æ–≤—É—é —Å—Ç—Ä–æ–≥—É—é —Å–∏—Å—Ç–µ–º—É –≤–∞–ª–∏–¥–∞—Ü–∏–∏"""
        from utils.validators import is_nickname_format_valid

        try:
            is_valid, error_message, _ = is_nickname_format_valid(nickname)

            if is_valid:
                return True, []
            else:
                # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å –æ–¥–Ω–æ–π –æ—à–∏–±–∫–æ–π –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
                return False, [error_message]

        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –Ω–∏–∫–Ω–µ–π–º–∞ '{nickname}': {e}")
            return False, ["–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –Ω–∏–∫–Ω–µ–π–º–∞"]

    def validate_rust_hours(self, rust_hours):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ —á–∞—Å–æ–≤ –≤ Rust"""
        is_valid = True
        errors = []

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞: —á–∏—Å–ª–æ –∏–ª–∏ "–Ω–µ —É–∫–∞–∑–∞–Ω–æ"
        if rust_hours.lower() != "–Ω–µ —É–∫–∞–∑–∞–Ω–æ":
            try:
                hours = int(rust_hours)
                if hours < 0:
                    is_valid = False
                    errors.append("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞—Å–æ–≤ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º.")
            except ValueError:
                is_valid = False
                errors.append("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —á–∞—Å–æ–≤. –£–∫–∞–∂–∏—Ç–µ —á–∏—Å–ª–æ –∏–ª–∏ '–Ω–µ —É–∫–∞–∑–∞–Ω–æ'.")

        return is_valid, errors

    async def get_application_info(
        self, channel: discord.TextChannel, applicant: discord.Member
    ):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∑–∞—è–≤–∫–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞"""
        steam_url = "–ù–µ —É–∫–∞–∑–∞–Ω–æ"
        rust_hours = "–ù–µ —É–∫–∞–∑–∞–Ω–æ"
        how_found = "–ù–µ —É–∫–∞–∑–∞–Ω–æ"

        # --- –ù–æ–≤—ã–π –±–ª–æ–∫: –ø—Ä–æ–≤–µ—Ä–∫–∞ description —É –∑–∞—è–≤–∫–∏ –ù–æ–≤–∏—á–∫–∞ ---
        for message in await channel.history(limit=50).flatten():
            for embed in message.embeds:
                if embed.description:
                    # –ò—â–µ–º Steam —Å—Å—ã–ª–∫—É –≤ –æ–ø–∏—Å–∞–Ω–∏–∏
                    matches = re.findall(
                        r'https?://steamcommunity\.com/(?:profiles|id)/[^\s\)\]\>"<]+',
                        embed.description,
                    )
                    if matches and steam_url == "–ù–µ —É–∫–∞–∑–∞–Ω–æ":
                        steam_url = matches[0]

                    # –ò—â–µ–º —á–∞—Å—ã Rust (–Ω–∞–ø—Ä–∏–º–µ—Ä "223 —á", "222 —á–∞—Å–æ–≤", "300 hours")
                    hours_match = re.search(
                        r'(\d+)\s*(?:—á|—á–∞—Å|—á–∞—Å–æ–≤|hours)',
                        embed.description.lower(),
                    )
                    if hours_match and rust_hours == "–ù–µ —É–∫–∞–∑–∞–Ω–æ":
                        rust_hours = hours_match.group(1)


        # –ò—â–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –≤ –∫–∞–Ω–∞–ª–µ
        async for message in channel.history(limit=50):
            if message.embeds:
                for embed in message.embeds:
                    if embed.fields:
                        for field in embed.fields:
                            field_name = field.name.lower() if field.name else ""
                            field_value = field.value.strip() if field.value else ""

                            if not field_value:
                                continue

                            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –ø–æ–ª—è –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º
                            if any(word in field_name for word in ["steam", "—Å—Ç–∏–º"]):
                                if "steamcommunity.com" in field_value:
                                    steam_url = field_value
                                # –¢–∞–∫–∂–µ –∏—â–µ–º –≤ —Ç–µ–∫—Å—Ç–µ –ø–æ–ª—è
                                elif "steamcommunity.com" in field_value:
                                    # –ò–∑–≤–ª–µ–∫–∞–µ–º Steam URL –∏–∑ —Ç–µ–∫—Å—Ç–∞
                                    import re

                                    steam_pattern = r'https?://steamcommunity\.com/(?:profiles|id)/[^\s\)\]\>"<]+'
                                    matches = re.findall(steam_pattern, field_value)
                                    if matches:
                                        steam_url = matches[0]
                            elif any(
                                word in field_name
                                for word in [
                                    "—á–∞—Å–æ–≤",
                                    "rust",
                                    "—Ä–∞—Å—Ç",
                                    "–∏–≥—Ä—ã",
                                    "–≤—Ä–µ–º—è",
                                    "–æ–ø—ã—Ç",
                                ]
                            ):
                                rust_hours = field_value
                            elif any(
                                word in field_name
                                for word in ["—É–∑–Ω–∞–ª–∏", "–ø—Ä–∏–≥–ª–∞—Å–∏–ª", "–¥—Ä—É–≥", "–æ—Ç–∫—É–¥–∞"]
                            ):
                                how_found = field_value

        return steam_url, rust_hours, how_found

    @app_commands.command(
        name="clear_steam", description="–û—á–∏—Å—Ç–∏—Ç—å –∫—ç—à Steam –¥–ª—è —É—á–∞—Å—Ç–Ω–∏–∫–∞"
    )
    @app_commands.describe(member="–£—á–∞—Å—Ç–Ω–∏–∫ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –∫—ç—à–∞ Steam")
    async def clear_steam_cache_command(
        self, interaction: discord.Interaction, member: discord.Member
    ):
        """–û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞ Steam –¥–ª—è —É—á–∞—Å—Ç–Ω–∏–∫–∞"""
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞
        user_roles = [role.name for role in interaction.user.roles]
        allowed_roles = ["–ñ–∏—Ç–µ–ª—å", "–ì—Ä–∞–∂–¥–∞–Ω–∏–Ω"]
        is_owner = interaction.user.id == interaction.guild.owner_id
        if not any(role in user_roles for role in allowed_roles) and not is_owner:
            await interaction.response.send_message(
                "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –∫—ç—à–∞.", ephemeral=True
            )
            return

        await interaction.response.defer()

        try:
            # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å–æ Steam API
            from handlers.steam_api import steam_client
            from handlers.novichok import extract_steam_id_from_url

            # –ò—â–µ–º Steam URL –≤ –∫–∞–Ω–∞–ª–µ
            steam_url = "–ù–µ —É–∫–∞–∑–∞–Ω–æ"
            async for message in interaction.channel.history(limit=20):
                if message.embeds:
                    for embed in message.embeds:
                        if embed.fields:
                            for field in embed.fields:
                                if (
                                    field.name
                                    and "steam" in field.name.lower()
                                    and field.value
                                ):
                                    if "steamcommunity.com" in field.value:
                                        steam_url = field.value
                                        break

            # –ï—Å–ª–∏ Steam URL –Ω–∞–π–¥–µ–Ω, –æ—á–∏—â–∞–µ–º –∫—ç—à
            if steam_url != "–ù–µ —É–∫–∞–∑–∞–Ω–æ":
                steam_id = extract_steam_id_from_url(steam_url)
                if steam_id:
                    steam_client.force_cache_clear_for_profile(steam_id)
                    await interaction.followup.send(
                        f"‚úÖ –ö—ç—à Steam –¥–ª—è —É—á–∞—Å—Ç–Ω–∏–∫–∞ {member.mention} –æ—á–∏—â–µ–Ω.",
                        ephemeral=True,
                    )
                    self.logger.info(
                        f"‚úÖ –ö—ç—à Steam –¥–ª—è {member.display_name} –æ—á–∏—â–µ–Ω –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º {interaction.user.display_name}"
                    )
                else:
                    await interaction.followup.send(
                        "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å Steam ID –∏–∑ URL.", ephemeral=True
                    )
            else:
                await interaction.followup.send(
                    "‚ùå Steam URL –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∫–∞–Ω–∞–ª–µ.", ephemeral=True
                )

        except Exception as e:
            self.logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –∫—ç—à–∞ Steam: {e}")
            await interaction.followup.send(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –∫—ç—à–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
                ephemeral=True,
            )

    @app_commands.command(
        name="info", description="–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞—è–≤–∫–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞"
    )
    @app_commands.describe(member="–£—á–∞—Å—Ç–Ω–∏–∫ –¥–ª—è –ø–æ–∫–∞–∑–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∑–∞—è–≤–∫–µ")
    async def show_application_info_command(
        self, interaction: discord.Interaction, member: discord.Member
    ):
        """–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞—è–≤–∫–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞"""
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞
        user_roles = [role.name for role in interaction.user.roles]
        allowed_roles = ["–ñ–∏—Ç–µ–ª—å", "–ì—Ä–∞–∂–¥–∞–Ω–∏–Ω"]
        is_owner = interaction.user.id == interaction.guild.owner_id
        if not any(role in user_roles for role in allowed_roles) and not is_owner:
            await interaction.response.send_message(
                "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∑–∞—è–≤–∫–∞—Ö.", ephemeral=True
            )
            return

        await interaction.response.defer()

        try:
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞—è–≤–∫–µ
            steam_url, rust_hours, how_found = await self.get_application_info(
                interaction.channel, member
            )

            # –§–æ—Ä–º–∏—Ä—É–µ–º embed —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
            info_embed = discord.Embed(
                title="‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞—è–≤–∫–µ",
                description=f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞—è–≤–∫–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞ {member.mention}",
                color=0x00FFFF,
                timestamp=datetime.now(timezone.utc),
            )

            info_embed.add_field(name="üéÆ Steam", value=steam_url, inline=False)
            info_embed.add_field(name="‚è∞ Rust (—á–∞—Å–æ–≤)", value=rust_hours, inline=True)
            info_embed.add_field(name="–û—Ç–∫—É–¥–∞ —É–∑–Ω–∞–ª–∏", value=how_found, inline=True)

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º embed
            await interaction.followup.send(embed=info_embed, ephemeral=True)

        except Exception as e:
            self.logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã /info: {e}")
            await interaction.followup.send(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
                ephemeral=True,
            )

    @app_commands.command(
        name="apply_fixes",
        description="–ü—Ä–∏–º–µ–Ω–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫ –Ω–∏–∫–Ω–µ–π–º—É",
    )
    @app_commands.describe(member="–£—á–∞—Å—Ç–Ω–∏–∫ –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –Ω–∏–∫–Ω–µ–π–º–∞")
    async def apply_nickname_fixes_command(
        self, interaction: discord.Interaction, member: discord.Member
    ):
        """–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –∫ –Ω–∏–∫–Ω–µ–π–º—É —É—á–∞—Å—Ç–Ω–∏–∫–∞"""
        await interaction.response.defer()

        try:
            # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
            original_nickname = member.display_name
            fixed_nickname, fixes_applied = auto_fix_nickname(original_nickname)
            if fixed_nickname != original_nickname:
                # –ü—Ä–∏–º–µ–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
                try:
                    await member.edit(nick=fixed_nickname)
                    await interaction.followup.send(
                        f"‚úÖ –ù–∏–∫–Ω–µ–π–º —É—á–∞—Å—Ç–Ω–∏–∫–∞ {member.mention} –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω: {original_nickname} ‚Üí {fixed_nickname}",
                        ephemeral=True,
                    )
                    self.logger.info(
                        f"‚úÖ –ù–∏–∫–Ω–µ–π–º {member.display_name} –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω: {original_nickname} ‚Üí {fixed_nickname}"
                    )
                except discord.Forbidden:
                    await interaction.followup.send(
                        "‚ùå –£ –º–µ–Ω—è –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∏–∫–Ω–µ–π–º–∞ —ç—Ç–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞.",
                        ephemeral=True,
                    )
                except Exception as e:
                    self.logger.error(
                        f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –∫ –Ω–∏–∫–Ω–µ–π–º—É: {e}"
                    )
                    await interaction.followup.send(
                        "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π.",
                        ephemeral=True,
                    )
            else:
                await interaction.followup.send(
                    "‚úÖ –ù–∏–∫–Ω–µ–π–º –Ω–µ —Ç—Ä–µ–±—É–µ—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π.", ephemeral=True
                )

        except Exception as e:
            self.logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã /apply_fixes: {e}")
            await interaction.followup.send(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
                ephemeral=True,
            )

    @app_commands.command(
        name="recheck", description="–ó–∞–ø—É—Å—Ç–∏—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –∑–∞—è–≤–∫–∏"
    )
    @app_commands.describe(member="–£—á–∞—Å—Ç–Ω–∏–∫ –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞—è–≤–∫–∏")
    async def recheck_application_command(
        self, interaction: discord.Interaction, member: discord.Member
    ):
        """–ó–∞–ø—É—Å–∫ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞—è–≤–∫–∏"""
        logger.info(
            f"üîÑ –ù–∞—á–∏–Ω–∞–µ–º –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä–∫—É –∑–∞—è–≤–∫–∏ –≤ –∫–∞–Ω–∞–ª–µ {interaction.channel.name} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {interaction.user.display_name}"
        )
        await interaction.response.defer()

        try:
            # –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∞–ª–∏–∑ –∏ –æ–±—Ä–∞–±–æ—Ç–∫—É –∑–∞—è–≤–∫–∏
            await self.analyze_and_respond_to_application(interaction.channel, member)
            await interaction.followup.send(
                "üîÑ –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ –ø–æ–≤—Ç–æ—Ä–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É.", ephemeral=True
            )
            self.logger.info(
                f"üîÑ –ó–∞—è–≤–∫–∞ {member.display_name} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ –ø–æ–≤—Ç–æ—Ä–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –∫–æ–º–∞–Ω–¥–æ–π /recheck"
            )

        except Exception as e:
            self.logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã /recheck: {e}")
            await interaction.followup.send(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
                ephemeral=True,
            )

    async def analyze_and_respond_to_application(
        self, channel: discord.TextChannel, applicant: discord.Member
    ):
        """–ê–Ω–∞–ª–∏–∑ –∑–∞—è–≤–∫–∏ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞"""
        try:
            # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
            current_nick = applicant.display_name
            self.logger.info(
                f"–ù–∞—á–∏–Ω–∞–µ–º –∞–Ω–∞–ª–∏–∑ –∑–∞—è–≤–∫–∏: {current_nick} (ID: {applicant.id})"
            )

            # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏–∑ Steam API
            steam_url, rust_hours, how_found = await self.get_application_info(
                channel, applicant
            )

            # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∏–∫–Ω–µ–π–º–∞
            original_nickname = applicant.display_name
            fixed_nickname, fixes_applied = auto_fix_nickname(original_nickname)
            if fixed_nickname != original_nickname:
                # –ü—Ä–∏–º–µ–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
                try:
                    await applicant.edit(nick=fixed_nickname)
                    self.logger.info(
                        f"‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω –Ω–∏–∫–Ω–µ–π–º –¥–ª—è {applicant.display_name}: {original_nickname} ‚Üí {fixed_nickname}"
                    )

                    # –°–æ–∑–¥–∞–µ–º embed —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ–± –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏
                    success_embed = discord.Embed(
                        title="‚úÖ –ù–∏–∫–Ω–µ–π–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω!",
                        description=f"–í–∞—à –Ω–∏–∫–Ω–µ–π–º –∏–∑–º–µ–Ω–µ–Ω –Ω–∞: **{fixed_nickname}**",
                        color=0x00FF00,
                    )

                    success_embed.add_field(
                        name="üîß –ü—Ä–∏–º–µ–Ω—ë–Ω–Ω—ã–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:",
                        value="\n".join([f"‚Ä¢ {fix}" for fix in fixes_applied]),
                        inline=False,
                    )

                    success_embed.add_field(
                        name="üìã –ß—Ç–æ –¥–∞–ª—å—à–µ:",
                        value="–¢–µ–ø–µ—Ä—å –±–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä–∏—Ç –≤–∞—à—É –∑–∞—è–≤–∫—É!",
                        inline=False,
                    )

                    await channel.send(embed=success_embed)

                    # –ó–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä–∫—É —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
                    await asyncio.sleep(2)
                    await self.analyze_and_respond_to_application(channel, applicant)

                    return  # –ü—Ä–µ–∫—Ä–∞—â–∞–µ–º –¥–∞–ª—å–Ω–µ–π—à—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É

                except discord.Forbidden:
                    await channel.send(
                        "‚ùå –£ –º–µ–Ω—è –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤–∞—à–µ–≥–æ –Ω–∏–∫–Ω–µ–π–º–∞. –ò–∑–º–µ–Ω–∏—Ç–µ –µ–≥–æ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ.",
                        ephemeral=True,
                    )
                    return
                except Exception as e:
                    self.logger.error(
                        f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è {applicant.display_name}: {e}"
                    )
                    await channel.send(
                        "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ –Ω–∏–∫–Ω–µ–π–º–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –µ–≥–æ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ.",
                        ephemeral=True,
                    )
                    return

            # –û—Ü–µ–Ω–∏–≤–∞–µ–º –Ω–∏–∫–Ω–µ–π–º –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º
            nickname_valid, nickname_errors = self.validate_nickname(current_nick)
            self.logger.info(
                f"–†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∏–∫–Ω–µ–π–º–∞: valid={nickname_valid}, errors={nickname_errors}"
            )

            # –û—Ü–µ–Ω–∏–≤–∞–µ–º —á–∞—Å—ã –≤ Rust
            hours_valid, hours_errors = self.validate_rust_hours(rust_hours)
            self.logger.info(
                f"–†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ —á–∞—Å–æ–≤ Rust: valid={hours_valid}, errors={hours_errors}"
            )

            # –û–±—ä–µ–¥–∏–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–æ–∫
            overall_valid = nickname_valid and hours_valid
            overall_errors = nickname_errors + hours_errors

            # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
            if overall_valid:
                # –ó–∞—è–≤–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º
                success_embed = discord.Embed(
                    title="‚úÖ –ó–∞—è–≤–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º",
                    description=f"{applicant.mention}, –≤–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º —Å–µ—Ä–≤–µ—Ä–∞!",
                    color=0x00FF00,
                    timestamp=datetime.now(timezone.utc),
                )

                success_embed.add_field(
                    name="üìã –°—Ç–∞—Ç—É—Å",
                    value="–ì–æ—Ç–æ–≤–∞ –∫ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—é –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º",
                    inline=False,
                )

                # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–ª—è —É—Å–ø–µ—à–Ω—ã—Ö –∑–∞—è–≤–æ–∫ —Ç–æ–∂–µ
                recheck_view = discord.ui.View(timeout=None)
                recheck_button = discord.ui.Button(
                    label="üîÑ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–∞—è–≤–∫—É –µ—â—ë —Ä–∞–∑",
                    style=discord.ButtonStyle.green,
                    custom_id="recheck_application_3",
                )
                recheck_view.add_item(recheck_button)

                await channel.send(embed=success_embed, view=recheck_view)

                self.logger.info(
                    f"‚úÖ –ó–∞—è–≤–∫–∞ {applicant.display_name} —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º, –æ–∂–∏–¥–∞–µ–º –¥–µ–π—Å—Ç–≤–∏–π –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞"
                )

            else:
                # –ó–∞—è–≤–∫–∞ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º
                rejection_embed = discord.Embed(
                    title="‚ùå –ó–∞—è–≤–∫–∞ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º",
                    description=f"–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, {applicant.mention}, –≤–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–¥–æ–±—Ä–µ–Ω–∞.",
                    color=0xFF0000,
                    timestamp=datetime.now(timezone.utc),
                )

                # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—à–∏–±–∫–∞—Ö
                error_message = "\n".join([f"‚Ä¢ {error}" for error in overall_errors])
                rejection_embed.add_field(
                    name="üìù –ù–∞–π–¥–µ–Ω–Ω—ã–µ –æ—à–∏–±–∫–∏", value=error_message, inline=False
                )

                # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
                rejection_embed.add_field(
                    name="üéÆ Steam", value=steam_url, inline=False
                )
                rejection_embed.add_field(
                    name="‚è∞ Rust (—á–∞—Å–æ–≤)", value=rust_hours, inline=True
                )
                rejection_embed.add_field(
                    name="–û—Ç–∫—É–¥–∞ —É–∑–Ω–∞–ª–∏", value=how_found, inline=True
                )

                # –í—ã–≤–æ–¥–∏–º —Ç–µ–∫—É—â–∏–π –Ω–∏–∫
                rejection_embed.add_field(
                    name="–¢–µ–∫—É—â–∏–π –Ω–∏–∫", value=current_nick, inline=False
                )

                # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä–∫–∏ –ü–û–°–õ–ï –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è
                recheck_view = RecheckApplicationView(applicant.id, steam_url)
                await channel.send(
                    "üëÜ **–ü–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—Å–µ—Ö –∑–∞–º–µ—á–∞–Ω–∏–π –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:**",
                    view=recheck_view,
                )

        except Exception as e:
            self.logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ –∑–∞—è–≤–∫–∏: {e}")
            await channel.send(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–π –∑–∞—è–≤–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
                ephemeral=True,
            )

    @app_commands.command(
        name="auto_fix", description="–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –Ω–∏–∫–Ω–µ–π–º"
    )
    @app_commands.describe(member="–£—á–∞—Å—Ç–Ω–∏–∫ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∏–∫–Ω–µ–π–º–∞")
    async def auto_fix_command(
        self, interaction: discord.Interaction, member: discord.Member
    ):
        """–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∏–∫–Ω–µ–π–º–∞ —É—á–∞—Å—Ç–Ω–∏–∫–∞"""
        await interaction.response.defer()

        try:
            # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
            original_nickname = member.display_name
            fixed_nickname, fixes_applied = auto_fix_nickname(original_nickname)

            if fixed_nickname != original_nickname:
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º embed —Å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
                fix_embed = discord.Embed(
                    title="üîß –ü—Ä–µ–¥–ª–∞–≥–∞–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∏–∫–Ω–µ–π–º–∞",
                    description=f"–¢–µ–∫—É—â–∏–π –Ω–∏–∫–Ω–µ–π–º: **{original_nickname}**\n–ù–æ–≤—ã–π –Ω–∏–∫–Ω–µ–π–º: **{fixed_nickname}**",
                    color=0xFF9900,
                )

                fix_embed.add_field(
                    name="üìù –ü—Ä–∏–º–µ–Ω—ë–Ω–Ω—ã–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:",
                    value="\n".join([f"‚Ä¢ {fix}" for fix in fixes_applied]),
                    inline=False,
                )

                # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∏–ª–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
                fix_view = AutoFixConfirmationView(
                    member.id, original_nickname, fixed_nickname, fixes_applied
                )
                fix_message = await interaction.followup.send(
                    embed=fix_embed, view=fix_view
                )
                fix_view.message = fix_message

                self.logger.info(
                    f"–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–æ –∞–≤—Ç–æ–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∏–∫–Ω–µ–π–º–∞ –¥–ª—è {member.display_name}: {original_nickname} ‚Üí {fixed_nickname}"
                )

            else:
                await interaction.followup.send(
                    "‚úÖ –ù–∏–∫–Ω–µ–π–º –Ω–µ —Ç—Ä–µ–±—É–µ—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π.", ephemeral=True
                )

        except Exception as e:
            self.logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã /auto_fix: {e}")
            await interaction.followup.send(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
                ephemeral=True,
            )

    @app_commands.command(
        name="auto_fix", description="–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –Ω–∏–∫–Ω–µ–π–º"
    )
    @app_commands.describe(member="–£—á–∞—Å—Ç–Ω–∏–∫ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∏–∫–Ω–µ–π–º–∞")
    async def auto_fix_command(
        self, interaction: discord.Interaction, member: discord.Member
    ):
        """–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∏–∫–Ω–µ–π–º–∞ —É—á–∞—Å—Ç–Ω–∏–∫–∞"""
        await interaction.response.defer()

        try:
            # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
            original_nickname = member.display_name
            fixed_nickname, fixes_applied = auto_fix_nickname(original_nickname)

            if fixed_nickname != original_nickname:
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º embed —Å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
                fix_embed = discord.Embed(
                    title="üîß –ü—Ä–µ–¥–ª–∞–≥–∞–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∏–∫–Ω–µ–π–º–∞",
                    description=f"–¢–µ–∫—É—â–∏–π –Ω–∏–∫–Ω–µ–π–º: **{original_nickname}**\n–ù–æ–≤—ã–π –Ω–∏–∫–Ω–µ–π–º: **{fixed_nickname}**",
                    color=0xFF9900,
                )

                fix_embed.add_field(
                    name="üìù –ü—Ä–∏–º–µ–Ω—ë–Ω–Ω—ã–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:",
                    value="\n".join([f"‚Ä¢ {fix}" for fix in fixes_applied]),
                    inline=False,
                )

                # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∏–ª–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
                fix_view = AutoFixConfirmationView(
                    member.id, original_nickname, fixed_nickname, fixes_applied
                )
                fix_message = await interaction.followup.send(
                    embed=fix_embed, view=fix_view
                )
                fix_view.message = fix_message

                self.logger.info(
                    f"–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–æ –∞–≤—Ç–æ–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∏–∫–Ω–µ–π–º–∞ –¥–ª—è {member.display_name}: {original_nickname} ‚Üí {fixed_nickname}"
                )

            else:
                await interaction.followup.send(
                    "‚úÖ –ù–∏–∫–Ω–µ–π–º –Ω–µ —Ç—Ä–µ–±—É–µ—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π.", ephemeral=True
                )

        except Exception as e:
            self.logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã /auto_fix: {e}")
            await interaction.followup.send(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
                ephemeral=True,
            )


class ConfirmApprovalView(discord.ui.View):
    def __init__(self, applicant: discord.Member, moderator: discord.Member):
        super().__init__(timeout=300)
        self.applicant = applicant
        self.moderator = moderator

    async def interaction_check(self, interaction: discord.Interaction) -> bool:
        """–ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–æ–ª—å–∫–æ –∞–≤—Ç–æ—Ä –º–æ–∂–µ—Ç –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å –∫–Ω–æ–ø–∫–∞–º–∏"""
        if interaction.user.id != self.moderator.id:
            try:
                await interaction.response.send_message(
                    "‚ùå –¢–æ–ª—å–∫–æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä, –æ–¥–æ–±—Ä–∏–≤—à–∏–π –∑–∞—è–≤–∫—É, –º–æ–∂–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è.",
                    ephemeral=True,
                )
            except discord.errors.NotFound:
                logger.warning(
                    f"‚ö†Ô∏è Interaction –∏—Å—Ç–µ–∫ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø—Ä–∞–≤ –¥–ª—è {interaction.user.display_name}"
                )
            return False
        return True

    @discord.ui.button(label="‚úÖ –î–∞, –æ–¥–æ–±—Ä–∏—Ç—å", style=discord.ButtonStyle.success)
    async def confirm_approval(
        self, interaction: discord.Interaction, button: discord.ui.Button
    ):
        """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–¥–æ–±—Ä–µ–Ω–∏—è –∑–∞—è–≤–∫–∏"""
        try:
            await interaction.response.defer()

            # –ü–æ–ª—É—á–∞–µ–º —Ä–æ–ª–∏
            novichok_role = discord.utils.get(
                interaction.guild.roles, id=config.NOVICHOK_ROLE_ID
            )
            prokhozhy_role = discord.utils.get(
                interaction.guild.roles, id=config.PROKHOZHY_ROLE_ID
            )

            if not novichok_role:
                await interaction.followup.send(
                    "‚ùå –†–æ–ª—å '–ù–æ–≤–∏—á–æ–∫' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.", ephemeral=True
                )
                return

            self.logger.info(
                f"üé≠ –ù–∞—á–∏–Ω–∞–µ–º –≤—ã–¥–∞—á—É —Ä–æ–ª–µ–π –¥–ª—è {self.applicant.display_name}"
            )
            self.logger.info(
                f"üîç –¢–µ–∫—É—â–∏–µ —Ä–æ–ª–∏: {[role.name for role in self.applicant.roles]}"
            )

            # –°–Ω–∞—á–∞–ª–∞ —É–±–∏—Ä–∞–µ–º —Ä–æ–ª—å –ü—Ä–æ—Ö–æ–∂–∏–π –µ—Å–ª–∏ –µ—Å—Ç—å
            if prokhozhy_role and prokhozhy_role in self.applicant.roles:
                await self.applicant.remove_roles(
                    prokhozhy_role, reason="–ó–∞–º–µ–Ω–∞ –Ω–∞ —Ä–æ–ª—å –ù–æ–≤–∏—á–æ–∫"
                )
                self.logger.info(
                    f"‚ùå –£–±—Ä–∞–Ω–∞ —Ä–æ–ª—å '{prokhozhy_role.name}' —É {self.applicant.display_name}"
                )

            # –ó–∞—Ç–µ–º –≤—ã–¥–∞–µ–º —Ä–æ–ª—å –ù–æ–≤–∏—á–æ–∫
            if novichok_role not in self.applicant.roles:
                await self.applicant.add_roles(
                    novichok_role,
                    reason=f"–ó–∞—è–≤–∫–∞ –æ–¥–æ–±—Ä–µ–Ω–∞ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º {interaction.user.display_name}",
                )
                self.logger.info(
                    f"‚úÖ –í—ã–¥–∞–Ω–∞ —Ä–æ–ª—å '{novichok_role.name}' –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {self.applicant.display_name}"
                )
            else:
                self.logger.info(
                    f"‚ÑπÔ∏è –†–æ–ª—å '{novichok_role.name}' —É–∂–µ –µ—Å—Ç—å —É {self.applicant.display_name}"
                )

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            await self.applicant.reload()  # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            updated_roles = [role.name for role in self.applicant.roles]
            self.logger.info(f"üîç –†–æ–ª–∏ –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è: {updated_roles}")

            # –§–∏–∫—Å–∏—Ä—É–µ–º –Ω–∏–∫–Ω–µ–π–º
            try:
                current_nick = self.applicant.display_name
                await self.applicant.edit(
                    nick=current_nick,
                    reason=f"–§–∏–∫—Å–∞—Ü–∏—è –Ω–∏–∫–Ω–µ–π–º–∞ –ø–æ—Å–ª–µ –æ–¥–æ–±—Ä–µ–Ω–∏—è –∑–∞—è–≤–∫–∏",
                )
                self.logger.info(
                    f"‚úÖ –ù–∏–∫–Ω–µ–π–º '{current_nick}' –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω –¥–ª—è {self.applicant.display_name}"
                )
            except discord.Forbidden:
                self.logger.warning(
                    f"‚ö†Ô∏è –ù–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —Ñ–∏–∫—Å–∞—Ü–∏–∏ –Ω–∏–∫–Ω–µ–π–º–∞ —É {self.applicant.display_name}"
                )
            except Exception as e:
                self.logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Ñ–∏–∫—Å–∞—Ü–∏–∏ –Ω–∏–Ω–µ–π–º–∞: {e}")

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–¥–æ–±—Ä–µ–Ω–∏—è
            approval_embed = discord.Embed(
                title="‚úÖ –ó–∞—è–≤–∫–∞ –æ–¥–æ–±—Ä–µ–Ω–∞",
                description=f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å {self.applicant.mention} –≤ –Ω–∞—à—É –î–µ—Ä–µ–≤–Ω—é! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ–¥–æ–±—Ä–µ–Ω–∞ –∏ –í—ã —Ç–µ–ø–µ—Ä—å –∫–∞–∫ <@&{novichok_role.id}> –º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å –ø—Ä–æ –≤–∞–π–ø—ã –î–µ—Ä–µ–≤–Ω–∏ –≤ —Ä–∞–∑–¥–µ–ª–µ <#1186254344820113409> –∏ —Å–æ–∑–¥–∞—Ç—å <#1264874500693037197>.",
                color=0x00FF00,
                timestamp=datetime.now(timezone.utc),
            )
            approval_embed.add_field(
                name="üë§ –ù–æ–≤—ã–π —É—á–∞—Å—Ç–Ω–∏–∫",
                value=f"{self.applicant.display_name}\n{self.applicant.mention}",
                inline=True,
            )
            approval_embed.add_field(
                name="üëÆ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä", value=self.moderator.mention, inline=True
            )
            approval_embed.add_field(
                name="üé≠ –†–æ–ª–∏ –∏–∑–º–µ–Ω–µ–Ω—ã",
                value=f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞: {novichok_role.name}"
                + (
                    f"\n‚ùå –£–±—Ä–∞–Ω–∞: {prokhozhy_role.name}"
                    if prokhozhy_role
                    and prokhozhy_role.name in [r.name for r in self.applicant.roles]
                    else ""
                ),
                inline=False,
            )

            await interaction.followup.send(embed=approval_embed)

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –ª–∏—á–Ω—ã–µ –¥–µ–ª–∞
            personal_channel = interaction.guild.get_channel(config.PERSONAL_CHANNEL_ID)
            if personal_channel:
                # –ü–æ–ª—É—á–∞–µ–º Steam URL –∏–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç: –∫—ç—à > –ë–î > –ø–æ–∏—Å–∫)
                steam_url = "–ù–µ —É–∫–∞–∑–∞–Ω–æ"
                hours_in_rust = "–ù–µ —É–∫–∞–∑–∞–Ω–æ"

                try:
                    # 1. –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –∏–∑ –∫—ç—à–∞ Steam
                    from handlers.tickets import steam_cache
                    cache_key = f"{interaction.channel.id}_{self.applicant.id}"
                    cached_data = steam_cache.get(cache_key)
                    if cached_data and isinstance(cached_data, dict):
                        if cached_data.get('steam_url'):
                            steam_url = cached_data['steam_url']
                            logger.info(f"üîç Steam URL –ø–æ–ª—É—á–µ–Ω –∏–∑ –∫—ç—à–∞: {steam_url}")
                except Exception as e:
                    logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–∑ –∫—ç—à–∞: {e}")

                # 2. –ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∫—ç—à–µ, –∏—â–µ–º –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
                if steam_url == "–ù–µ —É–∫–∞–∑–∞–Ω–æ":
                    try:
                        from handlers.tickets import get_steam_url_from_db
                        saved_steam_url = await get_steam_url_from_db(self.applicant.id)
                        if saved_steam_url:
                            steam_url = saved_steam_url
                            logger.info(f"üîç Steam URL –ø–æ–ª—É—á–µ–Ω –∏–∑ –ë–î: {steam_url}")
                    except Exception as e:
                        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–∑ –ë–î: {e}")

                # 3. –ü–æ—Å–ª–µ–¥–Ω–∏–π —à–∞–Ω—Å - –∏—â–µ–º –≤ –∏—Å—Ç–æ—Ä–∏–∏ –∫–∞–Ω–∞–ª–∞ (—É—Å–∫–æ—Ä–µ–Ω–Ω—ã–π –ø–æ–∏—Å–∫)
                if steam_url == "–ù–µ —É–∫–∞–∑–∞–Ω–æ":
                    try:
                        async for message in interaction.channel.history(limit=30):
                            if message.embeds:
                                for embed in message.embeds:
                                    if embed.fields:
                                        for field in embed.fields:
                                            # –ò—â–µ–º Steam-–ø—Ä–æ—Ñ–∏–ª—å
                                            if field.name and "steam" in field.name.lower():
                                                if field.value and "steamcommunity.com" in field.value:
                                                    # –ò–∑–≤–ª–µ–∫–∞–µ–º URL —Å –ø–æ–º–æ—â—å—é —Ä–µ–≥—É–ª—è—Ä–Ω–æ–≥–æ –≤—ã—Ä–∞–∂–µ–Ω–∏—è
                                                    import re
                                                    urls = re.findall(r'https://steamcommunity\.com/[^\s\)]+', field.value)
                                                    if urls:
                                                        steam_url = urls[0]
                                                        logger.info(f"üîç Steam URL –Ω–∞–π–¥–µ–Ω –≤ –∏—Å—Ç–æ—Ä–∏–∏: {steam_url}")
                                                        break

                                            # –ò—â–µ–º —á–∞—Å—ã –≤ Rust
                                            if field.name and ("—á–∞—Å—ã" in field.name.lower() or "rust" in field.name.lower()):
                                                if field.value and field.value.strip() not in ["–ù–µ —É–∫–∞–∑–∞–Ω–æ", "0", ""]:
                                                    hours_in_rust = field.value.strip()
                                                    logger.info(f"üéÆ –ß–∞—Å—ã Rust –Ω–∞–π–¥–µ–Ω—ã –≤ –∏—Å—Ç–æ—Ä–∏–∏: {hours_in_rust}")
                            if steam_url != "–ù–µ —É–∫–∞–∑–∞–Ω–æ":
                                break
                    except Exception as e:
                        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –≤ –∏—Å—Ç–æ—Ä–∏–∏: {e}")

                logger.info(f"üîç –ò—Ç–æ–≥–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—á–µ—Ç–∞ - Steam URL: {steam_url}, –ß–∞—Å—ã: {hours_in_rust}")

                # –°–æ–∑–¥–∞–µ–º –∫—Ä–∞—Å–∏–≤—ã–π embed –æ—Ç—á–µ—Ç –∫–∞–∫ –≤ cogs/roles.py
                personal_embed = discord.Embed(
                    title="üìù –ù–æ–≤—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –ø—Ä–∏–Ω—è—Ç –≤ –î–µ—Ä–µ–≤–Ω—é",
                    color=0x00FF00,
                    timestamp=datetime.now(timezone.utc),
                )

                personal_embed.add_field(
                    name="üë§ –ò–≥—Ä–æ–∫", value=f"{self.applicant.display_name}", inline=True
                )

                personal_embed.add_field(
                    name="üëÆ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä", value=f"@{self.moderator.display_name}", inline=True
                )

                personal_embed.add_field(
                    name="üìã –ú–µ—Ç–æ–¥ –ø—Ä–∏–Ω—è—Ç–∏—è", value="–¢–∏–∫–µ—Ç-—Å–∏—Å—Ç–µ–º–∞", inline=True
                )

                personal_embed.add_field(
                    name="üë§ –õ–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ",
                    value=f"**Discord:** {self.applicant.display_name}\n**ID:** {self.applicant.id}\n**–ê–∫–∫–∞—É–Ω—Ç —Å–æ–∑–¥–∞–Ω:** {self.applicant.created_at.strftime('%d.%m.%Y %H:%M')}",
                    inline=False,
                )

                personal_embed.add_field(
                    name="üîó Steam –¥–∞–Ω–Ω—ã–µ",
                    value=f"**Steam URL:** {steam_url}\n**–ß–∞—Å—ã –≤ Rust:** {hours_in_rust}",
                    inline=False,
                )

                personal_embed.add_field(
                    name="üìã –î–µ—Ç–∞–ª–∏ –ø—Ä–∏–Ω—è—Ç–∏—è",
                    value=f"**–î–∞—Ç–∞ –ø—Ä–∏–Ω—è—Ç–∏—è:** {datetime.now().strftime('%d.%m.%Y %H:%M')}\n**–†–æ–ª—å –≤—ã–¥–∞–Ω–∞:** @–ù–æ–≤–∏—á–æ–∫\n**–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ**\n–ó–∞—è–≤–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ ‚Ä¢ –¢–∏–∫–µ—Ç: {interaction.channel.name}‚Ä¢{datetime.now().strftime('%d.%m.%Y %H:%M')}",
                    inline=False,
                )

                personal_embed.set_footer(
                    text=f"–ü—Ä–∏–Ω—è—Ç —á–µ—Ä–µ–∑ —Ç–∏–∫–µ—Ç-—Å–∏—Å—Ç–µ–º—É –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º {self.moderator.display_name}"
                )
                personal_embed.set_thumbnail(url=self.applicant.display_avatar.url)

                await personal_channel.send(embed=personal_embed)

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—Å–∫–∏–π –∫–∞–Ω–∞–ª
            mod_channel = mod_channel = interaction.guild.get_channel(config.MOD_CHANNEL_ID)
            if mod_channel:
                mod_embed = discord.Embed(
                    title="‚úÖ –ó–∞—è–≤–∫–∞ –æ–¥–æ–±—Ä–µ–Ω–∞",
                    description=f"**–ò–≥—Ä–æ–∫:** {self.applicant.mention}\n**–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä:** {self.moderator.mention}",
                    color=0x00FF00,
                    timestamp=datetime.now(timezone.utc),
                )
                await mod_channel.send(embed=mod_embed)

            self.logger.info(
                f"‚úÖ –ó–∞—è–≤–∫–∞ {self.applicant.display_name} –æ–¥–æ–±—Ä–µ–Ω–∞ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º {self.moderator.display_name}"
            )

        except Exception as e:
            self.logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ–¥–æ–±—Ä–µ–Ω–∏—è: {e}")
            await interaction.followup.send(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–¥–æ–±—Ä–µ–Ω–∏–∏ –∑–∞—è–≤–∫–∏.", ephemeral=True
            )

    @discord.ui.button(
        label="‚úÖ –û–¥–æ–±—Ä–∏—Ç—å –∑–∞—è–≤–∫—É",
        style=discord.ButtonStyle.success,
        custom_id="approve_novichok",
        emoji="‚úÖ",
    )
    async def approve_application(
        self, interaction: discord.Interaction, button: discord.ui.Button
    ):
        """–û–¥–æ–±—Ä–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏"""
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞
            user_roles = [role.name for role in interaction.user.roles]
            allowed_roles = ["–ñ–∏—Ç–µ–ª—å", "–ì—Ä–∞–∂–¥–∞–Ω–∏–Ω", "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"]
            if not any(role in user_roles for role in allowed_roles):
                await interaction.response.send_message(
                    "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –ø—Ä–∏–Ω—è—Ç–∏—è –∑–∞—è–≤–æ–∫.", ephemeral=True
                )
                return

            applicant = interaction.guild.get_member(self.user_id)
            if not applicant:
                await interaction.response.send_message(
                    "‚ùå –ó–∞—è–≤–∏—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.", ephemeral=True
                )
                return
            await interaction.response.defer()

            # –ü–æ–ª—É—á–∞–µ–º —Ä–æ–ª–∏
            novichok_role = discord.utils.get(
                interaction.guild.roles, id=config.NOVICHOK_ROLE_ID
            )
            prokhozhy_role = discord.utils.get(
                interaction.guild.roles, id=config.PROKHOZHY_ROLE_ID
            )

            if not novichok_role:
                await interaction.response.send_message(
                    "‚ùå –†–æ–ª—å '–ù–æ–≤–∏—á–æ–∫' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.", ephemeral=True
                )
                return

            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–¥–æ–±—Ä–µ–Ω–∏—è
            confirm_embed = discord.Embed(
                title="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –æ–¥–æ–±—Ä–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏",
                description=f"–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ–¥–æ–±—Ä–∏—Ç—å –∑–∞—è–≤–∫—É –∏–≥—Ä–æ–∫–∞ {applicant.mention}?",
                color=0x00FF00,
            )
            confirm_embed.add_field(
                name="üë§ –ò–≥—Ä–æ–∫",
                value=f"{applicant.display_name}\n{applicant.mention}",
                inline=True,
            )

            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞–∫–∏–µ —Ä–æ–ª–∏ –±—É–¥—É—Ç –∏–∑–º–µ–Ω–µ–Ω—ã
            role_changes = []
            if prokhozhy_role in applicant.roles:
                role_changes.append(f"‚ùå –£–±—Ä–∞—Ç—å: {prokhozhy_role.name}")
            if novichok_role:
                role_changes.append(f"‚úÖ –î–æ–±–∞–≤–∏—Ç—å: {novichok_role.name}")

            if role_changes:
                confirm_embed.add_field(
                    name="üé≠ –ò–∑–º–µ–Ω–µ–Ω–∏—è —Ä–æ–ª–µ–π",
                    value="\n".join(role_changes),
                    inline=False,
                )

            # –°–æ–∑–¥–∞–µ–º view —Å –∫–Ω–æ–ø–∫–æ–π –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
            confirm_view = ConfirmApprovalView(applicant, interaction.user)
            await interaction.followup.send(
                embed=confirm_embed, view=confirm_view, ephemeral=True
            )

        except Exception as e:
            self.logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–¥–æ–±—Ä–µ–Ω–∏–∏ –∑–∞—è–≤–∫–∏: {e}")
            await interaction.response.send_message(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–¥–æ–±—Ä–µ–Ω–∏–∏ –∑–∞—è–≤–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
                ephemeral=True,
            )


class ApplicationReviewView(discord.ui.View):
    def __init__(self, user_id: int, is_approved: bool = False):
        super().__init__(timeout=3600)  # 1 —á–∞—Å
        self.user_id = user_id
        self.is_approved = is_approved

    async def interaction_check(self, interaction: discord.Interaction) -> bool:
        """–ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–æ–ª—å–∫–æ –∞–≤—Ç–æ—Ä –º–æ–∂–µ—Ç –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å –∫–Ω–æ–ø–∫–∞–º–∏"""
        if interaction.user.id != self.user_id:
            try:
                await interaction.response.send_message(
                    "‚ùå –¢–æ–ª—å–∫–æ –∞–≤—Ç–æ—Ä –∑–∞—è–≤–∫–∏ –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–∏ –∫–Ω–æ–ø–∫–∏.",
                    ephemeral=True,
                )
            except discord.errors.NotFound:
                pass
            return False
        return True

    @discord.ui.button(
        label="üîÑ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–∞—è–≤–∫—É –µ—â—ë —Ä–∞–∑", style=discord.ButtonStyle.primary
    )
    async def recheck_application(
        self, interaction: discord.Interaction, button: discord.ui.Button
    ):
        """–ö–Ω–æ–ø–∫–∞ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞—è–≤–∫–∏"""
        try:
            await interaction.response.defer()

            logger.info(
                f"üîÑ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {interaction.user.display_name} –∑–∞–ø—Ä–æ—Å–∏–ª –ø–æ–≤—Ç–æ—Ä–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –∑–∞—è–≤–∫–∏"
            )

            await interaction.followup.send(
                "üîç **–ù–∞—á–∏–Ω–∞—é –ø–æ–≤—Ç–æ—Ä–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –∑–∞—è–≤–∫–∏...**\n\n"
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –ø–æ–∫–∞ —è –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä—é –≤—Å–µ –¥–∞–Ω–Ω—ã–µ.",
                ephemeral=True,
            )

            # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–ª–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –∑–∞—è–≤–∫–∏
            from handlers.novichok import process_application

            await process_application(interaction.user, interaction.channel)

        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–µ –∑–∞—è–≤–∫–∏: {e}")
            await interaction.followup.send(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–µ. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏.",
                ephemeral=True,
            )

    @discord.ui.button(
        label="üîß –ò—Å–ø—Ä–∞–≤–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏", style=discord.ButtonStyle.secondary
    )
    async def auto_fix_button(
        self, interaction: discord.Interaction, button: discord.ui.Button
    ):
        """–ö–Ω–æ–ø–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∏–∫–Ω–µ–π–º–∞"""
        try:
            await interaction.response.defer()

            # –õ–æ–≥–∏–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
            current_nickname = interaction.user.display_name

            # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
            fixes_applied = []
            fixed_nickname = current_nickname

            # 1. –£–±–∏—Ä–∞–µ–º –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–µ —Å–∏–º–≤–æ–ª—ã
            if re.search(r"[^a-zA-Z0-9–∞-—è—ë–ê-–Ø–Å_\-\s]", fixed_nickname):
                fixed_nickname = re.sub(
                    r"[^a-zA-Z0-9–∞-—è—ë–ê-–Ø–Å_\-\s]", "", fixed_nickname
                )
                fixes_applied.append("–£–¥–∞–ª–µ–Ω—ã –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–µ —Å–∏–º–≤–æ–ª—ã")

            # 2. –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã
            if "  " in fixed_nickname:
                fixed_nickname = re.sub(r"\s+", " ", fixed_nickname).strip()
                fixes_applied.append("–£–±—Ä–∞–Ω—ã –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã")

            # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏–Ω—É (–º–∏–Ω–∏–º—É–º 3 —Å–∏–º–≤–æ–ª–∞)
            if len(fixed_nickname) > 32:
                fixed_nickname = fixed_nickname[:32]
                fixes_applied.append("–û–±—Ä–µ–∑–∞–Ω –¥–æ 32 —Å–∏–º–≤–æ–ª–æ–≤")

            if len(fixed_nickname) < 3:
                # –ï—Å–ª–∏ —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π, –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç—å
                if len(current_nickname) > 0:
                    fixed_nickname = current_nickname[:1] + "Player"
                else:
                    fixed_nickname = "Player" + str(random.randint(100, 999))
                fixes_applied.append(
                    "–î–æ–±–∞–≤–ª–µ–Ω—ã —Å–∏–º–≤–æ–ª—ã –¥–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π –¥–ª–∏–Ω—ã (3 —Å–∏–º–≤–æ–ª–∞)"
                )

            if not fixes_applied:
                await interaction.followup.send(
                    "‚úÖ **–í–∞—à –Ω–∏–∫–Ω–µ–π–º —É–∂–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º!**\n"
                    "–í–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –¥—Ä—É–≥–æ–º (–Ω–∞–ø—Ä–∏–º–µ—Ä, –≤ Steam –ø—Ä–æ—Ñ–∏–ª–µ).",
                    ephemeral=True,
                )
                return

            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ view –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
            confirm_view = AutoFixConfirmationView(
                interaction.user.id, current_nickname, fixed_nickname, fixes_applied
            )

            embed = discord.Embed(title="üîß –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è", color=0x3498DB)
            embed.add_field(
                name="üìù –¢–µ–∫—É—â–∏–π –Ω–∏–∫–Ω–µ–π–º", value=f"`{current_nickname}`", inline=False
            )
            embed.add_field(
                name="‚ú® –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –Ω–∏–∫–Ω–µ–π–º",
                value=f"`{fixed_nickname}`",
                inline=False,
            )
            embed.add_field(
                name="üîß –ü—Ä–∏–º–µ–Ω—ë–Ω–Ω—ã–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è",
                value="\n".join([f"‚Ä¢ {fix}" for fix in fixes_applied]),
                inline=False,
            )
            embed.add_field(
                name="‚ÑπÔ∏è –ß—Ç–æ –¥–∞–ª—å—à–µ?",
                value="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–ª–∏ –æ—Ç–º–µ–Ω–∏—Ç–µ –∏ –∏—Å–ø—Ä–∞–≤—å—Ç–µ –Ω–∏–∫–Ω–µ–π–º –≤—Ä—É—á–Ω—É—é.",
                inline=False,
            )

            await interaction.followup.send(
                embed=embed, view=confirm_view, ephemeral=True
            )

        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ auto_fix_button: {e}")
            await interaction.followup.send(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏.", ephemeral=True
            )

    @discord.ui.button(
        label="‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É", style=discord.ButtonStyle.danger
    )
    async def reject_application_button(
        self, interaction: discord.Interaction, button: discord.ui.Button
    ):
        """–ö–Ω–æ–ø–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –∑–∞—è–≤–∫–∏"""
        # –û—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –≤–≤–æ–¥–∞ –ø—Ä–∏—á–∏–Ω—ã –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è
        await interaction.response.send_modal(
            RejectReasonModal(self.user_id, "")
        )

    @discord.ui.button(
        label="‚úÖ –û–¥–æ–±—Ä–∏—Ç—å –∑–∞—è–≤–∫—É",
        style=discord.ButtonStyle.success,
        custom_id="approve_application_button",
    )
    async def approve_application_button(
        self, interaction: discord.Interaction, button: discord.ui.Button
    ):
        """–ö–Ω–æ–ø–∫–∞ –æ–¥–æ–±—Ä–µ–Ω–∏—è –∑–∞—è–≤–∫–∏"""
        try:
            # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            applicant = interaction.guild.get_member(self.user_id)
            if not applicant:
                await interaction.response.send_message(
                    "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.", ephemeral=True
                )
                return

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞
            user_roles = [role.name for role in interaction.user.roles]
            admin_roles = ["–ñ–∏—Ç–µ–ª—å", "–ì—Ä–∞–∂–¥–∞–Ω–∏–Ω", "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"]
            if not any(role in user_roles for role in admin_roles):
                await interaction.response.send_message(
                    "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –æ–¥–æ–±—Ä–µ–Ω–∏—è –∑–∞—è–≤–æ–∫.", ephemeral=True
                )
                return

            await interaction.response.defer()

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º embed —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º
            confirm_embed = discord.Embed(
                title="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–¥–æ–±—Ä–µ–Ω–∏—è –∑–∞—è–≤–∫–∏",
                description=f"–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ–¥–æ–±—Ä–∏—Ç—å –∑–∞—è–≤–∫—É –∏–≥—Ä–æ–∫–∞ {applicant.mention}?",
                color=0x00FF00,
            )
            confirm_embed.add_field(
                name="üë§ –ò–≥—Ä–æ–∫",
                value=f"{applicant.display_name}\n{applicant.mention}",
                inline=True,
            )

            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º, –∫–∞–∫–∏–µ —Ä–æ–ª–∏ –±—É–¥—É—Ç –∏–∑–º–µ–Ω–µ–Ω—ã
            novichok_role = discord.utils.get(
                interaction.guild.roles, id=config.NEWBIE_ROLE_ID
            )
            prokhozhy_role = discord.utils.get(
                interaction.guild.roles, id=config.GUEST_ROLE_ID
            )

            role_changes = []
            if prokhozhy_role and prokhozhy_role in applicant.roles:
                role_changes.append(f"‚ùå –£–±—Ä–∞—Ç—å: {prokhozhy_role.name}")
            if novichok_role:
                role_changes.append(f"‚úÖ –î–æ–±–∞–≤–∏—Ç—å: {novichok_role.name}")

            if role_changes:
                confirm_embed.add_field(
                    name="üé≠ –ò–∑–º–µ–Ω–µ–Ω–∏—è —Ä–æ–ª–µ–π",
                    value="\n".join(role_changes),
                    inline=False,
                )

            # –°–æ–∑–¥–∞–µ–º view —Å –∫–Ω–æ–ø–∫–æ–π –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
            confirm_view = ConfirmApprovalView(applicant, interaction.user)
            await interaction.followup.send(
                embed=confirm_embed, view=confirm_view, ephemeral=True
            )

        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–¥–æ–±—Ä–µ–Ω–∏–∏ –∑–∞—è–≤–∫–∏: {e}")
            await interaction.followup.send(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–¥–æ–±—Ä–µ–Ω–∏–∏ –∑–∞—è–≤–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
                ephemeral=True,
            )


class ErrorMessageView(discord.ui.View):
    def __init__(self, user_id: int):
        super().__init__(timeout=None)
        self.user_id = user_id
        self.message = None

    async def interaction_check(self, interaction: discord.Interaction) -> bool:
        """–ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–æ–ª—å–∫–æ –∞–≤—Ç–æ—Ä –º–æ–∂–µ—Ç –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å –∫–Ω–æ–ø–∫–∞–º–∏"""
        if interaction.user.id != self.user_id:
            try:
                await interaction.response.send_message(
                    "‚ùå –¢–æ–ª—å–∫–æ –∞–≤—Ç–æ—Ä –∑–∞—è–≤–∫–∏ –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–∏ –∫–Ω–æ–ø–∫–∏.",
                    ephemeral=True,
                )
            except discord.errors.NotFound:
                logger.warning(
                    f"‚ö†Ô∏è Interaction –∏—Å—Ç–µ–∫ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø—Ä–∞–≤ –¥–ª—è {interaction.user.display_name}"
                )
            return False
        return True

    @discord.ui.button(
        label="üîÑ –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â–µ —Ä–∞–∑",
        style=discord.ButtonStyle.primary,
        custom_id="retry_application",
    )
    async def retry_application(
        self, interaction: discord.Interaction, button: discord.ui.Button
    ):
        """–ö–Ω–æ–ø–∫–∞ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–∫–∏"""
        try:
            await interaction.response.defer()

            logger.info(
                f"üîÑ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {interaction.user.display_name} –∑–∞–ø—Ä–æ—Å–∏–ª –ø–æ–≤—Ç–æ—Ä–Ω—É—é –æ—Ç–ø—Ä–∞–≤–∫—É –∑–∞—è–≤–∫–∏"
            )

            await interaction.followup.send(
                "üîç **–ù–∞—á–∏–Ω–∞—é –ø–æ–≤—Ç–æ—Ä–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –∑–∞—è–≤–∫–∏...**\n\n"
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –ø–æ–∫–∞ —è –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä—é –≤—Å–µ –¥–∞–Ω–Ω—ã–µ.",
                ephemeral=True,
            )

            # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–ª–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –∑–∞—è–≤–∫–∏
            from handlers.novichok import process_application

            await process_application(interaction.user, interaction.channel)

        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–µ –∑–∞—è–≤–∫–∏: {e}")
            await interaction.followup.send(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–µ. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏.",
                ephemeral=True,
            )

    @discord.ui.button(
        label="üÜò –ü–æ–∑–≤–∞—Ç—å –î–µ—Ä–µ–≤–Ω—é –Ω–∞ –ø–æ–º–æ—â—å",
        style=discord.ButtonStyle.secondary,
        emoji="üÜò",
    )
    async def call_for_help(
        self, interaction: discord.Interaction, button: discord.ui.Button
    ):
        """–ü–æ–∑–≤–∞—Ç—å –Ω–∞ –ø–æ–º–æ—â—å"""
        try:
            await interaction.response.defer()

            # –ü–æ–ª—É—á–∞–µ–º –∞–≤—Ç–æ—Ä–∞ –∑–∞—è–≤–∫–∏
            author = interaction.guild.get_member(self.user_id)
            if not author:
                await interaction.edit_original_response(
                    content="‚ùå –ê–≤—Ç–æ—Ä –∑–∞—è–≤–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ."
                )
                return

            # –î–æ–±–∞–≤–ª—è–µ–º —Ä–æ–ª—å @–≥–æ—Å—Ç—å –∞–≤—Ç–æ—Ä—É –∑–∞—è–≤–∫–∏
            guest_role = interaction.guild.get_role(1208155640355229757)
            if guest_role and guest_role not in author.roles:
                await author.add_roles(guest_role, reason="–ó–∞–ø—Ä–æ—Å –ø–æ–º–æ—â–∏ —Å –∑–∞—è–≤–∫–æ–π")
                logger.info(
                    f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ —Ä–æ–ª—å @–≥–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {author.display_name}"
                )

            # –ü–∏–Ω–≥—É–µ–º —Ä–æ–ª–∏ –≤ —á–∞—Ç–µ
            ping_message = f"<@&1208155640355229757> <@&1176935405195636856> <@&945469407944118362> –ü—Ä–æ—Å—å–±–∞ –ø–æ–º–æ—á—å {author.mention} —Å –∑–∞—è–≤–∫–æ–π."

            await safe_send_message(interaction.channel, ping_message)
            await interaction.edit_original_response(
                content="‚úÖ –ü—Ä–∏–∑—ã–≤ –ø–æ–º–æ—â–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!"
            )

            logger.info(f"üÜò –ü—Ä–∏–∑—ã–≤ –ø–æ–º–æ—â–∏: {author.display_name}")

        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏–∑—ã–≤–∞ –ø–æ–º–æ—â–∏: {e}")
            try:
                await interaction.edit_original_response(
                    content="‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–∑—ã–≤–µ –ø–æ–º–æ—â–∏."
                )
            except:
                pass