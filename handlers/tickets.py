# Applying the changes to remove the "–≥–æ—Ç–æ–≤–æ" text from the embed and create a separate message with a button.
import discord
from discord.ext import commands
import logging
import asyncio
import traceback
from datetime import datetime, timezone
import time
import json
from typing import Optional
import re

# –õ–æ–∫–∞–ª—å–Ω—ã–π –∫—ç—à –¥–ª—è Steam URL (fallback –¥–ª—è replit DB)
local_steam_cache = {}

from cogs.ai import ask_groq
from config import config
from utils.discord_logger import log_error, discord_logger
from utils.logger import get_module_logger

logger = get_module_logger(__name__)
from handlers.novichok import (
    get_account_age_days,
    extract_steam_links,
    extract_steam_links_from_embed,
    check_steam_profile_and_nickname,
    extract_steam_id_from_url,
)
from utils.validators import is_nickname_format_valid, extract_discord_id
from handlers.novichok_actions import TicketActionView
from utils.rate_limiter import safe_send_message
from utils.ai_moderation import decide_nickname
from utils.misc import extract_real_name_from_discord_nick

logger = get_module_logger(__name__)

# –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤ –∑–∞—è–≤–æ–∫: channel_id -> user_id

def build_nick_reject_embed(member, full, reasons, fixed_full):
    """–°–æ–∑–¥–∞—ë—Ç embed –¥–ª—è –æ—Ç–∫–ª–æ–Ω—ë–Ω–Ω–æ–≥–æ –Ω–∏–∫–Ω–µ–π–º–∞"""
    e = discord.Embed(
        title="‚ùå –ù–∏–∫–Ω–µ–π–º –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ø—Ä–∞–≤–∏–ª–∞–º",
        description=f"–¢–µ–∫—É—â–∏–π: **{discord.utils.escape_markdown(full)}**",
        color=0xFF4D4F,
    )
    if reasons:
        e.add_field(name="–ü—Ä–∏—á–∏–Ω—ã", value="\n".join(f"‚Ä¢ {r}" for r in reasons), inline=False)
    if fixed_full:
        e.add_field(name="–ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ", value=f"`{fixed_full}`", inline=False)
        e.set_footer(text="–ù–∞–∂–º–∏—Ç–µ ¬´–ò—Å–ø—Ä–∞–≤—å –º–æ–π SteamNick | –ò–º—è¬ª, —á—Ç–æ–±—ã –ø—Ä–∏–º–µ–Ω–∏—Ç—å –∏ –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä–∏—Ç—å.")
    else:
        e.set_footer(text="–ò—Å–ø—Ä–∞–≤—å—Ç–µ –Ω–∏–∫ –≤—Ä—É—á–Ω—É—é –∏ –Ω–∞–∂–º–∏—Ç–µ ¬´–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–∞—è–≤–∫—É –µ—â—ë —Ä–∞–∑¬ª.")
    return e


def build_nick_ok_embed(full):
    """–°–æ–∑–¥–∞—ë—Ç embed –¥–ª—è –æ–¥–æ–±—Ä–µ–Ω–Ω–æ–≥–æ –Ω–∏–∫–Ω–µ–π–º–∞"""
    return discord.Embed(
        title="‚úÖ –ù–∏–∫–Ω–µ–π–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ø—Ä–∞–≤–∏–ª–∞–º",
        description=f"–¢–µ–∫—É—â–∏–π: **{discord.utils.escape_markdown(full)}**",
        color=0x52C41A,
    )


class NicknameMismatchModal(discord.ui.Modal):
    """–ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–µ—Å–æ–≤–ø–∞–¥–∞—é—â–∏—Ö –Ω–∏–∫–Ω–µ–π–º–æ–≤"""

    def __init__(self, user_id: int, steam_nick: str, real_name: str, source_message_id: int = None, channel_id: int = None):
        super().__init__(title="–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∏–∫–Ω–µ–π–º–∞", timeout=None)
        self.user_id = user_id
        self.steam_nick = steam_nick
        self.real_name = real_name
        self.source_message_id = source_message_id
        self.channel_id = channel_id

    nickname_input = discord.ui.TextInput(
        label="SteamNick | –ò–º—è",
        style=discord.TextStyle.short,
        max_length=32,
        placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: Terminator | –í–æ–ª–æ–¥—è",
        required=True
    )

    async def on_submit(self, interaction: discord.Interaction):
        new_nick = self.nickname_input.value.strip()

        try:
            await interaction.response.defer(ephemeral=False)

            member = interaction.guild.get_member(self.user_id)
            if not member:
                await interaction.followup.send("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.", ephemeral=True)
                return

            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ –Ω–∏–∫–∞
            if ' | ' not in new_nick:
                await interaction.followup.send(
                    "‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: `SteamNick | –ò–º—è`\n"
                    f"–ü—Ä–∏–º–µ—Ä: `{self.steam_nick} | {self.real_name}`",
                    ephemeral=True
                )
                return

            # –ü—Ä–∏–º–µ–Ω—è–µ–º –Ω–æ–≤—ã–π –Ω–∏–∫–Ω–µ–π–º
            old_nick = member.nick or member.display_name
            await member.edit(nick=new_nick, reason="–†—É—á–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∏–∫–Ω–µ–π–º–∞ –ø—Ä–∏ –ø–æ–¥–∞—á–µ –∑–∞—è–≤–∫–∏")

            # –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
            success_message = (
                f"‚úÖ **–ù–∏–∫–Ω–µ–π–º –∏–∑–º–µ–Ω—ë–Ω –≤—Ä—É—á–Ω—É—é!**\n\n"
                f"üîÑ **–ò–∑–º–µ–Ω–µ–Ω–∏—è:**\n"
                f"‚Ä¢ –ë—ã–ª–æ: `{old_nick}`\n"
                f"‚Ä¢ –°—Ç–∞–ª–æ: `{new_nick}`\n\n"
                f"üîÑ **–ü—Ä–æ–¥–æ–ª–∂–∞—é –æ–±—Ä–∞–±–æ—Ç–∫—É –∑–∞—è–≤–∫–∏...**"
            )

            # –û–±–Ω–æ–≤–ª—è–µ–º –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            channel = interaction.client.get_channel(self.channel_id or interaction.channel.id)
            if self.source_message_id and channel:
                try:
                    msg = await channel.fetch_message(self.source_message_id)
                    await msg.edit(content=success_message, view=None)
                except discord.NotFound:
                    await channel.send(success_message)
            else:
                await interaction.followup.send(success_message)

            # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –∑–∞—è–≤–∫–∏
            await asyncio.sleep(3)
            bot = interaction.client
            ticket_handler = bot.get_cog("TicketHandler")
            if ticket_handler and channel:
                await ticket_handler.analyze_and_respond_to_application(channel, member)

            logger.info(f"‚úÖ –ù–∏–∫–Ω–µ–π–º –∏–∑–º–µ–Ω—ë–Ω –≤—Ä—É—á–Ω—É—é: {old_nick} ‚Üí {new_nick}")

        except discord.HTTPException as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ Discord –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –Ω–∏–∫–Ω–µ–π–º–∞: {e}")
            if "Missing Permissions" in str(e) or "50013" in str(e):
                await interaction.followup.send(
                    "‚ùå –£ –±–æ—Ç–∞ –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∏–∫–Ω–µ–π–º–æ–≤. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∞–≤ –±–æ—Ç–∞.",
                    ephemeral=True
                )
            else:
                await interaction.followup.send("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –Ω–∏–∫–Ω–µ–π–º–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å —Ñ–æ—Ä–º–∞—Ç–∞.", ephemeral=True)
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ NicknameMismatchModal: {e}")
            await interaction.followup.send("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.", ephemeral=True)


class ManualNickFixModal(discord.ui.Modal):
    def __init__(self, user_id: int, source_message_id: int = None, channel_id: int = None):
        super().__init__(title="–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∏–∫–Ω–µ–π–º–∞ –≤—Ä—É—á–Ω—É—é", timeout=None)
        self.user_id = user_id
        self.source_message_id = source_message_id  # FIX: —Å–æ—Ö—Ä–∞–Ω—è–µ–º ID –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        self.channel_id = channel_id  # FIX: —Å–æ—Ö—Ä–∞–Ω—è–µ–º ID –∫–∞–Ω–∞–ª–∞

    nickname_input = discord.ui.TextInput(label="SteamNick | –ò–º—è", style=discord.TextStyle.short, max_length=32)

    async def on_submit(self, interaction: discord.Interaction):
        new_nick = self.nickname_input.value.strip()

        try:
            # FIX: prevent Unknown interaction (10062)
            await interaction.response.defer(ephemeral=False)

            member = interaction.guild.get_member(self.user_id)
            if not member:
                await interaction.followup.send(
                    "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.", ephemeral=True
                )
                return

            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª–∏–Ω—ã –Ω–∏–∫–∞
            if len(new_nick) > 32:
                await interaction.followup.send("–ù–∏–∫ –¥–ª–∏–Ω–Ω–µ–µ 32 —Å–∏–º–≤–æ–ª–æ–≤. –°–æ–∫—Ä–∞—Ç–∏—Ç–µ.", ephemeral=True)
                return

            # –ü—Ä–∏–º–µ–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
            old_nick = member.nick or member.display_name
            await member.edit(nick=new_nick, reason="–†—É—á–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∏–∫–∞ (modal)")
            logger.info(f"–†—É—á–Ω–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∏–∫–∞ –¥–ª—è {member.id}: {old_nick} -> {new_nick}")

            # –ü–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∏–∫–∞ —á–µ—Ä–µ–∑ AI
            nick_result = await decide_nickname(new_nick)
            if not nick_result.approve:
                public_reasons = nick_result.public_reasons or []
                fixed_suggestion = nick_result.fixed_full

                view = NicknameRecheckView(member.id, fixed_suggestion)
                nickname_embed = build_nick_reject_embed(
                    member, new_nick, public_reasons, fixed_suggestion
                )

                channel = interaction.client.get_channel(self.channel_id or interaction.channel.id)
                if not channel:
                    try:
                        channel = await interaction.client.fetch_channel(self.channel_id or interaction.channel.id)
                    except:
                        channel = interaction.channel

                if self.source_message_id:
                    try:
                        msg = await channel.fetch_message(self.source_message_id)
                        await msg.edit(embed=nickname_embed, view=view)
                    except discord.NotFound:
                        await channel.send(embed=nickname_embed, view=view)
                else:
                    await channel.send(embed=nickname_embed, view=view)

                await interaction.followup.send("–ù–∏–∫ –±—ã–ª –∏–∑–º–µ–Ω–µ–Ω, –Ω–æ –≤—Å—ë –µ—â—ë –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ø—Ä–∞–≤–∏–ª–∞–º.", ephemeral=True)
                return

            # –ï—Å–ª–∏ –Ω–∏–∫ –æ–¥–æ–±—Ä–µ–Ω AI - –ø–∏–Ω–≥—É–µ–º –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤ –¥–ª—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –æ–¥–æ–±—Ä–µ–Ω–∏—è
            success_embed = discord.Embed(
                title="‚úÖ –ù–∏–∫–Ω–µ–π–º –ø—Ä–æ–≤–µ—Ä–µ–Ω –∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ø—Ä–∞–≤–∏–ª–∞–º",
                description=f"–ù–∏–∫–Ω–µ–π–º **{new_nick}** —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—à–µ–ª –ø—Ä–æ–≤–µ—Ä–∫—É AI",
                color=0x00FF00,
                timestamp=datetime.now(timezone.utc),
            )

            success_embed.add_field(
                name="üîÑ –ò–∑–º–µ–Ω–µ–Ω–∏—è",
                value=f"**–ë—ã–ª–æ:** `{member.display_name}`\n**–°—Ç–∞–ª–æ:** `{new_nick}`",
                inline=False,
            )

            success_embed.add_field(
                name="üë®‚Äçüíº –¢—Ä–µ–±—É–µ—Ç—Å—è –æ–¥–æ–±—Ä–µ–Ω–∏–µ",
                value="<@&1208155641013821460> <@&1208155641013821461> –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∑–∞—è–≤–∫—É –∏ –ø—Ä–∏–º–∏—Ç–µ —Ä–µ—à–µ–Ω–∏–µ.",
                inline=False,
            )

            # –°–æ–∑–¥–∞–µ–º view –¥–ª—è –ø—Ä–∏–Ω—è—Ç–∏—è/–æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –∑–∞—è–≤–∫–∏
            from handlers.novichok_actions import TicketActionView
            approval_view = TicketActionView(member.id, "manual_fix")

            channel = interaction.client.get_channel(self.channel_id or interaction.channel.id)
            if not channel:
                try:
                    channel = await interaction.client.fetch_channel(self.channel_id or interaction.channel.id)
                except:
                    channel = interaction.channel

            if self.source_message_id:
                try:
                    msg = await channel.fetch_message(self.source_message_id)
                    await msg.edit(embed=success_embed, view=approval_view)
                except discord.NotFound:
                    await channel.send(embed=success_embed, view=approval_view)
            else:
                await channel.send(embed=success_embed, view=approval_view)

            await interaction.followup.send("–ù–∏–∫ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω –∏ –ø–µ—Ä–µ–¥–∞–Ω –Ω–∞ –æ–¥–æ–±—Ä–µ–Ω–∏–µ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º.", ephemeral=True)

        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ on_submit ManualNickFixModal: {e}")
            await interaction.followup.send(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –Ω–∏–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
                ephemeral=True,
            )


class NicknameRecheckView(discord.ui.View):
    def __init__(
        self,
        user_id: int = None,
        suggested_nick: Optional[str] = None,
        *,
        timeout: float | None = None
    ):
        super().__init__(timeout=None)
        self.user_id = user_id
        self.suggested_nick = suggested_nick

    @discord.ui.button(
        label="‚úÖ –ò—Å–ø—Ä–∞–≤—å –º–æ–π SteamNick | –ò–º—è",
        style=discord.ButtonStyle.success,
        custom_id="auto_fix_nickname_v2",
    )
    async def auto_fix_nickname(
        self, interaction: discord.Interaction, button: discord.ui.Button
    ):
        """–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∏–∫–∞"""
        try:
            member = interaction.guild.get_member(self.user_id)
            if not member:
                await interaction.response.send_message(
                    "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.", ephemeral=True
                )
                return

            if not self.suggested_nick:
                await interaction.response.send_message(
                    "‚ùå –ù–µ—Ç –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è –Ω–∏–∫–Ω–µ–π–º–∞.", ephemeral=True
                )
                return

            # FIX: –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ fixed_full
            await member.edit(
                nick=self.suggested_nick,
                reason="–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∏–∫–Ω–µ–π–º–∞ –ø–æ –∑–∞—è–≤–∫–µ",
            )

            # FIX: –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º embed "–ì–æ—Ç–æ–≤–æ. –ó–∞–ø—É—Å–∫–∞—é –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä–∫—É..."
            processing_embed = discord.Embed(
                title="‚úÖ –ù–∏–∫–Ω–µ–π–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω!",
                description=f"–í–∞—à –Ω–∏–∫–Ω–µ–π–º –∏–∑–º–µ–Ω—ë–Ω –Ω–∞: **{self.suggested_nick}**\n\nüîÑ –ó–∞–ø—É—Å–∫–∞—é –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä–∫—É...",
                color=0x00FF00,
                timestamp=datetime.now(timezone.utc),
            )
            await interaction.response.edit_message(embed=processing_embed, view=None)

            # FIX: –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø—É—Å–∫–∞–µ–º –ø–æ–≤—Ç–æ—Ä–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É
            await asyncio.sleep(2)  # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–∏–∫–Ω–µ–π–º–∞

            # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–≤—Ç–æ—Ä–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –∏ –µ—Å–ª–∏ OK, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –ø—Ä–∏–Ω—è—Ç—å/–æ—Ç–∫–∞–∑–∞—Ç—å
            await self.recheck_application_logic(interaction.channel, member)

        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∏–∫–∞: {e}")
            await interaction.response.send_message(f"–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∏–∫: {e}", ephemeral=True)

    @discord.ui.button(label="–Ø –∏—Å–ø—Ä–∞–≤–ª—é —Å–∞–º", style=discord.ButtonStyle.secondary, custom_id="nick_manual_fix_v2")
    async def manual_fix_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        """–†—É—á–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ modal"""
        # FIX: –ø–µ—Ä–µ–¥–∞—ë–º ID –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –∫–∞–Ω–∞–ª–∞
        modal = ManualNickFixModal(
            self.user_id,
            source_message_id=interaction.message.id,
            channel_id=interaction.channel.id
        )
        await interaction.response.send_modal(modal)

    # –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
    async def recheck_application_logic(self, channel, member):
        """–ü–æ–≤—Ç–æ—Ä–Ω–æ –∑–∞–ø—É—Å–∫–∞–µ—Ç –ª–æ–≥–∏–∫—É –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞—è–≤–∫–∏"""
        try:
            # –ò–º–∏—Ç–∏—Ä—É–µ–º –≤—ã–∑–æ–≤ analyze_and_respond_to_application
            # –í —Ä–µ–∞–ª—å–Ω–æ–º –∫–æ–¥–µ –≤–∞–º –º–æ–∂–µ—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å—Å—è –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∏–Ω—Å—Ç–∞–Ω—Å—É Cog
            # –î–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã, –∑–¥–µ—Å—å –º—ã –≤—ã–∑—ã–≤–∞–µ–º decide_nickname –Ω–∞–ø—Ä—è–º—É—é
            # FIX: await –≤—ã–∑–æ–≤ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∏–∫–Ω–µ–π–º–∞
            nick_result = await decide_nickname(member.display_name)
            if not nick_result.approve:  # FIX: –æ–±—Ä–∞—â–µ–Ω–∏–µ –∫–∞–∫ –∫ –∞—Ç—Ä–∏–±—É—Ç—É
                public_reasons = nick_result.public_reasons or []  # FIX: –æ–±—Ä–∞—â–µ–Ω–∏–µ –∫–∞–∫ –∫ –∞—Ç—Ä–∏–±—É—Ç—É
                fixed_suggestion = nick_result.fixed_full  # FIX: –æ–±—Ä–∞—â–µ–Ω–∏–µ –∫–∞–∫ –∫ –∞—Ç—Ä–∏–±—É—Ç—É

                # FIX: –∑–µ–ª—ë–Ω–∞—è –∫–Ω–æ–ø–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å fixed_full
                view = NicknameRecheckView(member.id, fixed_suggestion)
                nickname_embed = build_nick_reject_embed(
                    member, member.display_name, public_reasons, fixed_suggestion
                )
                await safe_send_message(
                    channel,
                    embed=nickname_embed,
                    view=view
                )
            else:
                # –ù–∏–∫ –æ–¥–æ–±—Ä–µ–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –ø—Ä–∏–Ω—è—Ç–∏—è/–æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è
                ok_embed = build_nick_ok_embed(member.display_name)
                # –ó–ê–ú–ï–ù–ò–¢–ï ApplicationDecisionView –Ω–∞ –≤–∞—à –∫–ª–∞—Å—Å View –¥–ª—è –ø—Ä–∏–Ω—è—Ç–∏—è/–æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è
                # –ù–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –∫–ª–∞—Å—Å TicketDecisionView, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –µ–≥–æ
                # –î–ª—è –ø—Ä–∏–º–µ—Ä–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º TicketActionView, –Ω–æ –≤–∞–º –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –∑–∞–º–µ–Ω–∏—Ç—å –µ–≥–æ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π
                from handlers.novichok_actions import TicketActionView
                accept_view = TicketActionView(member.id, "unknown") # <-- –ó–ê–ú–ï–ù–ò–¢–ï –ù–ê –í–ê–® –ö–õ–ê–°–° VIEW
                await safe_send_message(channel, embed=ok_embed, view=accept_view)

        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–µ –∑–∞—è–≤–∫–∏: {e}")
            await safe_send_message(
                channel,
                f"{member.mention} ‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–µ. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—É."
            )


class NicknameFixView(discord.ui.View):
    """View –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–µ—Å–æ–≤–ø–∞–¥–∞—é—â–∏—Ö –Ω–∏–∫–Ω–µ–π–º–æ–≤"""

    def __init__(self, user_id: int = None, original_nick: str = "", suggested_nick: str = "", steam_nick: str = ""):
        super().__init__(timeout=None)
        self.user_id = user_id or 0
        self.original_nick = original_nick
        self.suggested_nick = suggested_nick
        self.steam_nick = steam_nick

    @discord.ui.button(
        label="‚úÖ –ò—Å–ø—Ä–∞–≤–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏",
        style=discord.ButtonStyle.success,
        custom_id="auto_fix_steam_nick_v3",
    )
    async def auto_fix_nick(self, interaction: discord.Interaction, button: discord.ui.Button):
        """–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∏–∫–Ω–µ–π–º–∞"""
        try:
            member = interaction.guild.get_member(self.user_id)
            if not member:
                await interaction.response.send_message("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.", ephemeral=True)
                return

            # –ü—Ä–∏–º–µ–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –Ω–∏–∫–Ω–µ–π–º
            await member.edit(
                nick=self.suggested_nick,
                reason="–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∏–∫–Ω–µ–π–º–∞ –ø–æ Steam –ø—Ä–æ—Ñ–∏–ª—é"
            )

            # –°–æ–∑–¥–∞–µ–º embed –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
            success_embed = discord.Embed(
                title="‚úÖ –ù–∏–∫–Ω–µ–π–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω",
                description=f"–ù–∏–∫ –∏–≥—Ä–æ–∫–∞ **{self.original_nick}** –∏—Å–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ **{self.suggested_nick}**",
                color=0x00FF00,
                timestamp=datetime.now(timezone.utc),
            )

            success_embed.add_field(
                name="üîÑ –ò–∑–º–µ–Ω–µ–Ω–∏—è",
                value=f"**–ë—ã–ª–æ:** `{self.original_nick}`\n**–°—Ç–∞–ª–æ:** `{self.suggested_nick}`",
                inline=False,
            )

            await interaction.response.edit_message(embed=success_embed, view=None)

            # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–≤—Ç–æ—Ä–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –∑–∞—è–≤–∫–∏
            await asyncio.sleep(2)
            await self._recheck_application(interaction.channel, member)

            logger.info(f"‚úÖ –ù–∏–∫–Ω–µ–π–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω: {self.original_nick} ‚Üí {self.suggested_nick}")

        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∏–∫–Ω–µ–π–º–∞: {e}")
            await interaction.response.send_message("‚ùå –û—à–∏–±–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∏–∫–Ω–µ–π–º–∞.", ephemeral=True)

    @discord.ui.button(
        label="üîß –ò—Å–ø—Ä–∞–≤–ª—é —Å–∞–º",
        style=discord.ButtonStyle.secondary,
        custom_id="manual_fix_steam_nick_v3",
    )
    async def manual_fix_nick(self, interaction: discord.Interaction, button: discord.ui.Button):
        """–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ–± –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ –≤—Ä—É—á–Ω—É—é"""
        try:
            manual_embed = discord.Embed(
                title="üîß –ò—Å–ø—Ä–∞–≤—å—Ç–µ –Ω–∏–∫–Ω–µ–π–º –≤—Ä—É—á–Ω—É—é",
                description=f"–ò—Å–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–π Discord –Ω–∏–∫–Ω–µ–π–º –Ω–∞ **{self.suggested_nick}** –∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É \"–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–∞—è–≤–∫—É –µ—â—ë —Ä–∞–∑\"",
                color=0x0099FF,
            )

            manual_embed.add_field(
                name="üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è",
                value="1. –ü—Ä–∞–≤—ã–π –∫–ª–∏–∫ –Ω–∞ —Å–≤–æ–π –Ω–∏–∫ –≤ Discord\n2. –í—ã–±–µ—Ä–∏—Ç–µ \"–ò–∑–º–µ–Ω–∏—Ç—å –Ω–∏–∫–Ω–µ–π–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ\"\n3. –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –Ω–∏–∫\n4. –ù–∞–∂–º–∏—Ç–µ \"–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–∞—è–≤–∫—É –µ—â—ë —Ä–∞–∑\"",
                inline=False,
            )

            await interaction.response.edit_message(embed=manual_embed, view=None)

        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ —Ä—É—á–Ω–æ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏: {e}")

    async def _recheck_application(self, channel, member):
        """–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫—É –∑–∞—è–≤–∫–∏ –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∏–∫–∞"""
        try:
            # –ü–æ–ª—É—á–∞–µ–º TicketHandler
            bot = channel.guild._state._get_client()
            ticket_handler = bot.get_cog("TicketHandler")
            if ticket_handler:
                await ticket_handler.analyze_and_respond_to_application(channel, member)
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏: {e}")


class NicknameFixView(discord.ui.View):
    """View –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–µ—Å–æ–≤–ø–∞–¥–∞—é—â–∏—Ö –Ω–∏–∫–Ω–µ–π–º–æ–≤"""

    def __init__(self, user_id: int = None, original_nick: str = "", suggested_nick: str = "", steam_nick: str = ""):
        super().__init__(timeout=None)
        self.user_id = user_id or 0
        self.original_nick = original_nick
        self.suggested_nick = suggested_nick
        self.steam_nick = steam_nick

    @discord.ui.button(
        label="‚úÖ –ò—Å–ø—Ä–∞–≤–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏",
        style=discord.ButtonStyle.success,
        custom_id="auto_fix_steam_nick_v3",
    )
    async def auto_fix_nick(self, interaction: discord.Interaction, button: discord.ui.Button):
        """–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∏–∫–Ω–µ–π–º–∞"""
        try:
            member = interaction.guild.get_member(self.user_id)
            if not member:
                await interaction.response.send_message("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.", ephemeral=True)
                return

            # –ü—Ä–∏–º–µ–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –Ω–∏–∫–Ω–µ–π–º
            await member.edit(
                nick=self.suggested_nick,
                reason="–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∏–∫–Ω–µ–π–º–∞ –ø–æ Steam –ø—Ä–æ—Ñ–∏–ª—é"
            )

            # –°–æ–∑–¥–∞–µ–º embed –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
            success_embed = discord.Embed(
                title="‚úÖ –ù–∏–∫–Ω–µ–π–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω",
                description=f"–ù–∏–∫ –∏–≥—Ä–æ–∫–∞ **{self.original_nick}** –∏—Å–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ **{self.suggested_nick}**",
                color=0x00FF00,
                timestamp=datetime.now(timezone.utc),
            )

            success_embed.add_field(
                name="üîÑ –ò–∑–º–µ–Ω–µ–Ω–∏—è",
                value=f"**–ë—ã–ª–æ:** `{self.original_nick}`\n**–°—Ç–∞–ª–æ:** `{self.suggested_nick}`",
                inline=False,
            )

            await interaction.response.edit_message(embed=success_embed, view=None)

            # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–≤—Ç–æ—Ä–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –∑–∞—è–≤–∫–∏
            await asyncio.sleep(2)
            await self._recheck_application(interaction.channel, member)

            logger.info(f"‚úÖ –ù–∏–∫–Ω–µ–π–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω: {self.original_nick} ‚Üí {self.suggested_nick}")

        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∏–∫–Ω–µ–π–º–∞: {e}")
            await interaction.response.send_message("‚ùå –û—à–∏–±–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∏–∫–Ω–µ–π–º–∞.", ephemeral=True)

    @discord.ui.button(
        label="üîß –ò—Å–ø—Ä–∞–≤–ª—é —Å–∞–º",
        style=discord.ButtonStyle.secondary,
        custom_id="manual_fix_steam_nick_v3",
    )
    async def manual_fix_nick(self, interaction: discord.Interaction, button: discord.ui.Button):
        """–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ–± –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ –≤—Ä—É—á–Ω—É—é"""
        try:
            manual_embed = discord.Embed(
                title="üîß –ò—Å–ø—Ä–∞–≤—å—Ç–µ –Ω–∏–∫–Ω–µ–π–º –≤—Ä—É—á–Ω—É—é",
                description=f"–ò—Å–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–π Discord –Ω–∏–∫–Ω–µ–π–º –Ω–∞ **{self.suggested_nick}** –∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É \"–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–∞—è–≤–∫—É –µ—â—ë —Ä–∞–∑\"",
                color=0x0099FF,
            )

            manual_embed.add_field(
                name="üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è",
                value="1. –ü—Ä–∞–≤—ã–π –∫–ª–∏–∫ –Ω–∞ —Å–≤–æ–π –Ω–∏–∫ –≤ Discord\n2. –í—ã–±–µ—Ä–∏—Ç–µ \"–ò–∑–º–µ–Ω–∏—Ç—å –Ω–∏–∫–Ω–µ–π–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ\"\n3. –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –Ω–∏–∫\n4. –ù–∞–∂–º–∏—Ç–µ \"–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–∞—è–≤–∫—É –µ—â—ë —Ä–∞–∑\"",
                inline=False,
            )

            await interaction.response.edit_message(embed=manual_embed, view=None)

        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ —Ä—É—á–Ω–æ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏: {e}")

    async def _recheck_application(self, channel, member):
        """–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫—É –∑–∞—è–≤–∫–∏ –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∏–∫–∞"""
        try:
            # –ü–æ–ª—É—á–∞–µ–º TicketHandler
            bot = channel.guild._state._get_client()
            ticket_handler = bot.get_cog("TicketHandler")
            if ticket_handler:
                await ticket_handler.analyze_and_respond_to_application(channel, member)
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏: {e}")


class NicknameMismatchFixView(discord.ui.View):
    """View –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–µ—Å–æ–≤–ø–∞–¥–∞—é—â–∏—Ö Discord –∏ Steam –Ω–∏–∫–Ω–µ–π–º–æ–≤"""

    def __init__(self, user_id: int = None, discord_nick: str = None, steam_nick: str = None, real_name: str = None):
        super().__init__(timeout=None)
        self.user_id = user_id or 0
        self.discord_nick = discord_nick or ""
        self.steam_nick = steam_nick or ""
        self.real_name = real_name or ""

    @discord.ui.button(
        label="–ò—Å–ø—Ä–∞–≤–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏",
        style=discord.ButtonStyle.success,
        custom_id="auto_fix_nick_mismatch_v4",
    )
    async def auto_fix_nickname(self, interaction: discord.Interaction, button: discord.ui.Button):
        """–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ Discord –Ω–∏–∫–Ω–µ–π–º–∞ –Ω–∞ —Ñ–æ—Ä–º–∞—Ç SteamNick | –ò–º—è"""
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ –ª–∏ —É–∂–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ
            if interaction.response.is_done():
                logger.warning(f"‚ö†Ô∏è Interaction —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ –¥–ª—è {interaction.user.display_name}")
                return

            member = interaction.guild.get_member(self.user_id)
            if not member:
                await interaction.response.send_message("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.", ephemeral=True)
                return

            # –§–æ—Ä–º–∏—Ä—É–µ–º –Ω–æ–≤—ã–π –Ω–∏–∫–Ω–µ–π–º
            new_nick = f"{self.steam_nick} | {self.real_name}"

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏–Ω—É –Ω–∏–∫–∞ (Discord –ª–∏–º–∏—Ç 32 —Å–∏–º–≤–æ–ª–∞)
            if len(new_nick) > 32:
                await interaction.response.send_message(
                    f"‚ùå –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º—ã–π –Ω–∏–∫–Ω–µ–π–º —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π ({len(new_nick)} —Å–∏–º–≤–æ–ª–æ–≤). –ú–∞–∫—Å–∏–º—É–º 32 —Å–∏–º–≤–æ–ª–∞.",
                    ephemeral=True
                )
                return

            # –°–Ω–∞—á–∞–ª–∞ –æ—Ç–≤–µ—á–∞–µ–º –Ω–∞ interaction, –∑–∞—Ç–µ–º –º–µ–Ω—è–µ–º –Ω–∏–∫
            await interaction.response.defer()

            # –ü—Ä–∏–º–µ–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –Ω–∏–∫–Ω–µ–π–º
            await member.edit(
                nick=new_nick,
                reason="–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∏–∫–Ω–µ–π–º–∞ –ø–æ Steam –ø—Ä–æ—Ñ–∏–ª—é"
            )

            # –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
            success_message = (
                f"‚úÖ **–ù–∏–∫–Ω–µ–π–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω!**\n\n"
                f"üîÑ **–ò–∑–º–µ–Ω–µ–Ω–∏—è:**\n"
                f"‚Ä¢ –ë—ã–ª–æ: `{self.discord_nick}`\n"
                f"‚Ä¢ –°—Ç–∞–ª–æ: `{new_nick}`\n\n"
                f"üîÑ **–ó–∞–ø—É—Å–∫–∞—é –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä–∫—É –∑–∞—è–≤–∫–∏...**"
            )

            await interaction.edit_original_response(content=success_message, view=None)

            # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–≤—Ç–æ—Ä–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –∑–∞—è–≤–∫–∏
            await asyncio.sleep(3)
            await self._recheck_application(interaction.channel, member)

            logger.info(f"‚úÖ –ù–∏–∫–Ω–µ–π–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω: {self.discord_nick} ‚Üí {new_nick}")

        except discord.HTTPException as e:
            try:
                if not interaction.response.is_done():
                    if "Invalid Form Body" in str(e):
                        await interaction.response.send_message("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–∏–∫–Ω–µ–π–º. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –≤—Ä—É—á–Ω—É—é.", ephemeral=True)
                    elif "Missing Permissions" in str(e) or "50013" in str(e):
                        await interaction.response.send_message(
                            "‚ùå –£ –±–æ—Ç–∞ –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∏–∫–Ω–µ–π–º–æ–≤. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∞–≤ –±–æ—Ç–∞ –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç–µ –Ω–∏–∫–Ω–µ–π–º –≤—Ä—É—á–Ω—É—é.",
                            ephemeral=True
                        )
                    else:
                        await interaction.response.send_message("‚ùå –û—à–∏–±–∫–∞ Discord API –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –Ω–∏–∫–Ω–µ–π–º–∞.", ephemeral=True)
                else:
                    await interaction.followup.send("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –Ω–∏–∫–Ω–µ–π–º–∞.", ephemeral=True)
            except:
                logger.error(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ: {e}")
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∏–∫–Ω–µ–π–º–∞: {e}")
            try:
                if not interaction.response.is_done():
                    await interaction.response.send_message("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –≤—Ä—É—á–Ω—É—é.", ephemeral=True)
                else:
                    await interaction.followup.send("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –≤—Ä—É—á–Ω—É—é.", ephemeral=True)
            except:
                logger.error(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ: {e}")

    @discord.ui.button(
        label="–ò—Å–ø—Ä–∞–≤–ª—é —Å–∞–º",
        style=discord.ButtonStyle.danger,
        custom_id="manual_fix_nick_mismatch_v4",
    )
    async def manual_fix_nickname(self, interaction: discord.Interaction, button: discord.ui.Button):
        """–û—Ç–∫—Ä—ã–≤–∞–µ—Ç –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∏–∫–Ω–µ–π–º–∞"""
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ –ª–∏ —É–∂–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ
            if interaction.response.is_done():
                logger.warning(f"‚ö†Ô∏è Interaction —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ {interaction.user.display_name}")
                return

            # –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –ø–æ–¥—Å–∫–∞–∑–∫–æ–π
            modal = NicknameMismatchModal(
                self.user_id,
                self.steam_nick,
                self.real_name,
                interaction.message.id,
                interaction.channel.id
            )
            await interaction.response.send_modal(modal)

        except discord.HTTPException as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞: {e}")
            try:
                if not interaction.response.is_done():
                    await interaction.response.send_message("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è —Ñ–æ—Ä–º—ã –¥–ª—è –≤–≤–æ–¥–∞ –Ω–∏–∫–Ω–µ–π–º–∞.", ephemeral=True)
                else:
                    await interaction.followup.send("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è —Ñ–æ—Ä–º—ã –¥–ª—è –≤–≤–æ–¥–∞ –Ω–∏–∫–Ω–µ–π–º–∞.", ephemeral=True)
            except:
                pass
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞: {e}")
            try:
                if not interaction.response.is_done():
                    await interaction.response.send_message("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è —Ñ–æ—Ä–º—ã –¥–ª—è –≤–≤–æ–¥–∞ –Ω–∏–∫–Ω–µ–π–º–∞.", ephemeral=True)
                else:
                    await interaction.followup.send("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è —Ñ–æ—Ä–º—ã –¥–ª—è –≤–≤–æ–¥–∞ –Ω–∏–∫–Ω–µ–π–º–∞.", ephemeral=True)
            except:
                pass

    async def _recheck_application(self, channel, member):
        """–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫—É –∑–∞—è–≤–∫–∏ –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∏–∫–∞"""
        try:
            # –ü–æ–ª—É—á–∞–µ–º TicketHandler
            bot = channel.guild._state._get_client()
            ticket_handler = bot.get_cog("TicketHandler")
            if ticket_handler:
                await ticket_handler.analyze_and_respond_to_application(channel, member)
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏: {e}")
            await safe_send_message(
                channel,
                f"{member.mention} ‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–µ –∑–∞—è–≤–∫–∏. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—É."
            )


class TicketHandler(commands.Cog):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–∏–∫–µ—Ç–æ–≤ –∑–∞—è–≤–æ–∫"""
    def __init__(self, bot: commands.Bot):
        self.bot = bot
        self._welcomed_channels = set()

    async def process_new_ticket(self, channel, user):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–æ–≤–æ–≥–æ —Ç–∏–∫–µ—Ç–∞"""
        try:
            if channel.id not in self._welcomed_channels:
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
                await safe_send_message(
                    channel,
                    f"üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user.mention}! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞ –∫ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—é.\n"
                    f"üîç –°–µ–π—á–∞—Å –ø—Ä–æ–≤–µ—Ä–∏–º –≤–∞—à Steam-–ø—Ä–æ—Ñ–∏–ª—å –∏ –Ω–∏–∫–Ω–µ–π–º..."
                )
                self._welcomed_channels.add(channel.id)
                logger.info(f"‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –≤ {channel.name}")

            # –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∞–ª–∏–∑ –∑–∞—è–≤–∫–∏
            await self.analyze_and_respond_to_application(channel, user)
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–æ–≤–æ–≥–æ —Ç–∏–∫–µ—Ç–∞: {e}")

    async def analyze_and_respond_to_application(self, channel, user):
        """–ê–Ω–∞–ª–∏–∑ –∏ –æ—Ç–≤–µ—Ç –Ω–∞ –∑–∞—è–≤–∫—É"""
        try:
            await safe_send_message(
                channel,
                f"üîç –ó–∞–ø—É—â–µ–Ω –∞–Ω–∞–ª–∏–∑ –≤–∞—à–µ–π –∑–∞—è–≤–∫–∏...\n"
                f"‚è∞ –ü—Ä–æ–≤–µ—Ä—è—é Steam-–ø—Ä–æ—Ñ–∏–ª—å –∏ –Ω–∏–∫–Ω–µ–π–º..."
            )

            # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            member = channel.guild.get_member(user.id)
            if not member:
                logger.warning(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.id} –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.")
                return

            # –ü–æ–ª—É—á–∞–µ–º Discord –Ω–∏–∫
            discord_nick = member.nick or member.display_name

            # –ò—â–µ–º Steam —Å—Å—ã–ª–∫–∏ –≤ –∏—Å—Ç–æ—Ä–∏–∏ –∫–∞–Ω–∞–ª–∞
            steam_profile_url = None
            steam_id64 = None
            steam_nick = None

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª–µ –¥–ª—è –ø–æ–∏—Å–∫–∞ Steam —Å—Å—ã–ª–æ–∫
            async for message in channel.history(limit=20):
                if message.embeds:
                    for embed in message.embeds:
                        if embed.fields:
                            for field in embed.fields:
                                if field.value and "steamcommunity.com" in field.value:
                                    from handlers.novichok import extract_steam_links
                                    steam_links = extract_steam_links(field.value)
                                    if steam_links:
                                        steam_profile_url = steam_links[0]
                                        break
                        if steam_profile_url:
                            break
                if steam_profile_url:
                    break

            if not steam_profile_url:
                await safe_send_message(
                    channel,
                    f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ Steam –ø—Ä–æ—Ñ–∏–ª—å –≤ –∑–∞—è–≤–∫–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É–∫–∞–∑–∞–ª–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—Å—ã–ª–∫—É –Ω–∞ Steam –ø—Ä–æ—Ñ–∏–ª—å."
                )
                return

            # –ü–æ–ª—É—á–∞–µ–º SteamID64 –∏ –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è
            from handlers.steam_api import get_steam_id64, steam_client

            steam_id64 = await get_steam_id64(steam_profile_url)
            if steam_id64:
                steam_data = await steam_client.get_player_summary(steam_id64)
                if steam_data and steam_data.get("success"):
                    steam_nick = steam_data.get("personaname", "")

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ Discord –Ω–∏–∫–∞ –∏ Steam –Ω–∏–∫–∞
            nick_match = False
            if discord_nick and steam_nick:
                # –£–±–∏—Ä–∞–µ–º –≤–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–µ—Ñ–∏–∫—Å—ã –∏ —Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —á–∞—Å—Ç—å –Ω–∏–∫–∞
                discord_left = discord_nick.split(' | ')[0].strip() if ' | ' in discord_nick else discord_nick.strip()
                steam_nick_clean = steam_nick.strip()

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
                if discord_left.lower() == steam_nick_clean.lower():
                    nick_match = True
                else:
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ —Å —É—á–µ—Ç–æ–º –∫–ª–∞–Ω–æ–≤—ã—Ö –ø—Ä–∏—Å—Ç–∞–≤–æ–∫ (VLG., [VLG], etc.)
                    # –£–±–∏—Ä–∞–µ–º –∫–ª–∞–Ω–æ–≤—ã–µ –ø—Ä–∏—Å—Ç–∞–≤–∫–∏ –∏–∑ Steam –Ω–∏–∫–∞
                    steam_without_clan = re.sub(r'^(VLG\.|VLG_|\[VLG\]|VLG)', '', steam_nick_clean, flags=re.IGNORECASE).strip()
                    discord_without_clan = re.sub(r'^(VLG\.|VLG_|\[VLG\]|VLG)', '', discord_left, flags=re.IGNORECASE).strip()

                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –±–µ–∑ –∫–ª–∞–Ω–æ–≤—ã—Ö –ø—Ä–∏—Å—Ç–∞–≤–æ–∫
                    if discord_without_clan.lower() == steam_without_clan.lower():
                        nick_match = True
                        logger.info(f"‚úÖ –ù–∏–∫–∏ —Å–æ–≤–ø–∞–¥–∞—é—Ç –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è –∫–ª–∞–Ω–æ–≤—ã—Ö –ø—Ä–∏—Å—Ç–∞–≤–æ–∫: '{discord_without_clan}' == '{steam_without_clan}'")
                    else:
                        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—Ö–æ–∂–µ—Å—Ç—å (—É—á–∏—Ç—ã–≤–∞–µ–º –æ–ø–µ—á–∞—Ç–∫–∏)
                        from difflib import SequenceMatcher
                        similarity = SequenceMatcher(None, discord_without_clan.lower(), steam_without_clan.lower()).ratio()
                        if similarity >= 0.85:  # 85% —Å—Ö–æ–∂–µ—Å—Ç–∏
                            nick_match = True
                            logger.info(f"‚úÖ –ù–∏–∫–∏ —Å—Ö–æ–∂–∏ –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è –∫–ª–∞–Ω–æ–≤—ã—Ö –ø—Ä–∏—Å—Ç–∞–≤–æ–∫: '{discord_without_clan}' ~ '{steam_without_clan}' (—Å—Ö–æ–∂–µ—Å—Ç—å: {similarity:.2f})")

            if not nick_match and discord_nick and steam_nick:
                # –ù–∏–∫–Ω–µ–π–º—ã –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                from utils.misc import extract_real_name_from_discord_nick
                real_name = extract_real_name_from_discord_nick(discord_nick)

                if not real_name:
                    # –ü—ã—Ç–∞–µ–º—Å—è –∏–∑–≤–ª–µ—á—å –∏–º—è –∏–∑ –ø—Ä–∞–≤–æ–π —á–∞—Å—Ç–∏ –Ω–∏–∫–∞ Discord
                    if ' | ' in discord_nick:
                        real_name = discord_nick.split(' | ', 1)[1].strip()
                    else:
                        real_name = "–í–∞—à–µ –∏–º—è"  # fallback

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –≤–∫–ª—é—á–∏—Ç—å –¥–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
                if getattr(config, "DEBUG_NICKNAME_CHECKS", False):
                    # –í—ã—á–∏—Å–ª—è–µ–º –æ—á–∏—â–µ–Ω–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
                    discord_left = discord_nick.split(' | ')[0].strip() if ' | ' in discord_nick else discord_nick.strip()
                    steam_nick_clean = steam_nick.strip()
                    
                    # –£–±–∏—Ä–∞–µ–º –∫–ª–∞–Ω–æ–≤—ã–µ –ø—Ä–∏—Å—Ç–∞–≤–∫–∏
                    import re
                    steam_without_clan = re.sub(r'^(VLG\.|VLG_|\[VLG\]|VLG)', '', steam_nick_clean, flags=re.IGNORECASE).strip()
                    discord_without_clan = re.sub(r'^(VLG\.|VLG_|\[VLG\]|VLG)', '', discord_left, flags=re.IGNORECASE).strip()
                    
                    logger.info(f"üîç DEBUG: –î–µ—Ç–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è –Ω–∏–∫–æ–≤:")
                    logger.info(f"   –ò—Å—Ö–æ–¥–Ω—ã–π Discord –Ω–∏–∫: '{discord_nick}'")
                    logger.info(f"   –ò—Å—Ö–æ–¥–Ω—ã–π Steam –Ω–∏–∫: '{steam_nick}'")
                    logger.info(f"   Discord –ª–µ–≤–∞—è —á–∞—Å—Ç—å: '{discord_left}'")
                    logger.info(f"   Steam –æ—á–∏—â–µ–Ω–Ω—ã–π: '{steam_nick_clean}'")
                    logger.info(f"   Discord –±–µ–∑ –∫–ª–∞–Ω–∞: '{discord_without_clan}'")
                    logger.info(f"   Steam –±–µ–∑ –∫–ª–∞–Ω–∞: '{steam_without_clan}'")
                    logger.info(f"   –¢–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ: {discord_left.lower() == steam_nick_clean.lower()}")
                    logger.info(f"   –°–æ–≤–ø–∞–¥–µ–Ω–∏–µ –±–µ–∑ –∫–ª–∞–Ω–∞: {discord_without_clan.lower() == steam_without_clan.lower()}")
                    
                    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ö–æ–∂–µ—Å—Ç–∏
                    from difflib import SequenceMatcher
                    similarity = SequenceMatcher(None, discord_without_clan.lower(), steam_without_clan.lower()).ratio()
                    logger.info(f"   –°—Ö–æ–∂–µ—Å—Ç—å (0.0-1.0): {similarity:.3f}")
                    logger.info(f"   –ò—Ç–æ–≥–æ–≤–æ–µ —Ä–µ—à–µ–Ω–∏–µ nick_match: {nick_match}")

                if discord_name_clean != steam_name_clean:
                    logger.warning(f"‚ùå –ù–∏–∫–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç –¥–ª—è {user.display_name}")

                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞—Å—Ç–æ–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–µ—Å–æ–≤–ø–∞–¥–µ–Ω–∏–∏ –Ω–∏–∫–æ–≤
                    mismatch_embed = discord.Embed(
                        title="‚ùå –ù–∏–∫–Ω–µ–π–º –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç Steam –ø—Ä–æ—Ñ–∏–ª—é",
                        description=(
                            f"**–í–∞—à Discord –Ω–∏–∫:** `{discord_nick}`\n"
                            f"**–í–∞—à Steam –Ω–∏–∫:** `{steam_nick}`\n\n"
                            "**–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:**\n"
                            "‚Ä¢ Discord –Ω–∏–∫ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ: `SteamNick | –ò–º—è`\n"
                            "‚Ä¢ SteamNick –¥–æ–ª–∂–µ–Ω —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å –≤–∞—à–∏–º –Ω–∏–∫–æ–º –≤ Steam\n"
                            "‚Ä¢ –ò–º—è –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –Ω–∞ –∫–∏—Ä–∏–ª–ª–∏—Ü–µ —Å –∑–∞–≥–ª–∞–≤–Ω–æ–π –±—É–∫–≤—ã"
                        ),
                        color=0xFF0000
                    )

                    mismatch_embed.add_field(
                        name="üîß –ö–∞–∫ –∏—Å–ø—Ä–∞–≤–∏—Ç—å:",
                        value=(
                            "1. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ —Å–≤–æ–π –Ω–∏–∫ –≤ Discord\n"
                            "2. –í—ã–±–µ—Ä–∏—Ç–µ \"–ò–∑–º–µ–Ω–∏—Ç—å –Ω–∏–∫–Ω–µ–π–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ\"\n"
                            f"3. –í–≤–µ–¥–∏—Ç–µ: `{steam_nick} | –í–∞—à–µ–ò–º—è`\n"
                            "4. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É \"–ü–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä–∏—Ç—å\" –Ω–∏–∂–µ"
                        ),
                        inline=False
                    )

                    view = NicknameMismatchFixView(user.id, discord_nick, steam_nick, "")
                    await safe_send_message(channel, embed=mismatch_embed, view=view)

                    # –í–ê–ñ–ù–û: –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É —á–µ—Ä–µ–∑ AI
                    return


            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç Discord –Ω–∏–∫–Ω–µ–π–º–∞ (–ë–ê–ó–û–í–ê–Ø –ü–†–û–í–ï–†–ö–ê –°–ù–ê–ß–ê–õ–ê)
            await asyncio.sleep(2)

            current_nick = user.nick or user.display_name
            logger.info(f"üîç –ü—Ä–æ–≤–µ—Ä—è—é —Ñ–æ—Ä–º–∞—Ç –Ω–∏–∫–Ω–µ–π–º–∞: {current_nick}")

            # –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û: –°–Ω–∞—á–∞–ª–∞ –±–∞–∑–æ–≤—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ–æ—Ä–º–∞—Ç–∞
            if " | " not in current_nick:
                nickname_embed = discord.Embed(
                    title="‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–∏–∫–Ω–µ–π–º–∞",
                    description=f"**–í–∞—à –Ω–∏–∫–Ω–µ–π–º:** `{current_nick}`\n\n**–¢—Ä–µ–±—É–µ—Ç—Å—è —Ñ–æ—Ä–º–∞—Ç:** `SteamNick | –ò–º—è`",
                    color=0xFF0000
                )
                nickname_embed.add_field(
                    name="üìã –ö–∞–∫ –∏—Å–ø—Ä–∞–≤–∏—Ç—å:",
                    value="1. –ü—Ä–∞–≤—ã–π –∫–ª–∏–∫ –Ω–∞ —Å–≤–æ–π –Ω–∏–∫ –≤ Discord\n2. –í—ã–±–µ—Ä–∏—Ç–µ \"–ò–∑–º–µ–Ω–∏—Ç—å –Ω–∏–∫–Ω–µ–π–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ\"\n3. –í–≤–µ–¥–∏—Ç–µ –Ω–∏–∫ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: `SteamNick | –ò–º—è`",
                    inline=False
                )
                
                await safe_send_message(channel, embed=nickname_embed)
                logger.warning(f"‚ùå –ù–∏–∫–Ω–µ–π–º '{current_nick}' –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è ' | '")
                return

            parts = current_nick.split(" | ")
            if len(parts) != 2:
                # –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –¥–≤–∞ –∏–ª–∏ –±–æ–ª–µ–µ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–µ–π " | "
                steam_part = parts[0] if parts else ""
                
                # –ü–æ–ø—ã—Ç–∫–∞ —É–≥–∞–¥–∞—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏–º—è –∏–∑ –ø–æ—Å–ª–µ–¥–Ω–µ–π —á–∞—Å—Ç–∏
                suggested_name = parts[-1] if len(parts) > 1 else "–í–∞—à–µ_–ò–º—è"
                suggested_nick = f"{steam_part} | {suggested_name}" if steam_part else f"SteamNick | {suggested_name}"
                
                nickname_embed = discord.Embed(
                    title="‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–∏–∫–Ω–µ–π–º–∞",
                    description=(
                        f"**–í–∞—à –Ω–∏–∫–Ω–µ–π–º:** `{current_nick}`\n\n"
                        f"**–ü—Ä–æ–±–ª–µ–º–∞:** –ù–∞–π–¥–µ–Ω–æ {len(parts)-1} —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–µ–π \" | \", –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω\n\n"
                        f"**–¢—Ä–µ–±—É–µ—Ç—Å—è —Ñ–æ—Ä–º–∞—Ç:** `SteamNick | –ò–º—è`"
                    ),
                    color=0xFF0000
                )
                
                nickname_embed.add_field(
                    name="üîß –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:",
                    value=f"`{suggested_nick}`",
                    inline=False
                )
                
                nickname_embed.add_field(
                    name="üìã –ö–∞–∫ –∏—Å–ø—Ä–∞–≤–∏—Ç—å:",
                    value="1. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É \"–ò—Å–ø—Ä–∞–≤–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏\" –Ω–∏–∂–µ\n2. –ò–ª–∏ –∏—Å–ø—Ä–∞–≤—å—Ç–µ –≤—Ä—É—á–Ω—É—é: –ü–ö–ú –Ω–∞ –Ω–∏–∫ ‚Üí \"–ò–∑–º–µ–Ω–∏—Ç—å –Ω–∏–∫–Ω–µ–π–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ\"",
                    inline=False
                )
                
                view = NicknameRecheckView(user.id, suggested_nick)
                await safe_send_message(channel, embed=nickname_embed, view=view)
                
                logger.warning(f"‚ùå –ù–∏–∫–Ω–µ–π–º '{current_nick}' —Å–æ–¥–µ—Ä–∂–∏—Ç {len(parts)-1} —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–µ–π, –æ–∂–∏–¥–∞–ª—Å—è 1")
                return

            # –ï—Å–ª–∏ –±–∞–∑–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π, –ø—Ä–æ–≤–µ—Ä—è–µ–º —á–µ—Ä–µ–∑ AI –º–æ–¥–µ—Ä–∞—Ü–∏—é
            try:
                from utils.ai_moderation import decide_nickname
                nick_result = await decide_nickname(current_nick)

                if not nick_result.approve:
                    # –ù–∏–∫–Ω–µ–π–º –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ø—Ä–∞–≤–∏–ª–∞–º - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º
                    public_reasons = nick_result.public_reasons or []
                    fixed_suggestion = nick_result.fixed_full

                    view = NicknameRecheckView(user.id, fixed_suggestion)
                    nickname_embed = build_nick_reject_embed(
                        user, current_nick, public_reasons, fixed_suggestion
                    )

                    await safe_send_message(
                        channel,
                        embed=nickname_embed,
                        view=view
                    )

                    logger.info(f"‚ö†Ô∏è –ù–∏–∫–Ω–µ–π–º –æ—Ç–∫–ª–æ–Ω–µ–Ω AI: {current_nick} - {', '.join(public_reasons)}")
                    return # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–ª—å–Ω–µ–π—à—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É

            except Exception as e:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∏–∫–Ω–µ–π–º–∞ —á–µ—Ä–µ–∑ AI: {e}")
                # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –ø—Ä–∏ –æ—à–∏–±–∫–µ AI

            await safe_send_message(
                channel,
                f"‚úÖ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à—ë–Ω! –û–∂–∏–¥–∞–π—Ç–µ —Ä–µ—à–µ–Ω–∏—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞."
            )

            # –°–æ–∑–¥–∞–µ–º embed —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –∞–Ω–∞–ª–∏–∑–∞ –∏ –∫–Ω–æ–ø–∫–∏ –ø—Ä–∏–Ω—è—Ç–∏—è/–æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è
            result_embed = discord.Embed(
                title="‚úÖ –ê–Ω–∞–ª–∏–∑ –∑–∞—è–≤–∫–∏ –∑–∞–≤–µ—Ä—à—ë–Ω",
                description=f"–ó–∞—è–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.display_name} –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—é",
                color=0x00FF00,
                timestamp=datetime.now(timezone.utc),
            )
            result_embed.add_field(
                name="üë§ –ó–∞—è–≤–∏—Ç–µ–ª—å",
                value=f"{user.display_name}\nID: `{user.id}`",
                inline=True
            )
            result_embed.add_field(
                name="üìä –°—Ç–∞—Ç—É—Å",
                value="–û–∂–∏–¥–∞–µ—Ç —Ä–µ—à–µ–Ω–∏—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞",
                inline=True
            )
            result_embed.set_footer(text="–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã –º–æ–≥—É—Ç –ø—Ä–∏–Ω—è—Ç—å –∏–ª–∏ –æ—Ç–∫–ª–æ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É")

            # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏ —Å–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ —Ä–µ—à–µ–Ω–∏—è
            # from handlers.novichok_actions import TicketActionView # –£–∂–µ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ –≤—ã—à–µ
            decision_view = TicketActionView(user.id, channel.id) # –ü–µ—Ä–µ–¥–∞–µ–º channel.id –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è

            await safe_send_message(
                channel,
                embed=result_embed,
                view=decision_view
            )

            logger.info(f"‚úÖ –ê–Ω–∞–ª–∏–∑ –∑–∞—è–≤–∫–∏ –∑–∞–≤–µ—Ä—à—ë–Ω –¥–ª—è {user.display_name}")

        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –∑–∞—è–≤–∫–∏: {e}\n{traceback.format_exc()}")
            await safe_send_message(
                channel,
                f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ –∑–∞—è–≤–∫–∏. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—É."
            )
            # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–∫–∏ —Å —Ç—Ä–∞—Å—Å–∏—Ä–æ–≤–∫–æ–π
            await log_error(e, traceback.format_exc())


async def setup(bot):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ cog –¥–ª—è tickets"""
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º persistent views
    bot.add_view(NicknameFixView(0, "", "", ""))
    bot.add_view(NicknameRecheckView(0, None))
    bot.add_view(NicknameMismatchFixView(0, "", "", ""))
    logger.info("‚úÖ Persistent views –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ tickets.py")

    await bot.add_cog(TicketHandler(bot))