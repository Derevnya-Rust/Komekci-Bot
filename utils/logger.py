from __future__ import annotations
import logging
import os
import sys
from config import config
from datetime import datetime
from typing import Optional
import asyncio

_FMT = "%(asctime)s | %(levelname)-7s | %(name)s | %(message)s"
_DATEFMT = "%d.%m.%Y %H:%M:%S"

# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —Å—á—ë—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
_error_count = 0


def init_logging():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è Replit"""
    level = os.getenv("LOG_LEVEL", "INFO").upper()
    level_num = getattr(logging, level, logging.INFO)

    root = logging.getLogger()
    # —á–∏—Å—Ç–∏–º —Ö–µ–Ω–¥–ª–µ—Ä—ã, —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ –¥—É–±–ª–µ–π –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—Ö
    for h in list(root.handlers):
        root.removeHandler(h)

    handler = logging.StreamHandler(stream=sys.stdout)
    handler.setFormatter(logging.Formatter(_FMT, datefmt=_DATEFMT))
    root.addHandler(handler)
    root.setLevel(level_num)

    # —É–º–µ—Ä–∏—Ç—å –±–æ–ª—Ç–ª–∏–≤–æ—Å—Ç—å —Å—Ç–æ—Ä–æ–Ω–Ω–∏—Ö –ª–æ–≥–≥–µ—Ä–æ–≤
    logging.getLogger("discord").setLevel(logging.WARNING)
    logging.getLogger("asyncio").setLevel(logging.WARNING)
    logging.getLogger("urllib3").setLevel(logging.WARNING)
    logging.getLogger("httpx").setLevel(logging.WARNING)
    logging.getLogger("aiohttp").setLevel(logging.WARNING)

    # –¥–æ–±–∞–≤–ª—è–µ–º —Å—á—ë—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
    error_counter = ErrorCountingHandler()
    root.addHandler(error_counter)

    logging.info(f"–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ: —É—Ä–æ–≤–µ–Ω—å={logging.getLevelName(level_num)}")
    return None


class ErrorCountingHandler(logging.Handler):
    """Handler –¥–ª—è –ø–æ–¥—Å—á—ë—Ç–∞ –æ—à–∏–±–æ–∫ –≤–æ –≤—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞"""

    def emit(self, record):
        global _error_count
        if record.levelno >= logging.ERROR:
            _error_count += 1


def get_error_count():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—à–∏–±–æ–∫ —Å –º–æ–º–µ–Ω—Ç–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è"""
    return _error_count


def setup_basic_logger():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑–æ–≤–æ–≥–æ –ª–æ–≥–≥–µ—Ä–∞ - –æ—Å—Ç–∞–≤–ª—è–µ–º –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏"""
    logging.basicConfig(
        level=logging.INFO,
        format="ü§ñ %(asctime)s | %(levelname)s | %(message)s",
        datefmt="%H:%M:%S",
    )
    return logging.getLogger(__name__)


def setup_logger(bot=None):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π Discord - –æ—Å—Ç–∞–≤–ª—è–µ–º –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏"""
    root_logger = logging.getLogger()
    return root_logger


def get_module_logger(module_name: str):
    """
    –ü–æ–ª—É—á–∞–µ—Ç logger –¥–ª—è –º–æ–¥—É–ª—è —Å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–º–∏ handler'–∞–º–∏.
    –õ–æ–≥–≥–µ—Ä—ã –º–æ–¥—É–ª–µ–π –Ω–µ –∏–º–µ—é—Ç —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã—Ö handler'–æ–≤ –∏ –ø–µ—Ä–µ–¥–∞—é—Ç –≤—Å—ë –≤ root logger.
    """
    module_logger = logging.getLogger(module_name)
    module_logger.propagate = True  # –í–∫–ª—é—á–∞–µ–º –≤—Å–ø–ª—ã—Ç–∏–µ –¥–ª—è —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    return module_logger


async def log_technical_error(channel, error_type, message, traceback):
    """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫"""
    logger = logging.getLogger("technical_errors")
    logger.error(f"[{error_type}] {message}")
    if traceback:
        logger.debug(f"Traceback: {traceback}")