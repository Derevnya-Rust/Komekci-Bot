"""
–í–µ–±-—Å–µ—Ä–≤–µ—Ä –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –±–æ—Ç–∞
"""

from flask import Flask, jsonify, render_template_string
import json
import os
from datetime import datetime
import threading
import asyncio
import discord

app = Flask(__name__)

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ
bot_instance = None
member_count_cache = "3800+"
last_member_count_update = None


def set_bot_instance(bot):
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ —Å–µ—Ä–≤–µ—Ä–µ"""
    global bot_instance
    bot_instance = bot


async def get_discord_member_count():
    """–ü–æ–ª—É—á–∞–µ—Ç –∞–∫—Ç—É–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ Discord —Å–µ—Ä–≤–µ—Ä–∞"""
    global member_count_cache, last_member_count_update

    try:
        if not bot_instance or not bot_instance.is_ready():
            return member_count_cache

        # ID —Å–µ—Ä–≤–µ—Ä–∞ –î–µ—Ä–µ–≤–Ω–∏ VLG
        guild_id = 472365787445985280
        guild = bot_instance.get_guild(guild_id)

        if guild and guild.member_count:
            # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —á–∏—Å–ª–æ —Å –ø—Ä–æ–±–µ–ª–∞–º–∏
            formatted_count = f"{guild.member_count:,}".replace(",", " ")
            member_count_cache = formatted_count
            last_member_count_update = datetime.now()
            return formatted_count
        else:
            return member_count_cache

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ Discord: {e}")
        return member_count_cache


def update_member_count_sync():
    """–°–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –æ–±–µ—Ä—Ç–∫–∞ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤"""
    try:
        if bot_instance and bot_instance.is_ready():
            loop = asyncio.new_event_loop()
            asyncio.set_event_loop(loop)
            return loop.run_until_complete(get_discord_member_count())
        return member_count_cache
    except Exception:
        return member_count_cache


# HTML —à–∞–±–ª–æ–Ω –¥–ª—è –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
INDEX_TEMPLATE = """
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–î–µ—Ä–µ–≤–Ω—è VLG - –°–∞–º–∞—è –±–æ–ª—å—à–∞—è –î–µ—Ä–µ–≤–Ω—è –≤ RUST</title>
    <style>
        body {
            font-family: 'Segoe UI', Arial, sans-serif;
            background: linear-gradient(135deg, #2c5530 0%, #1a3d1f 50%, #0f2612 100%);
            margin: 0;
            padding: 20px;
            min-height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
        }
        .container {
            background: rgba(255, 255, 255, 0.95);
            border-radius: 20px;
            padding: 40px;
            box-shadow: 0 15px 40px rgba(0,0,0,0.4);
            text-align: center;
            max-width: 500px;
            width: 100%;
            border: 3px solid #8B4513;
        }
        .village-title {
            background: linear-gradient(45deg, #8B4513, #CD853F, #DEB887);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            font-size: 1.8em;
            font-weight: bold;
            margin-bottom: 15px;
            text-shadow: 2px 2px 4px rgba(0,0,0,0.1);
        }
        .village-subtitle {
            color: #2c5530;
            font-size: 1.1em;
            margin-bottom: 25px;
            font-weight: 600;
        }
        .countdown-container {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border-radius: 15px;
            padding: 25px;
            margin: 25px 0;
            color: white;
            border: 2px solid #5a67d8;
            box-shadow: 0 8px 32px rgba(102, 126, 234, 0.3);
        }
        .countdown-title {
            font-size: 1.3em;
            margin-bottom: 20px;
            font-weight: bold;
            color: #ffffff;
            text-shadow: 0 2px 4px rgba(0,0,0,0.3);
        }
        .countdown {
            display: grid;
            grid-template-columns: repeat(4, 1fr);
            gap: 12px;
            margin-bottom: 15px;
        }
        .countdown-item {
            background: rgba(255,255,255,0.15);
            border-radius: 10px;
            padding: 15px 8px;
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255,255,255,0.2);
            transition: transform 0.2s ease;
        }
        .countdown-item:hover {
            transform: translateY(-2px);
            background: rgba(255,255,255,0.2);
        }
        .countdown-number {
            font-size: 1.6em;
            font-weight: bold;
            display: block;
            color: #ffffff;
            text-shadow: 0 2px 4px rgba(0,0,0,0.3);
        }
        .countdown-label {
            font-size: 0.85em;
            opacity: 0.9;
            color: #e2e8f0;
        }
        .status-section {
            background: linear-gradient(135deg, #228B22, #32CD32);
            border-radius: 15px;
            padding: 20px;
            margin: 20px 0;
            color: white;
        }
        .status-online { color: #fff; }
        .status-offline { color: #FFB6C1; }
        .status-unknown { color: #FFFFE0; }
        .status-error { color: #FFB6C1; }
        .bot-status { font-size: 1.3em; font-weight: bold; margin: 10px 0; }
        .last-update { color: rgba(255,255,255,0.8); font-size: 0.9em; margin-top: 10px; }
        .join-btn {
            background: linear-gradient(45deg, #FF6B35, #F7931E);
            color: white;
            border: none;
            padding: 15px 30px;
            border-radius: 25px;
            cursor: pointer;
            margin-top: 20px;
            font-size: 1.1em;
            font-weight: bold;
            text-decoration: none;
            display: inline-block;
            transition: transform 0.2s;
            box-shadow: 0 4px 15px rgba(255,107,53,0.3);
        }
        .join-btn:hover { 
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(255,107,53,0.4);
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="village-title">üõñ –î–µ—Ä–µ–≤–Ω—è VLG</div>
        <div class="village-subtitle" id="villageSubtitle">–°–∞–º–∞—è –±–æ–ª—å—à–∞—è –î–µ—Ä–µ–≤–Ω—è –≤ RUST, –≥–¥–µ –±–æ–ª–µ–µ {{ member_count }} —Ä–∞—Å—Ç–µ—Ä–æ–≤!</div>
        <a href="https://discord.com/invite/MXKVwWQDZS" target="_blank" class="join-btn">
            üéÆ –í—Å—Ç—É–ø–∏—Ç—å –≤ –î–µ—Ä–µ–≤–Ω—é
        </a>

        <div class="countdown-container">
            <div class="countdown-title">üõñ –î–µ—Ä–µ–≤–Ω—è —Å—É—â–µ—Å—Ç–≤—É–µ—Ç —É–∂–µ:</div>
            <div class="countdown">
                <div class="countdown-item">
                    <span class="countdown-number" id="existDays">0</span>
                    <span class="countdown-label">–¥–Ω–µ–π</span>
                </div>
                <div class="countdown-item">
                    <span class="countdown-number" id="existHours">0</span>
                    <span class="countdown-label">—á–∞—Å–æ–≤</span>
                </div>
                <div class="countdown-item">
                    <span class="countdown-number" id="existMinutes">0</span>
                    <span class="countdown-label">–º–∏–Ω—É—Ç</span>
                </div>
                <div class="countdown-item">
                    <span class="countdown-number" id="existSeconds">0</span>
                    <span class="countdown-label">—Å–µ–∫—É–Ω–¥</span>
                </div>
            </div>
        </div>

        <div class="status-section">
            <div class="bot-status status-{{ status.status }}">
                {% if status.status == 'online' %}
                    ü§ñ –ë–æ—Ç –ø–æ–º–æ—â–Ω–∏–∫ –æ–Ω–ª–∞–π–Ω
                {% elif status.status == 'offline' %}
                    ü§ñ –ë–æ—Ç –ø–æ–º–æ—â–Ω–∏–∫ –æ—Ñ—Ñ–ª–∞–π–Ω
                {% elif status.status == 'error' %}
                    ‚ö†Ô∏è –û—à–∏–±–∫–∞ –±–æ—Ç–∞
                {% else %}
                    ‚ùì –°—Ç–∞—Ç—É—Å –Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω
                {% endif %}
            </div>
            <div class="last-update">
                –û–±–Ω–æ–≤–ª–µ–Ω–æ: <span id="lastUpdate">{{ status.last_update }}</span> (–ë–∞–∫—É)
            </div>
        </div>

    </div>

    <script>
        function updateVillageAge() {
            // –î–∞—Ç–∞ –æ—Å–Ω–æ–≤–∞–Ω–∏—è –î–µ—Ä–µ–≤–Ω–∏: 27 —Å–µ–Ω—Ç—è–±—Ä—è 2023
            const villageFoundation = new Date('2023-09-27T00:00:00');
            const now = new Date();
            const timeDiff = now.getTime() - villageFoundation.getTime();

            if (timeDiff > 0) {
                const days = Math.floor(timeDiff / (1000 * 60 * 60 * 24));
                const hours = Math.floor((timeDiff % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
                const minutes = Math.floor((timeDiff % (1000 * 60 * 60)) / (1000 * 60));
                const seconds = Math.floor((timeDiff % (1000 * 60)) / 1000);

                document.getElementById('existDays').textContent = days;
                document.getElementById('existHours').textContent = hours;
                document.getElementById('existMinutes').textContent = minutes;
                document.getElementById('existSeconds').textContent = seconds;
            }
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É
        updateVillageAge();
        setInterval(updateVillageAge, 1000);

        // –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
        function updateData() {
            Promise.all([
                fetch('/status').then(response => response.json()),
                fetch('/member_count').then(response => response.json())
            ])
            .then(([statusData, memberData]) => {
                // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
                document.getElementById('lastUpdate').textContent = statusData.last_update;

                // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
                if (memberData.member_count) {
                    const subtitle = document.getElementById('villageSubtitle');
                    subtitle.textContent = `–°–∞–º–∞—è –±–æ–ª—å—à–∞—è –î–µ—Ä–µ–≤–Ω—è –≤ RUST, –≥–¥–µ –±–æ–ª–µ–µ ${memberData.member_count} —Ä–∞—Å—Ç–µ—Ä–æ–≤!`;
                }
            })
            .catch(error => {
                console.log('–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ');
            });
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
        setInterval(updateData, 30000);

        // –ü–µ—Ä–≤–∏—á–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏
        setTimeout(updateData, 2000);
    </script>
</body>
</html>
"""

STATUS_FILE = "status.json"


def load_status():
    """–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ —Å—Ç–∞—Ç—É—Å–µ"""
    if os.path.exists(STATUS_FILE):
        try:
            with open(STATUS_FILE, "r", encoding="utf-8") as f:
                return json.load(f)
        except:
            pass

    return {"last_update": "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ", "status": "unknown"}


def save_status():
    """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —Å—Ç–∞—Ç—É—Å–∞"""
    status_data = {
        "last_update": datetime.now().strftime("%d.%m.%Y %H:%M:%S"),
        "status": "online",
    }

    with open(STATUS_FILE, "w", encoding="utf-8") as f:
        json.dump(status_data, f, ensure_ascii=False, indent=2)


@app.route("/")
def index():
    """–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º –±–æ—Ç–∞"""
    try:
        with open("status.json", "r", encoding="utf-8") as f:
            status_data = json.load(f)

        # –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
        current_member_count = update_member_count_sync()

        return render_template_string(
            INDEX_TEMPLATE, status=status_data, member_count=current_member_count
        )
    except FileNotFoundError:
        return render_template_string(
            INDEX_TEMPLATE,
            status={"last_update": "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ", "status": "offline"},
            member_count=member_count_cache,
        )
    except Exception as e:
        return render_template_string(
            INDEX_TEMPLATE,
            status={"last_update": "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏", "status": "error"},
            member_count=member_count_cache,
        )


@app.route("/status")
def status():
    """API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –±–æ—Ç–∞"""
    try:
        from datetime import timezone, timedelta

        status_data = load_status()

        # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –Ω–∞ –∞–∫—Ç—É–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –ë–∞–∫—É
        baku_tz = timezone(timedelta(hours=4))
        baku_time = datetime.now(baku_tz)
        status_data["current_time"] = baku_time.strftime("%d.%m.%Y %H:%M:%S")

        return jsonify(status_data)
    except Exception as e:
        return jsonify(
            {"last_update": "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏", "status": "error", "error": str(e)}
        )


@app.route("/member_count")
def get_member_count_api():
    """API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ Discord"""
    try:
        current_count = update_member_count_sync()
        return jsonify(
            {
                "member_count": current_count,
                "last_update": (
                    last_member_count_update.strftime("%d.%m.%Y %H:%M:%S")
                    if last_member_count_update
                    else "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
                ),
                "source": (
                    "discord_api"
                    if bot_instance and bot_instance.is_ready()
                    else "cache"
                ),
            }
        )
    except Exception as e:
        return jsonify(
            {"member_count": member_count_cache, "error": str(e), "source": "fallback"}
        )


@app.route("/update_status")
def update_status():
    """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ (–≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –±–æ—Ç–æ–º)"""
    save_status()
    return jsonify({"success": True, "message": "–°—Ç–∞—Ç—É—Å –æ–±–Ω–æ–≤–ª–µ–Ω"})


def run_web_server():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –≤–µ–±-—Å–µ—Ä–≤–µ—Ä Flask —Ç–æ–ª—å–∫–æ –Ω–∞ –ø–æ—Ä—Ç—É 5000"""
    import logging
    import socket

    # –û—Ç–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏ werkzeug –¥–ª—è —á–∏—Å—Ç–æ—Ç—ã –∫–æ–Ω—Å–æ–ª–∏
    logging.getLogger("werkzeug").setLevel(logging.ERROR)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –ø–æ—Ä—Ç–∞ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º
    try:
        with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
            s.settimeout(1)
            result = s.connect_ex(("127.0.0.1", 5000))
            if result == 0:
                print("‚ö†Ô∏è –ü–æ—Ä—Ç 5000 —É–∂–µ –∑–∞–Ω—è—Ç, –≤–µ–±-—Å–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω")
                return
    except Exception:
        pass  # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –ø–æ–ø—ã—Ç–∫—É –∑–∞–ø—É—Å–∫–∞

    try:
        print("üåê web_server: –ó–∞–ø—É—Å–∫ Flask –Ω–∞ –ø–æ—Ä—Ç—É 5000")
        app.run(
            host="0.0.0.0", port=5000, debug=False, use_reloader=False, threaded=True
        )
    except OSError as e:
        if "Address already in use" in str(e):
            print(f"‚ö†Ô∏è web_server: –ü–æ—Ä—Ç 5000 —É–∂–µ –∑–∞–Ω—è—Ç, –≤–µ–±-—Å–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω")
        else:
            print(f"‚ùå web_server: –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ –ø–æ—Ä—Ç—É 5000: {e}")
    except Exception as e:
        print(f"‚ùå web_server: –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ –ø–æ—Ä—Ç—É 5000: {e}")


@app.route("/api/status")
def get_status():
    """API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –±–æ—Ç–∞"""
    try:
        # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª —Å—Ç–∞—Ç—É—Å–∞
        status_data = {}
        try:
            with open("status.json", "r", encoding="utf-8") as f:
                status_data = json.load(f)
        except (FileNotFoundError, json.JSONDecodeError):
            # –ï—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
            status_data = {
                "last_update": datetime.now().strftime("%d.%m.%Y %H:%M:%S"),
                "status": "unknown",
            }

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö
        if bot_instance and bot_instance.is_ready():
            status_data["discord_status"] = "online"
            status_data["guild_count"] = len(bot_instance.guilds)
            status_data["user_count"] = sum(
                guild.member_count
                for guild in bot_instance.guilds
                if guild.member_count
            )
        else:
            status_data["discord_status"] = "offline"
            status_data["guild_count"] = 0
            status_data["user_count"] = 0

        return jsonify(status_data)
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞: {e}")
        return (
            jsonify(
                {
                    "error": "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ",
                    "discord_status": "unknown",
                    "guild_count": 0,
                    "user_count": 0,
                }
            ),
            500,
        )


# –í–µ–±-—Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –∏–∑ bot.py —á–µ—Ä–µ–∑ —Ñ—É–Ω–∫—Ü–∏—é run_web_server()
# –ê–≤—Ç–æ–∑–∞–ø—É—Å–∫ –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ –æ—Ç–∫–ª—é—á–µ–Ω
if __name__ == "__main__":
    # –≠—Ç–æ—Ç –±–ª–æ–∫ –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –ø—Ä—è–º–æ–º –∑–∞–ø—É—Å–∫–µ —Ñ–∞–π–ª–∞
    print("‚ö†Ô∏è web_server.py –Ω–µ –¥–æ–ª–∂–µ–Ω –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è –Ω–∞–ø—Ä—è–º—É—é. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ bot.py")
    import sys

    sys.exit(1)


def get_bot_status():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –±–æ—Ç–∞ –∏–∑ —Ñ–∞–π–ª–∞"""
    try:
        if os.path.exists("status.json"):
            with open("status.json", "r", encoding="utf-8") as f:
                data = json.load(f)
                return {
                    "status": data.get("status", "unknown"),
                    "last_update": data.get("last_update", "–ù–∏–∫–æ–≥–¥–∞"),
                    "guild_count": data.get("guild_count", 0),
                    "member_count": data.get("member_count", 0),
                }
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞: {e}")

    return {
        "status": "unknown",
        "last_update": "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
        "guild_count": 0,
        "member_count": 0,
    }
